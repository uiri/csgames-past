/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.intermediate.syntax3.parser;

import org.sablecc.sablecc.intermediate.syntax3.lexer.*;
import org.sablecc.sablecc.intermediate.syntax3.node.*;
import org.sablecc.sablecc.intermediate.syntax3.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AIntermediateRepresentation */
		    {
			ArrayList list = new0();
			push(goTo(0), list);
		    }
		    break;
                    case 1: /* reduce ALanguage */
		    {
			ArrayList list = new1();
			push(goTo(1), list);
		    }
		    break;
                    case 2: /* reduce AAlexer1Lexer */
		    {
			ArrayList list = new2();
			push(goTo(2), list);
		    }
		    break;
                    case 3: /* reduce AAlexer2Lexer */
		    {
			ArrayList list = new3();
			push(goTo(2), list);
		    }
		    break;
                    case 4: /* reduce AAlexer3Lexer */
		    {
			ArrayList list = new4();
			push(goTo(2), list);
		    }
		    break;
                    case 5: /* reduce AAlexer4Lexer */
		    {
			ArrayList list = new5();
			push(goTo(2), list);
		    }
		    break;
                    case 6: /* reduce AAlexer5Lexer */
		    {
			ArrayList list = new6();
			push(goTo(2), list);
		    }
		    break;
                    case 7: /* reduce AAlexer6Lexer */
		    {
			ArrayList list = new7();
			push(goTo(2), list);
		    }
		    break;
                    case 8: /* reduce AAlexer7Lexer */
		    {
			ArrayList list = new8();
			push(goTo(2), list);
		    }
		    break;
                    case 9: /* reduce AAlexer8Lexer */
		    {
			ArrayList list = new9();
			push(goTo(2), list);
		    }
		    break;
                    case 10: /* reduce AAlexer9Lexer */
		    {
			ArrayList list = new10();
			push(goTo(2), list);
		    }
		    break;
                    case 11: /* reduce AAlexer10Lexer */
		    {
			ArrayList list = new11();
			push(goTo(2), list);
		    }
		    break;
                    case 12: /* reduce AAlexer11Lexer */
		    {
			ArrayList list = new12();
			push(goTo(2), list);
		    }
		    break;
                    case 13: /* reduce AAlexer12Lexer */
		    {
			ArrayList list = new13();
			push(goTo(2), list);
		    }
		    break;
                    case 14: /* reduce AAlexer13Lexer */
		    {
			ArrayList list = new14();
			push(goTo(2), list);
		    }
		    break;
                    case 15: /* reduce AAlexer14Lexer */
		    {
			ArrayList list = new15();
			push(goTo(2), list);
		    }
		    break;
                    case 16: /* reduce AAlexer15Lexer */
		    {
			ArrayList list = new16();
			push(goTo(2), list);
		    }
		    break;
                    case 17: /* reduce AAlexer16Lexer */
		    {
			ArrayList list = new17();
			push(goTo(2), list);
		    }
		    break;
                    case 18: /* reduce AAlexer17Lexer */
		    {
			ArrayList list = new18();
			push(goTo(2), list);
		    }
		    break;
                    case 19: /* reduce AAlexer18Lexer */
		    {
			ArrayList list = new19();
			push(goTo(2), list);
		    }
		    break;
                    case 20: /* reduce AAlexer19Lexer */
		    {
			ArrayList list = new20();
			push(goTo(2), list);
		    }
		    break;
                    case 21: /* reduce AAlexer20Lexer */
		    {
			ArrayList list = new21();
			push(goTo(2), list);
		    }
		    break;
                    case 22: /* reduce AAlexer21Lexer */
		    {
			ArrayList list = new22();
			push(goTo(2), list);
		    }
		    break;
                    case 23: /* reduce AAlexer22Lexer */
		    {
			ArrayList list = new23();
			push(goTo(2), list);
		    }
		    break;
                    case 24: /* reduce AAlexer23Lexer */
		    {
			ArrayList list = new24();
			push(goTo(2), list);
		    }
		    break;
                    case 25: /* reduce AAlexer24Lexer */
		    {
			ArrayList list = new25();
			push(goTo(2), list);
		    }
		    break;
                    case 26: /* reduce AAlexer25Lexer */
		    {
			ArrayList list = new26();
			push(goTo(2), list);
		    }
		    break;
                    case 27: /* reduce AAlexer26Lexer */
		    {
			ArrayList list = new27();
			push(goTo(2), list);
		    }
		    break;
                    case 28: /* reduce AAlexer27Lexer */
		    {
			ArrayList list = new28();
			push(goTo(2), list);
		    }
		    break;
                    case 29: /* reduce AAlexer28Lexer */
		    {
			ArrayList list = new29();
			push(goTo(2), list);
		    }
		    break;
                    case 30: /* reduce AAlexer29Lexer */
		    {
			ArrayList list = new30();
			push(goTo(2), list);
		    }
		    break;
                    case 31: /* reduce AAlexer30Lexer */
		    {
			ArrayList list = new31();
			push(goTo(2), list);
		    }
		    break;
                    case 32: /* reduce AAlexer31Lexer */
		    {
			ArrayList list = new32();
			push(goTo(2), list);
		    }
		    break;
                    case 33: /* reduce AAlexer32Lexer */
		    {
			ArrayList list = new33();
			push(goTo(2), list);
		    }
		    break;
                    case 34: /* reduce AGroup */
		    {
			ArrayList list = new34();
			push(goTo(3), list);
		    }
		    break;
                    case 35: /* reduce ANormalToken */
		    {
			ArrayList list = new35();
			push(goTo(4), list);
		    }
		    break;
                    case 36: /* reduce ASelectionToken */
		    {
			ArrayList list = new36();
			push(goTo(4), list);
		    }
		    break;
                    case 37: /* reduce AName */
		    {
			ArrayList list = new37();
			push(goTo(5), list);
		    }
		    break;
                    case 38: /* reduce APublic */
		    {
			ArrayList list = new38();
			push(goTo(6), list);
		    }
		    break;
                    case 39: /* reduce ASelectorName */
		    {
			ArrayList list = new39();
			push(goTo(7), list);
		    }
		    break;
                    case 40: /* reduce AAgroups1Groups */
		    {
			ArrayList list = new40();
			push(goTo(8), list);
		    }
		    break;
                    case 41: /* reduce AAgroups2Groups */
		    {
			ArrayList list = new41();
			push(goTo(8), list);
		    }
		    break;
                    case 42: /* reduce AAinvestigators1Investigators */
		    {
			ArrayList list = new42();
			push(goTo(9), list);
		    }
		    break;
                    case 43: /* reduce AAinvestigators2Investigators */
		    {
			ArrayList list = new43();
			push(goTo(9), list);
		    }
		    break;
                    case 44: /* reduce AStringPart */
		    {
			ArrayList list = new44();
			push(goTo(10), list);
		    }
		    break;
                    case 45: /* reduce ATrueBoolean */
		    {
			ArrayList list = new45();
			push(goTo(11), list);
		    }
		    break;
                    case 46: /* reduce AFalseBoolean */
		    {
			ArrayList list = new46();
			push(goTo(11), list);
		    }
		    break;
                    case 47: /* reduce ATokenSelector */
		    {
			ArrayList list = new47();
			push(goTo(12), list);
		    }
		    break;
                    case 48: /* reduce AArgumentName */
		    {
			ArrayList list = new48();
			push(goTo(13), list);
		    }
		    break;
                    case 49: /* reduce AAtokens1Tokens */
		    {
			ArrayList list = new49();
			push(goTo(14), list);
		    }
		    break;
                    case 50: /* reduce AAtokens2Tokens */
		    {
			ArrayList list = new50();
			push(goTo(14), list);
		    }
		    break;
                    case 51: /* reduce ATokenInvestigator */
		    {
			ArrayList list = new51();
			push(goTo(15), list);
		    }
		    break;
                    case 52: /* reduce AAcontext1Context */
		    {
			ArrayList list = new52();
			push(goTo(16), list);
		    }
		    break;
                    case 53: /* reduce AAcontext2Context */
		    {
			ArrayList list = new53();
			push(goTo(16), list);
		    }
		    break;
                    case 54: /* reduce AAcontext3Context */
		    {
			ArrayList list = new54();
			push(goTo(16), list);
		    }
		    break;
                    case 55: /* reduce AAcontext4Context */
		    {
			ArrayList list = new55();
			push(goTo(16), list);
		    }
		    break;
                    case 56: /* reduce AAalphabet1Alphabet */
		    {
			ArrayList list = new56();
			push(goTo(17), list);
		    }
		    break;
                    case 57: /* reduce AAalphabet2Alphabet */
		    {
			ArrayList list = new57();
			push(goTo(17), list);
		    }
		    break;
                    case 58: /* reduce AAalphabet3Alphabet */
		    {
			ArrayList list = new58();
			push(goTo(17), list);
		    }
		    break;
                    case 59: /* reduce AAalphabet4Alphabet */
		    {
			ArrayList list = new59();
			push(goTo(17), list);
		    }
		    break;
                    case 60: /* reduce ASymbol */
		    {
			ArrayList list = new60();
			push(goTo(18), list);
		    }
		    break;
                    case 61: /* reduce AAinterval1Interval */
		    {
			ArrayList list = new61();
			push(goTo(19), list);
		    }
		    break;
                    case 62: /* reduce AAinterval2Interval */
		    {
			ArrayList list = new62();
			push(goTo(19), list);
		    }
		    break;
                    case 63: /* reduce AAinterval3Interval */
		    {
			ArrayList list = new63();
			push(goTo(19), list);
		    }
		    break;
                    case 64: /* reduce AAinterval4Interval */
		    {
			ArrayList list = new64();
			push(goTo(19), list);
		    }
		    break;
                    case 65: /* reduce AFrom */
		    {
			ArrayList list = new65();
			push(goTo(20), list);
		    }
		    break;
                    case 66: /* reduce ATo */
		    {
			ArrayList list = new66();
			push(goTo(21), list);
		    }
		    break;
                    case 67: /* reduce AAlexerautomaton1LexerAutomaton */
		    {
			ArrayList list = new67();
			push(goTo(22), list);
		    }
		    break;
                    case 68: /* reduce AAlexerautomaton2LexerAutomaton */
		    {
			ArrayList list = new68();
			push(goTo(22), list);
		    }
		    break;
                    case 69: /* reduce AMarker */
		    {
			ArrayList list = new69();
			push(goTo(23), list);
		    }
		    break;
                    case 70: /* reduce AAprogresslexerstate1LexerState */
		    {
			ArrayList list = new70();
			push(goTo(24), list);
		    }
		    break;
                    case 71: /* reduce AAprogresslexerstate2LexerState */
		    {
			ArrayList list = new71();
			push(goTo(24), list);
		    }
		    break;
                    case 72: /* reduce AAprogresslexerstate3LexerState */
		    {
			ArrayList list = new72();
			push(goTo(24), list);
		    }
		    break;
                    case 73: /* reduce AAprogresslexerstate4LexerState */
		    {
			ArrayList list = new73();
			push(goTo(24), list);
		    }
		    break;
                    case 74: /* reduce AAprogresslexerstate5LexerState */
		    {
			ArrayList list = new74();
			push(goTo(24), list);
		    }
		    break;
                    case 75: /* reduce AAprogresslexerstate6LexerState */
		    {
			ArrayList list = new75();
			push(goTo(24), list);
		    }
		    break;
                    case 76: /* reduce AAprogresslexerstate7LexerState */
		    {
			ArrayList list = new76();
			push(goTo(24), list);
		    }
		    break;
                    case 77: /* reduce AAprogresslexerstate8LexerState */
		    {
			ArrayList list = new77();
			push(goTo(24), list);
		    }
		    break;
                    case 78: /* reduce AAtokenlexerstate1LexerState */
		    {
			ArrayList list = new78();
			push(goTo(24), list);
		    }
		    break;
                    case 79: /* reduce AAtokenlexerstate2LexerState */
		    {
			ArrayList list = new79();
			push(goTo(24), list);
		    }
		    break;
                    case 80: /* reduce AEndExpected */
		    {
			ArrayList list = new80();
			push(goTo(25), list);
		    }
		    break;
                    case 81: /* reduce ABackCount */
		    {
			ArrayList list = new81();
			push(goTo(26), list);
		    }
		    break;
                    case 82: /* reduce ATokenName */
		    {
			ArrayList list = new82();
			push(goTo(27), list);
		    }
		    break;
                    case 83: /* reduce AAlexertransition1LexerTransition */
		    {
			ArrayList list = new83();
			push(goTo(28), list);
		    }
		    break;
                    case 84: /* reduce AAlexertransition2LexerTransition */
		    {
			ArrayList list = new84();
			push(goTo(28), list);
		    }
		    break;
                    case 85: /* reduce ASymbolName */
		    {
			ArrayList list = new85();
			push(goTo(29), list);
		    }
		    break;
                    case 86: /* reduce ATargetName */
		    {
			ArrayList list = new86();
			push(goTo(30), list);
		    }
		    break;
                    case 87: /* reduce AAcceptLexerAction */
		    {
			ArrayList list = new87();
			push(goTo(31), list);
		    }
		    break;
                    case 88: /* reduce AIgnoreLexerAction */
		    {
			ArrayList list = new88();
			push(goTo(31), list);
		    }
		    break;
                    case 89: /* reduce ARejectLexerAction */
		    {
			ArrayList list = new89();
			push(goTo(31), list);
		    }
		    break;
                    case 90: /* reduce AParseLexerAction */
		    {
			ArrayList list = new90();
			push(goTo(31), list);
		    }
		    break;
                    case 91: /* reduce AStartName */
		    {
			ArrayList list = new91();
			push(goTo(32), list);
		    }
		    break;
                    case 92: /* reduce AAparser1Parser */
		    {
			ArrayList list = new92();
			push(goTo(33), list);
		    }
		    break;
                    case 93: /* reduce AAparser2Parser */
		    {
			ArrayList list = new93();
			push(goTo(33), list);
		    }
		    break;
                    case 94: /* reduce AAparser3Parser */
		    {
			ArrayList list = new94();
			push(goTo(33), list);
		    }
		    break;
                    case 95: /* reduce AAparser4Parser */
		    {
			ArrayList list = new95();
			push(goTo(33), list);
		    }
		    break;
                    case 96: /* reduce AAparser5Parser */
		    {
			ArrayList list = new96();
			push(goTo(33), list);
		    }
		    break;
                    case 97: /* reduce AAparser6Parser */
		    {
			ArrayList list = new97();
			push(goTo(33), list);
		    }
		    break;
                    case 98: /* reduce AAparser7Parser */
		    {
			ArrayList list = new98();
			push(goTo(33), list);
		    }
		    break;
                    case 99: /* reduce AAparser8Parser */
		    {
			ArrayList list = new99();
			push(goTo(33), list);
		    }
		    break;
                    case 100: /* reduce AAparser9Parser */
		    {
			ArrayList list = new100();
			push(goTo(33), list);
		    }
		    break;
                    case 101: /* reduce AAparser10Parser */
		    {
			ArrayList list = new101();
			push(goTo(33), list);
		    }
		    break;
                    case 102: /* reduce AAparser11Parser */
		    {
			ArrayList list = new102();
			push(goTo(33), list);
		    }
		    break;
                    case 103: /* reduce AAparser12Parser */
		    {
			ArrayList list = new103();
			push(goTo(33), list);
		    }
		    break;
                    case 104: /* reduce AAparser13Parser */
		    {
			ArrayList list = new104();
			push(goTo(33), list);
		    }
		    break;
                    case 105: /* reduce AAparser14Parser */
		    {
			ArrayList list = new105();
			push(goTo(33), list);
		    }
		    break;
                    case 106: /* reduce AAparser15Parser */
		    {
			ArrayList list = new106();
			push(goTo(33), list);
		    }
		    break;
                    case 107: /* reduce AAparser16Parser */
		    {
			ArrayList list = new107();
			push(goTo(33), list);
		    }
		    break;
                    case 108: /* reduce AAparser17Parser */
		    {
			ArrayList list = new108();
			push(goTo(33), list);
		    }
		    break;
                    case 109: /* reduce AAparser18Parser */
		    {
			ArrayList list = new109();
			push(goTo(33), list);
		    }
		    break;
                    case 110: /* reduce AAparser19Parser */
		    {
			ArrayList list = new110();
			push(goTo(33), list);
		    }
		    break;
                    case 111: /* reduce AAparser20Parser */
		    {
			ArrayList list = new111();
			push(goTo(33), list);
		    }
		    break;
                    case 112: /* reduce AAparser21Parser */
		    {
			ArrayList list = new112();
			push(goTo(33), list);
		    }
		    break;
                    case 113: /* reduce AAparser22Parser */
		    {
			ArrayList list = new113();
			push(goTo(33), list);
		    }
		    break;
                    case 114: /* reduce AAparser23Parser */
		    {
			ArrayList list = new114();
			push(goTo(33), list);
		    }
		    break;
                    case 115: /* reduce AAparser24Parser */
		    {
			ArrayList list = new115();
			push(goTo(33), list);
		    }
		    break;
                    case 116: /* reduce AAparser25Parser */
		    {
			ArrayList list = new116();
			push(goTo(33), list);
		    }
		    break;
                    case 117: /* reduce AAparser26Parser */
		    {
			ArrayList list = new117();
			push(goTo(33), list);
		    }
		    break;
                    case 118: /* reduce AAparser27Parser */
		    {
			ArrayList list = new118();
			push(goTo(33), list);
		    }
		    break;
                    case 119: /* reduce AAparser28Parser */
		    {
			ArrayList list = new119();
			push(goTo(33), list);
		    }
		    break;
                    case 120: /* reduce AAparser29Parser */
		    {
			ArrayList list = new120();
			push(goTo(33), list);
		    }
		    break;
                    case 121: /* reduce AAparser30Parser */
		    {
			ArrayList list = new121();
			push(goTo(33), list);
		    }
		    break;
                    case 122: /* reduce AAparser31Parser */
		    {
			ArrayList list = new122();
			push(goTo(33), list);
		    }
		    break;
                    case 123: /* reduce AAparser32Parser */
		    {
			ArrayList list = new123();
			push(goTo(33), list);
		    }
		    break;
                    case 124: /* reduce AProduction */
		    {
			ArrayList list = new124();
			push(goTo(34), list);
		    }
		    break;
                    case 125: /* reduce AAalternative1Alternative */
		    {
			ArrayList list = new125();
			push(goTo(35), list);
		    }
		    break;
                    case 126: /* reduce AAalternative2Alternative */
		    {
			ArrayList list = new126();
			push(goTo(35), list);
		    }
		    break;
                    case 127: /* reduce AElement */
		    {
			ArrayList list = new127();
			push(goTo(36), list);
		    }
		    break;
                    case 128: /* reduce ASingleElementType */
		    {
			ArrayList list = new128();
			push(goTo(37), list);
		    }
		    break;
                    case 129: /* reduce AListElementType */
		    {
			ArrayList list = new129();
			push(goTo(37), list);
		    }
		    break;
                    case 130: /* reduce AOneSingleType */
		    {
			ArrayList list = new130();
			push(goTo(38), list);
		    }
		    break;
                    case 131: /* reduce AZeroOrOneSingleType */
		    {
			ArrayList list = new131();
			push(goTo(38), list);
		    }
		    break;
                    case 132: /* reduce ANumberListType */
		    {
			ArrayList list = new132();
			push(goTo(39), list);
		    }
		    break;
                    case 133: /* reduce AIntervalListType */
		    {
			ArrayList list = new133();
			push(goTo(39), list);
		    }
		    break;
                    case 134: /* reduce AAtLeastListType */
		    {
			ArrayList list = new134();
			push(goTo(39), list);
		    }
		    break;
                    case 135: /* reduce ASeparatedNumberListType */
		    {
			ArrayList list = new135();
			push(goTo(39), list);
		    }
		    break;
                    case 136: /* reduce ASeparatedIntervalListType */
		    {
			ArrayList list = new136();
			push(goTo(39), list);
		    }
		    break;
                    case 137: /* reduce ASeparatedAtLeastListType */
		    {
			ArrayList list = new137();
			push(goTo(39), list);
		    }
		    break;
                    case 138: /* reduce ASeparator */
		    {
			ArrayList list = new138();
			push(goTo(40), list);
		    }
		    break;
                    case 139: /* reduce AAparseproduction1ParseProduction */
		    {
			ArrayList list = new139();
			push(goTo(41), list);
		    }
		    break;
                    case 140: /* reduce AAparseproduction2ParseProduction */
		    {
			ArrayList list = new140();
			push(goTo(41), list);
		    }
		    break;
                    case 141: /* reduce ARetainedElement */
		    {
			ArrayList list = new141();
			push(goTo(42), list);
		    }
		    break;
                    case 142: /* reduce AAparsealternative1ParseAlternative */
		    {
			ArrayList list = new142();
			push(goTo(43), list);
		    }
		    break;
                    case 143: /* reduce AAparsealternative2ParseAlternative */
		    {
			ArrayList list = new143();
			push(goTo(43), list);
		    }
		    break;
                    case 144: /* reduce AAparsealternative3ParseAlternative */
		    {
			ArrayList list = new144();
			push(goTo(43), list);
		    }
		    break;
                    case 145: /* reduce AAparsealternative4ParseAlternative */
		    {
			ArrayList list = new145();
			push(goTo(43), list);
		    }
		    break;
                    case 146: /* reduce AParseElement */
		    {
			ArrayList list = new146();
			push(goTo(44), list);
		    }
		    break;
                    case 147: /* reduce ATransformation */
		    {
			ArrayList list = new147();
			push(goTo(45), list);
		    }
		    break;
                    case 148: /* reduce ARetainedElementName */
		    {
			ArrayList list = new148();
			push(goTo(46), list);
		    }
		    break;
                    case 149: /* reduce AParseElementName */
		    {
			ArrayList list = new149();
			push(goTo(47), list);
		    }
		    break;
                    case 150: /* reduce ANullValue */
		    {
			ArrayList list = new150();
			push(goTo(48), list);
		    }
		    break;
                    case 151: /* reduce AReferenceValue */
		    {
			ArrayList list = new151();
			push(goTo(48), list);
		    }
		    break;
                    case 152: /* reduce AAnewvalue1Value */
		    {
			ArrayList list = new152();
			push(goTo(48), list);
		    }
		    break;
                    case 153: /* reduce AAnewvalue2Value */
		    {
			ArrayList list = new153();
			push(goTo(48), list);
		    }
		    break;
                    case 154: /* reduce AAnumbervalue1Value */
		    {
			ArrayList list = new154();
			push(goTo(48), list);
		    }
		    break;
                    case 155: /* reduce AAnumbervalue2Value */
		    {
			ArrayList list = new155();
			push(goTo(48), list);
		    }
		    break;
                    case 156: /* reduce AAintervalvalue1Value */
		    {
			ArrayList list = new156();
			push(goTo(48), list);
		    }
		    break;
                    case 157: /* reduce AAintervalvalue2Value */
		    {
			ArrayList list = new157();
			push(goTo(48), list);
		    }
		    break;
                    case 158: /* reduce AAatleastvalue1Value */
		    {
			ArrayList list = new158();
			push(goTo(48), list);
		    }
		    break;
                    case 159: /* reduce AAatleastvalue2Value */
		    {
			ArrayList list = new159();
			push(goTo(48), list);
		    }
		    break;
                    case 160: /* reduce AAseparatednumbervalue1Value */
		    {
			ArrayList list = new160();
			push(goTo(48), list);
		    }
		    break;
                    case 161: /* reduce AAseparatednumbervalue2Value */
		    {
			ArrayList list = new161();
			push(goTo(48), list);
		    }
		    break;
                    case 162: /* reduce AAseparatedintervalvalue1Value */
		    {
			ArrayList list = new162();
			push(goTo(48), list);
		    }
		    break;
                    case 163: /* reduce AAseparatedintervalvalue2Value */
		    {
			ArrayList list = new163();
			push(goTo(48), list);
		    }
		    break;
                    case 164: /* reduce AAseparatedatleastvalue1Value */
		    {
			ArrayList list = new164();
			push(goTo(48), list);
		    }
		    break;
                    case 165: /* reduce AAseparatedatleastvalue2Value */
		    {
			ArrayList list = new165();
			push(goTo(48), list);
		    }
		    break;
                    case 166: /* reduce AReferenceListValue */
		    {
			ArrayList list = new166();
			push(goTo(49), list);
		    }
		    break;
                    case 167: /* reduce AListReferenceListValue */
		    {
			ArrayList list = new167();
			push(goTo(49), list);
		    }
		    break;
                    case 168: /* reduce AAnewlistvalue1ListValue */
		    {
			ArrayList list = new168();
			push(goTo(49), list);
		    }
		    break;
                    case 169: /* reduce AAnewlistvalue2ListValue */
		    {
			ArrayList list = new169();
			push(goTo(49), list);
		    }
		    break;
                    case 170: /* reduce AStart */
		    {
			ArrayList list = new170();
			push(goTo(50), list);
		    }
		    break;
                    case 171: /* reduce AParserAutomaton */
		    {
			ArrayList list = new171();
			push(goTo(51), list);
		    }
		    break;
                    case 172: /* reduce AAparserstate1ParserState */
		    {
			ArrayList list = new172();
			push(goTo(52), list);
		    }
		    break;
                    case 173: /* reduce AAparserstate2ParserState */
		    {
			ArrayList list = new173();
			push(goTo(52), list);
		    }
		    break;
                    case 174: /* reduce AAparserstate3ParserState */
		    {
			ArrayList list = new174();
			push(goTo(52), list);
		    }
		    break;
                    case 175: /* reduce AAparserstate4ParserState */
		    {
			ArrayList list = new175();
			push(goTo(52), list);
		    }
		    break;
                    case 176: /* reduce AInvestigatorName */
		    {
			ArrayList list = new176();
			push(goTo(53), list);
		    }
		    break;
                    case 177: /* reduce AAparserinvestigator1ParserInvestigator */
		    {
			ArrayList list = new177();
			push(goTo(54), list);
		    }
		    break;
                    case 178: /* reduce AAparserinvestigator2ParserInvestigator */
		    {
			ArrayList list = new178();
			push(goTo(54), list);
		    }
		    break;
                    case 179: /* reduce ANoLookDecision */
		    {
			ArrayList list = new179();
			push(goTo(55), list);
		    }
		    break;
                    case 180: /* reduce ALookDecision */
		    {
			ArrayList list = new180();
			push(goTo(55), list);
		    }
		    break;
                    case 181: /* reduce AAdepth1Depth */
		    {
			ArrayList list = new181();
			push(goTo(56), list);
		    }
		    break;
                    case 182: /* reduce AAdepth2Depth */
		    {
			ArrayList list = new182();
			push(goTo(56), list);
		    }
		    break;
                    case 183: /* reduce AAdepth3Depth */
		    {
			ArrayList list = new183();
			push(goTo(56), list);
		    }
		    break;
                    case 184: /* reduce AAdepth4Depth */
		    {
			ArrayList list = new184();
			push(goTo(56), list);
		    }
		    break;
                    case 185: /* reduce ALookDepth */
		    {
			ArrayList list = new185();
			push(goTo(57), list);
		    }
		    break;
                    case 186: /* reduce AContextName */
		    {
			ArrayList list = new186();
			push(goTo(58), list);
		    }
		    break;
                    case 187: /* reduce AChoice */
		    {
			ArrayList list = new187();
			push(goTo(59), list);
		    }
		    break;
                    case 188: /* reduce ACondition */
		    {
			ArrayList list = new188();
			push(goTo(60), list);
		    }
		    break;
                    case 189: /* reduce AAlooksymbol1LookSymbol */
		    {
			ArrayList list = new189();
			push(goTo(61), list);
		    }
		    break;
                    case 190: /* reduce AAlooksymbol2LookSymbol */
		    {
			ArrayList list = new190();
			push(goTo(61), list);
		    }
		    break;
                    case 191: /* reduce AShiftAction */
		    {
			ArrayList list = new191();
			push(goTo(62), list);
		    }
		    break;
                    case 192: /* reduce AReduceAction */
		    {
			ArrayList list = new192();
			push(goTo(62), list);
		    }
		    break;
                    case 193: /* reduce ASelectionAction */
		    {
			ArrayList list = new193();
			push(goTo(62), list);
		    }
		    break;
                    case 194: /* reduce ATreeAction */
		    {
			ArrayList list = new194();
			push(goTo(62), list);
		    }
		    break;
                    case 195: /* reduce ATokenAction */
		    {
			ArrayList list = new195();
			push(goTo(62), list);
		    }
		    break;
                    case 196: /* reduce AParseAlternativeName */
		    {
			ArrayList list = new196();
			push(goTo(63), list);
		    }
		    break;
                    case 197: /* reduce AExpectedSelection */
		    {
			ArrayList list = new197();
			push(goTo(64), list);
		    }
		    break;
                    case 198: /* reduce AParseProductionName */
		    {
			ArrayList list = new198();
			push(goTo(65), list);
		    }
		    break;
                    case 199: /* reduce AAparserselector1ParserSelector */
		    {
			ArrayList list = new199();
			push(goTo(66), list);
		    }
		    break;
                    case 200: /* reduce AAparserselector2ParserSelector */
		    {
			ArrayList list = new200();
			push(goTo(66), list);
		    }
		    break;
                    case 201: /* reduce ATokenParserTransition */
		    {
			ArrayList list = new201();
			push(goTo(67), list);
		    }
		    break;
                    case 202: /* reduce AProductionParserTransition */
		    {
			ArrayList list = new202();
			push(goTo(67), list);
		    }
		    break;
                    case 203: /* reduce ATerminal$Group */
		    {
			ArrayList list = new203();
			push(goTo(68), list);
		    }
		    break;
                    case 204: /* reduce ANonTerminal$Group */
		    {
			ArrayList list = new204();
			push(goTo(68), list);
		    }
		    break;
                    case 205: /* reduce ATerminal$Token */
		    {
			ArrayList list = new205();
			push(goTo(69), list);
		    }
		    break;
                    case 206: /* reduce ANonTerminal$Token */
		    {
			ArrayList list = new206();
			push(goTo(69), list);
		    }
		    break;
                    case 207: /* reduce ATerminal$TokenSelector */
		    {
			ArrayList list = new207();
			push(goTo(70), list);
		    }
		    break;
                    case 208: /* reduce ANonTerminal$TokenSelector */
		    {
			ArrayList list = new208();
			push(goTo(70), list);
		    }
		    break;
                    case 209: /* reduce ATerminal$Context */
		    {
			ArrayList list = new209();
			push(goTo(71), list);
		    }
		    break;
                    case 210: /* reduce ANonTerminal$Context */
		    {
			ArrayList list = new210();
			push(goTo(71), list);
		    }
		    break;
                    case 211: /* reduce ATerminal$TokenInvestigator */
		    {
			ArrayList list = new211();
			push(goTo(72), list);
		    }
		    break;
                    case 212: /* reduce ANonTerminal$TokenInvestigator */
		    {
			ArrayList list = new212();
			push(goTo(72), list);
		    }
		    break;
                    case 213: /* reduce ATerminal$StringPart */
		    {
			ArrayList list = new213();
			push(goTo(73), list);
		    }
		    break;
                    case 214: /* reduce ANonTerminal$StringPart */
		    {
			ArrayList list = new214();
			push(goTo(73), list);
		    }
		    break;
                    case 215: /* reduce ATerminal$LexerAction */
		    {
			ArrayList list = new215();
			push(goTo(74), list);
		    }
		    break;
                    case 216: /* reduce ANonTerminal$LexerAction */
		    {
			ArrayList list = new216();
			push(goTo(74), list);
		    }
		    break;
                    case 217: /* reduce ATerminal$Symbol */
		    {
			ArrayList list = new217();
			push(goTo(75), list);
		    }
		    break;
                    case 218: /* reduce ANonTerminal$Symbol */
		    {
			ArrayList list = new218();
			push(goTo(75), list);
		    }
		    break;
                    case 219: /* reduce ATerminal$Interval */
		    {
			ArrayList list = new219();
			push(goTo(76), list);
		    }
		    break;
                    case 220: /* reduce ANonTerminal$Interval */
		    {
			ArrayList list = new220();
			push(goTo(76), list);
		    }
		    break;
                    case 221: /* reduce ATerminal$LexerState */
		    {
			ArrayList list = new221();
			push(goTo(77), list);
		    }
		    break;
                    case 222: /* reduce ANonTerminal$LexerState */
		    {
			ArrayList list = new222();
			push(goTo(77), list);
		    }
		    break;
                    case 223: /* reduce ATerminal$Marker */
		    {
			ArrayList list = new223();
			push(goTo(78), list);
		    }
		    break;
                    case 224: /* reduce ANonTerminal$Marker */
		    {
			ArrayList list = new224();
			push(goTo(78), list);
		    }
		    break;
                    case 225: /* reduce ATerminal$LexerTransition */
		    {
			ArrayList list = new225();
			push(goTo(79), list);
		    }
		    break;
                    case 226: /* reduce ANonTerminal$LexerTransition */
		    {
			ArrayList list = new226();
			push(goTo(79), list);
		    }
		    break;
                    case 227: /* reduce ATerminal$Production */
		    {
			ArrayList list = new227();
			push(goTo(80), list);
		    }
		    break;
                    case 228: /* reduce ANonTerminal$Production */
		    {
			ArrayList list = new228();
			push(goTo(80), list);
		    }
		    break;
                    case 229: /* reduce ATerminal$ParseProduction */
		    {
			ArrayList list = new229();
			push(goTo(81), list);
		    }
		    break;
                    case 230: /* reduce ANonTerminal$ParseProduction */
		    {
			ArrayList list = new230();
			push(goTo(81), list);
		    }
		    break;
                    case 231: /* reduce ATerminal$Start */
		    {
			ArrayList list = new231();
			push(goTo(82), list);
		    }
		    break;
                    case 232: /* reduce ANonTerminal$Start */
		    {
			ArrayList list = new232();
			push(goTo(82), list);
		    }
		    break;
                    case 233: /* reduce ATerminal$ParserInvestigator */
		    {
			ArrayList list = new233();
			push(goTo(83), list);
		    }
		    break;
                    case 234: /* reduce ANonTerminal$ParserInvestigator */
		    {
			ArrayList list = new234();
			push(goTo(83), list);
		    }
		    break;
                    case 235: /* reduce ATerminal$ParserSelector */
		    {
			ArrayList list = new235();
			push(goTo(84), list);
		    }
		    break;
                    case 236: /* reduce ANonTerminal$ParserSelector */
		    {
			ArrayList list = new236();
			push(goTo(84), list);
		    }
		    break;
                    case 237: /* reduce ATerminal$Alternative */
		    {
			ArrayList list = new237();
			push(goTo(85), list);
		    }
		    break;
                    case 238: /* reduce ANonTerminal$Alternative */
		    {
			ArrayList list = new238();
			push(goTo(85), list);
		    }
		    break;
                    case 239: /* reduce ATerminal$Element */
		    {
			ArrayList list = new239();
			push(goTo(86), list);
		    }
		    break;
                    case 240: /* reduce ANonTerminal$Element */
		    {
			ArrayList list = new240();
			push(goTo(86), list);
		    }
		    break;
                    case 241: /* reduce ATerminal$ParseAlternative */
		    {
			ArrayList list = new241();
			push(goTo(87), list);
		    }
		    break;
                    case 242: /* reduce ANonTerminal$ParseAlternative */
		    {
			ArrayList list = new242();
			push(goTo(87), list);
		    }
		    break;
                    case 243: /* reduce ATerminal$RetainedElement */
		    {
			ArrayList list = new243();
			push(goTo(88), list);
		    }
		    break;
                    case 244: /* reduce ANonTerminal$RetainedElement */
		    {
			ArrayList list = new244();
			push(goTo(88), list);
		    }
		    break;
                    case 245: /* reduce ATerminal$ParseElement */
		    {
			ArrayList list = new245();
			push(goTo(89), list);
		    }
		    break;
                    case 246: /* reduce ANonTerminal$ParseElement */
		    {
			ArrayList list = new246();
			push(goTo(89), list);
		    }
		    break;
                    case 247: /* reduce ATerminal$Transformation */
		    {
			ArrayList list = new247();
			push(goTo(90), list);
		    }
		    break;
                    case 248: /* reduce ANonTerminal$Transformation */
		    {
			ArrayList list = new248();
			push(goTo(90), list);
		    }
		    break;
                    case 249: /* reduce ATerminal$Value */
		    {
			ArrayList list = new249();
			push(goTo(91), list);
		    }
		    break;
                    case 250: /* reduce ANonTerminal$Value */
		    {
			ArrayList list = new250();
			push(goTo(91), list);
		    }
		    break;
                    case 251: /* reduce ATerminal$ListValue */
		    {
			ArrayList list = new251();
			push(goTo(92), list);
		    }
		    break;
                    case 252: /* reduce ANonTerminal$ListValue */
		    {
			ArrayList list = new252();
			push(goTo(92), list);
		    }
		    break;
                    case 253: /* reduce ATerminal$ParserState */
		    {
			ArrayList list = new253();
			push(goTo(93), list);
		    }
		    break;
                    case 254: /* reduce ANonTerminal$ParserState */
		    {
			ArrayList list = new254();
			push(goTo(93), list);
		    }
		    break;
                    case 255: /* reduce ATerminal$ParserTransition */
		    {
			ArrayList list = new255();
			push(goTo(94), list);
		    }
		    break;
                    case 256: /* reduce ANonTerminal$ParserTransition */
		    {
			ArrayList list = new256();
			push(goTo(94), list);
		    }
		    break;
                    case 257: /* reduce ATerminal$Depth */
		    {
			ArrayList list = new257();
			push(goTo(95), list);
		    }
		    break;
                    case 258: /* reduce ANonTerminal$Depth */
		    {
			ArrayList list = new258();
			push(goTo(95), list);
		    }
		    break;
                    case 259: /* reduce ATerminal$Choice */
		    {
			ArrayList list = new259();
			push(goTo(96), list);
		    }
		    break;
                    case 260: /* reduce ANonTerminal$Choice */
		    {
			ArrayList list = new260();
			push(goTo(96), list);
		    }
		    break;
                    case 261: /* reduce ATerminal$Condition */
		    {
			ArrayList list = new261();
			push(goTo(97), list);
		    }
		    break;
                    case 262: /* reduce ANonTerminal$Condition */
		    {
			ArrayList list = new262();
			push(goTo(97), list);
		    }
		    break;
                    case 263: /* reduce ATerminal$LookSymbol */
		    {
			ArrayList list = new263();
			push(goTo(98), list);
		    }
		    break;
                    case 264: /* reduce ANonTerminal$LookSymbol */
		    {
			ArrayList list = new264();
			push(goTo(98), list);
		    }
		    break;
                    case 265: /* reduce ATerminal$ExpectedSelection */
		    {
			ArrayList list = new265();
			push(goTo(99), list);
		    }
		    break;
                    case 266: /* reduce ANonTerminal$ExpectedSelection */
		    {
			ArrayList list = new266();
			push(goTo(99), list);
		    }
		    break;
                    case 267: /* reduce ATerminal$ParseProductionName */
		    {
			ArrayList list = new267();
			push(goTo(100), list);
		    }
		    break;
                    case 268: /* reduce ANonTerminal$ParseProductionName */
		    {
			ArrayList list = new268();
			push(goTo(100), list);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PIntermediateRepresentation node1 = (PIntermediateRepresentation) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AIntermediateRepresentation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PIntermediateRepresentation pintermediaterepresentationNode1;
        {
            // Block
        PLanguage planguageNode2;
        PLexer plexerNode3;
        PParser pparserNode4;
        planguageNode2 = (PLanguage)nodeArrayList1.get(0);
        plexerNode3 = (PLexer)nodeArrayList2.get(0);
        pparserNode4 = (PParser)nodeArrayList3.get(0);

        pintermediaterepresentationNode1 = new AIntermediateRepresentation(planguageNode2, plexerNode3, pparserNode4);
        }
	nodeList.add(pintermediaterepresentationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce ALanguage */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLanguage planguageNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList3.get(0);

        planguageNode1 = new ALanguage(tstringNode2);
        }
	nodeList.add(planguageNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AAlexer1Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode2, listNode3, listNode4, listNode5, listNode6);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AAlexer2Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode3, listNode4, listNode5, listNode6, listNode7);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AAlexer3Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode2, listNode4, listNode5, listNode6, listNode7);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce AAlexer4Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode3, listNode5, listNode6, listNode7, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce AAlexer5Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode2, listNode3, listNode5, listNode6, listNode7);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce AAlexer6Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode3, listNode4, listNode6, listNode7, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce AAlexer7Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode2, listNode4, listNode6, listNode7, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce AAlexer8Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode3, listNode5, listNode7, listNode8, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce AAlexer9Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode2, listNode3, listNode4, listNode6, listNode7);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce AAlexer10Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode3, listNode4, listNode5, listNode7, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce AAlexer11Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode2, listNode4, listNode5, listNode7, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce AAlexer12Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode3, listNode5, listNode6, listNode8, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce AAlexer13Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode2, listNode3, listNode5, listNode7, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce AAlexer14Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode3, listNode4, listNode6, listNode8, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce AAlexer15Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode2, listNode4, listNode6, listNode8, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce AAlexer16Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList6.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(listNode3, listNode5, listNode7, listNode9, listNode10);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce AAlexer17Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        plexerNode1 = new ALexer(listNode2, listNode3, listNode4, listNode5, listNode7);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce AAlexer18Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        plexerNode1 = new ALexer(listNode3, listNode4, listNode5, listNode6, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce AAlexer19Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        plexerNode1 = new ALexer(listNode2, listNode4, listNode5, listNode6, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce AAlexer20Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList5.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        plexerNode1 = new ALexer(listNode3, listNode5, listNode6, listNode7, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce AAlexer21Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        plexerNode1 = new ALexer(listNode2, listNode3, listNode5, listNode6, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AAlexer22Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList5.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        plexerNode1 = new ALexer(listNode3, listNode4, listNode6, listNode7, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce AAlexer23Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList5.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        plexerNode1 = new ALexer(listNode2, listNode4, listNode6, listNode7, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce AAlexer24Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList6.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        plexerNode1 = new ALexer(listNode3, listNode5, listNode7, listNode8, listNode10);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce AAlexer25Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        plexerNode1 = new ALexer(listNode2, listNode3, listNode4, listNode6, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce AAlexer26Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList5.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        plexerNode1 = new ALexer(listNode3, listNode4, listNode5, listNode7, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce AAlexer27Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList5.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        plexerNode1 = new ALexer(listNode2, listNode4, listNode5, listNode7, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce AAlexer28Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList6.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        plexerNode1 = new ALexer(listNode3, listNode5, listNode6, listNode8, listNode10);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce AAlexer29Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList5.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        plexerNode1 = new ALexer(listNode2, listNode3, listNode5, listNode7, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new31() /* reduce AAlexer30Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList6.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        plexerNode1 = new ALexer(listNode3, listNode4, listNode6, listNode8, listNode10);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new32() /* reduce AAlexer31Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList6.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        plexerNode1 = new ALexer(listNode2, listNode4, listNode6, listNode8, listNode10);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new33() /* reduce AAlexer32Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode11 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList6.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        {
            // Block
        LinkedList listNode10 = new LinkedList();
        listNode10 = (LinkedList)nodeArrayList7.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        plexerNode1 = new ALexer(listNode3, listNode5, listNode7, listNode9, listNode11);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new34() /* reduce AGroup */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGroup pgroupNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList3.get(0);

        pgroupNode1 = new AGroup(tstringNode2);
        }
	nodeList.add(pgroupNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new35() /* reduce ANormalToken */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PToken ptokenNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList6.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        ptokenNode1 = new ANormalToken(tstringNode2, pbooleanNode3, listNode5, listNode7);
        }
	nodeList.add(ptokenNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new36() /* reduce ASelectionToken */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PToken ptokenNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TString tstringNode4;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tstringNode4 = (TString)nodeArrayList5.get(0);

        ptokenNode1 = new ASelectionToken(tstringNode2, pbooleanNode3, tstringNode4);
        }
	nodeList.add(ptokenNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new37() /* reduce AName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new38() /* reduce APublic */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBoolean pbooleanNode1;
        pbooleanNode1 = (PBoolean)nodeArrayList3.get(0);
	nodeList.add(pbooleanNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new39() /* reduce ASelectorName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new40() /* reduce AAgroups1Groups */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new41() /* reduce AAgroups2Groups */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList3.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new42() /* reduce AAinvestigators1Investigators */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new43() /* reduce AAinvestigators2Investigators */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList3.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new44() /* reduce AStringPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList1.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new45() /* reduce ATrueBoolean */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBoolean pbooleanNode1;
        {
            // Block

        pbooleanNode1 = new ATrueBoolean();
        }
	nodeList.add(pbooleanNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new46() /* reduce AFalseBoolean */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBoolean pbooleanNode1;
        {
            // Block

        pbooleanNode1 = new AFalseBoolean();
        }
	nodeList.add(pbooleanNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new47() /* reduce ATokenSelector */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTokenSelector ptokenselectorNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        LinkedList listNode5 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList1.get(0);
        tstringNode3 = (TString)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        ptokenselectorNode1 = new ATokenSelector(tstringNode2, tstringNode3, listNode5);
        }
	nodeList.add(ptokenselectorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new48() /* reduce AArgumentName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new49() /* reduce AAtokens1Tokens */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new50() /* reduce AAtokens2Tokens */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList3.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new51() /* reduce ATokenInvestigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTokenInvestigator ptokeninvestigatorNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        tstringNode2 = (TString)nodeArrayList1.get(0);
        tstringNode3 = (TString)nodeArrayList2.get(0);

        ptokeninvestigatorNode1 = new ATokenInvestigator(tstringNode2, tstringNode3);
        }
	nodeList.add(ptokeninvestigatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new52() /* reduce AAcontext1Context */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PContext pcontextNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PAlphabet palphabetNode3;
        PLexerAutomaton plexerautomatonNode4;
        LinkedList listNode5 = new LinkedList();
        palphabetNode3 = (PAlphabet)nodeArrayList1.get(0);
        plexerautomatonNode4 = (PLexerAutomaton)nodeArrayList2.get(0);
        {
            // Block
        }

        pcontextNode1 = new AContext(null, palphabetNode3, plexerautomatonNode4, listNode5);
        }
	nodeList.add(pcontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new53() /* reduce AAcontext2Context */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PContext pcontextNode1;
        {
            // Block
        TString tstringNode2;
        PAlphabet palphabetNode3;
        PLexerAutomaton plexerautomatonNode4;
        LinkedList listNode5 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList1.get(0);
        palphabetNode3 = (PAlphabet)nodeArrayList2.get(0);
        plexerautomatonNode4 = (PLexerAutomaton)nodeArrayList3.get(0);
        {
            // Block
        }

        pcontextNode1 = new AContext(tstringNode2, palphabetNode3, plexerautomatonNode4, listNode5);
        }
	nodeList.add(pcontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new54() /* reduce AAcontext3Context */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PContext pcontextNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PAlphabet palphabetNode3;
        PLexerAutomaton plexerautomatonNode4;
        LinkedList listNode6 = new LinkedList();
        palphabetNode3 = (PAlphabet)nodeArrayList1.get(0);
        plexerautomatonNode4 = (PLexerAutomaton)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pcontextNode1 = new AContext(null, palphabetNode3, plexerautomatonNode4, listNode6);
        }
	nodeList.add(pcontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new55() /* reduce AAcontext4Context */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PContext pcontextNode1;
        {
            // Block
        TString tstringNode2;
        PAlphabet palphabetNode3;
        PLexerAutomaton plexerautomatonNode4;
        LinkedList listNode6 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList1.get(0);
        palphabetNode3 = (PAlphabet)nodeArrayList2.get(0);
        plexerautomatonNode4 = (PLexerAutomaton)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pcontextNode1 = new AContext(tstringNode2, palphabetNode3, plexerautomatonNode4, listNode6);
        }
	nodeList.add(pcontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new56() /* reduce AAalphabet1Alphabet */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlphabet palphabetNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }

        palphabetNode1 = new AAlphabet(listNode2, listNode3);
        }
	nodeList.add(palphabetNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new57() /* reduce AAalphabet2Alphabet */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlphabet palphabetNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }

        palphabetNode1 = new AAlphabet(listNode3, listNode4);
        }
	nodeList.add(palphabetNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new58() /* reduce AAalphabet3Alphabet */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlphabet palphabetNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        palphabetNode1 = new AAlphabet(listNode2, listNode4);
        }
	nodeList.add(palphabetNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new59() /* reduce AAalphabet4Alphabet */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlphabet palphabetNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        palphabetNode1 = new AAlphabet(listNode3, listNode5);
        }
	nodeList.add(palphabetNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new60() /* reduce ASymbol */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSymbol psymbolNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode4 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        psymbolNode1 = new ASymbol(tstringNode2, listNode4);
        }
	nodeList.add(psymbolNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new61() /* reduce AAinterval1Interval */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PInterval pintervalNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        @SuppressWarnings("unused") Object nullNode3 = null;

        pintervalNode1 = new AInterval(null, null);
        }
	nodeList.add(pintervalNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new62() /* reduce AAinterval2Interval */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PInterval pintervalNode1;
        {
            // Block
        TNumber tnumberNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        tnumberNode2 = (TNumber)nodeArrayList3.get(0);

        pintervalNode1 = new AInterval(tnumberNode2, null);
        }
	nodeList.add(pintervalNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new63() /* reduce AAinterval3Interval */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PInterval pintervalNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TNumber tnumberNode3;
        tnumberNode3 = (TNumber)nodeArrayList3.get(0);

        pintervalNode1 = new AInterval(null, tnumberNode3);
        }
	nodeList.add(pintervalNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new64() /* reduce AAinterval4Interval */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PInterval pintervalNode1;
        {
            // Block
        TNumber tnumberNode2;
        TNumber tnumberNode3;
        tnumberNode2 = (TNumber)nodeArrayList3.get(0);
        tnumberNode3 = (TNumber)nodeArrayList4.get(0);

        pintervalNode1 = new AInterval(tnumberNode2, tnumberNode3);
        }
	nodeList.add(pintervalNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new65() /* reduce AFrom */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TNumber tnumberNode1;
        tnumberNode1 = (TNumber)nodeArrayList3.get(0);
	nodeList.add(tnumberNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new66() /* reduce ATo */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TNumber tnumberNode1;
        tnumberNode1 = (TNumber)nodeArrayList3.get(0);
	nodeList.add(tnumberNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new67() /* reduce AAlexerautomaton1LexerAutomaton */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerAutomaton plexerautomatonNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }

        plexerautomatonNode1 = new ALexerAutomaton(listNode3, listNode4);
        }
	nodeList.add(plexerautomatonNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new68() /* reduce AAlexerautomaton2LexerAutomaton */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerAutomaton plexerautomatonNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        plexerautomatonNode1 = new ALexerAutomaton(listNode3, listNode5);
        }
	nodeList.add(plexerautomatonNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new69() /* reduce AMarker */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new70() /* reduce AAprogresslexerstate1LexerState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerState plexerstateNode1;
        {
            // Block
        TString tstringNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        PBoolean pbooleanNode6;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        }
        pbooleanNode6 = (PBoolean)nodeArrayList4.get(0);

        plexerstateNode1 = new AProgressLexerState(tstringNode2, null, listNode4, listNode5, pbooleanNode6);
        }
	nodeList.add(plexerstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new71() /* reduce AAprogresslexerstate2LexerState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerState plexerstateNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        PBoolean pbooleanNode6;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);
        {
            // Block
        }
        {
            // Block
        }
        pbooleanNode6 = (PBoolean)nodeArrayList5.get(0);

        plexerstateNode1 = new AProgressLexerState(tstringNode2, tstringNode3, listNode4, listNode5, pbooleanNode6);
        }
	nodeList.add(plexerstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new72() /* reduce AAprogresslexerstate3LexerState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerState plexerstateNode1;
        {
            // Block
        TString tstringNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        PBoolean pbooleanNode7;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        pbooleanNode7 = (PBoolean)nodeArrayList5.get(0);

        plexerstateNode1 = new AProgressLexerState(tstringNode2, null, listNode5, listNode6, pbooleanNode7);
        }
	nodeList.add(plexerstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new73() /* reduce AAprogresslexerstate4LexerState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerState plexerstateNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        PBoolean pbooleanNode7;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        pbooleanNode7 = (PBoolean)nodeArrayList6.get(0);

        plexerstateNode1 = new AProgressLexerState(tstringNode2, tstringNode3, listNode5, listNode6, pbooleanNode7);
        }
	nodeList.add(plexerstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new74() /* reduce AAprogresslexerstate5LexerState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerState plexerstateNode1;
        {
            // Block
        TString tstringNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        PBoolean pbooleanNode7;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        pbooleanNode7 = (PBoolean)nodeArrayList5.get(0);

        plexerstateNode1 = new AProgressLexerState(tstringNode2, null, listNode4, listNode6, pbooleanNode7);
        }
	nodeList.add(plexerstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new75() /* reduce AAprogresslexerstate6LexerState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerState plexerstateNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        PBoolean pbooleanNode7;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList5.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        pbooleanNode7 = (PBoolean)nodeArrayList6.get(0);

        plexerstateNode1 = new AProgressLexerState(tstringNode2, tstringNode3, listNode4, listNode6, pbooleanNode7);
        }
	nodeList.add(plexerstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new76() /* reduce AAprogresslexerstate7LexerState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerState plexerstateNode1;
        {
            // Block
        TString tstringNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        PBoolean pbooleanNode8;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        pbooleanNode8 = (PBoolean)nodeArrayList6.get(0);

        plexerstateNode1 = new AProgressLexerState(tstringNode2, null, listNode5, listNode7, pbooleanNode8);
        }
	nodeList.add(plexerstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new77() /* reduce AAprogresslexerstate8LexerState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerState plexerstateNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        PBoolean pbooleanNode8;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList6.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        pbooleanNode8 = (PBoolean)nodeArrayList7.get(0);

        plexerstateNode1 = new AProgressLexerState(tstringNode2, tstringNode3, listNode5, listNode7, pbooleanNode8);
        }
	nodeList.add(plexerstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new78() /* reduce AAtokenlexerstate1LexerState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerState plexerstateNode1;
        {
            // Block
        TString tstringNode2;
        TNumber tnumberNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TString tstringNode5;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tnumberNode3 = (TNumber)nodeArrayList4.get(0);
        tstringNode5 = (TString)nodeArrayList5.get(0);

        plexerstateNode1 = new ATokenLexerState(tstringNode2, tnumberNode3, null, tstringNode5);
        }
	nodeList.add(plexerstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new79() /* reduce AAtokenlexerstate2LexerState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerState plexerstateNode1;
        {
            // Block
        TString tstringNode2;
        TNumber tnumberNode3;
        TString tstringNode4;
        TString tstringNode5;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tnumberNode3 = (TNumber)nodeArrayList4.get(0);
        tstringNode4 = (TString)nodeArrayList5.get(0);
        tstringNode5 = (TString)nodeArrayList6.get(0);

        plexerstateNode1 = new ATokenLexerState(tstringNode2, tnumberNode3, tstringNode4, tstringNode5);
        }
	nodeList.add(plexerstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new80() /* reduce AEndExpected */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBoolean pbooleanNode1;
        pbooleanNode1 = (PBoolean)nodeArrayList3.get(0);
	nodeList.add(pbooleanNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new81() /* reduce ABackCount */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TNumber tnumberNode1;
        tnumberNode1 = (TNumber)nodeArrayList3.get(0);
	nodeList.add(tnumberNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new82() /* reduce ATokenName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new83() /* reduce AAlexertransition1LexerTransition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerTransition plexertransitionNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TString tstringNode3;
        tstringNode3 = (TString)nodeArrayList3.get(0);

        plexertransitionNode1 = new ALexerTransition(null, tstringNode3);
        }
	nodeList.add(plexertransitionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new84() /* reduce AAlexertransition2LexerTransition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerTransition plexertransitionNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);

        plexertransitionNode1 = new ALexerTransition(tstringNode2, tstringNode3);
        }
	nodeList.add(plexertransitionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new85() /* reduce ASymbolName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new86() /* reduce ATargetName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new87() /* reduce AAcceptLexerAction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerAction plexeractionNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList3.get(0);

        plexeractionNode1 = new AAcceptLexerAction(tstringNode2);
        }
	nodeList.add(plexeractionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new88() /* reduce AIgnoreLexerAction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerAction plexeractionNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList3.get(0);

        plexeractionNode1 = new AIgnoreLexerAction(tstringNode2);
        }
	nodeList.add(plexeractionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new89() /* reduce ARejectLexerAction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerAction plexeractionNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList3.get(0);

        plexeractionNode1 = new ARejectLexerAction(tstringNode2);
        }
	nodeList.add(plexeractionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new90() /* reduce AParseLexerAction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerAction plexeractionNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);

        plexeractionNode1 = new AParseLexerAction(tstringNode2, tstringNode3);
        }
	nodeList.add(plexeractionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new91() /* reduce AStartName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new92() /* reduce AAparser1Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode2, listNode3, listNode4, listNode5, listNode6);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new93() /* reduce AAparser2Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode3, listNode4, listNode5, listNode6, listNode7);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new94() /* reduce AAparser3Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode2, listNode4, listNode5, listNode6, listNode7);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new95() /* reduce AAparser4Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode3, listNode5, listNode6, listNode7, listNode8);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new96() /* reduce AAparser5Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode2, listNode3, listNode5, listNode6, listNode7);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new97() /* reduce AAparser6Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode3, listNode4, listNode6, listNode7, listNode8);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new98() /* reduce AAparser7Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode2, listNode4, listNode6, listNode7, listNode8);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new99() /* reduce AAparser8Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode3, listNode5, listNode7, listNode8, listNode9);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new100() /* reduce AAparser9Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode2, listNode3, listNode4, listNode6, listNode7);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new101() /* reduce AAparser10Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode3, listNode4, listNode5, listNode7, listNode8);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new102() /* reduce AAparser11Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode2, listNode4, listNode5, listNode7, listNode8);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new103() /* reduce AAparser12Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode3, listNode5, listNode6, listNode8, listNode9);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new104() /* reduce AAparser13Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode2, listNode3, listNode5, listNode7, listNode8);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new105() /* reduce AAparser14Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode3, listNode4, listNode6, listNode8, listNode9);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new106() /* reduce AAparser15Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode2, listNode4, listNode6, listNode8, listNode9);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new107() /* reduce AAparser16Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList6.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        {
            // Block
        }

        pparserNode1 = new AParser(listNode3, listNode5, listNode7, listNode9, listNode10);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new108() /* reduce AAparser17Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        pparserNode1 = new AParser(listNode2, listNode3, listNode4, listNode5, listNode7);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new109() /* reduce AAparser18Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pparserNode1 = new AParser(listNode3, listNode4, listNode5, listNode6, listNode8);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new110() /* reduce AAparser19Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pparserNode1 = new AParser(listNode2, listNode4, listNode5, listNode6, listNode8);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new111() /* reduce AAparser20Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList5.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pparserNode1 = new AParser(listNode3, listNode5, listNode6, listNode7, listNode9);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new112() /* reduce AAparser21Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pparserNode1 = new AParser(listNode2, listNode3, listNode5, listNode6, listNode8);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new113() /* reduce AAparser22Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList5.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pparserNode1 = new AParser(listNode3, listNode4, listNode6, listNode7, listNode9);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new114() /* reduce AAparser23Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList5.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pparserNode1 = new AParser(listNode2, listNode4, listNode6, listNode7, listNode9);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new115() /* reduce AAparser24Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList6.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        pparserNode1 = new AParser(listNode3, listNode5, listNode7, listNode8, listNode10);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new116() /* reduce AAparser25Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pparserNode1 = new AParser(listNode2, listNode3, listNode4, listNode6, listNode8);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new117() /* reduce AAparser26Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList5.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pparserNode1 = new AParser(listNode3, listNode4, listNode5, listNode7, listNode9);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new118() /* reduce AAparser27Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList5.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pparserNode1 = new AParser(listNode2, listNode4, listNode5, listNode7, listNode9);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new119() /* reduce AAparser28Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList6.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        pparserNode1 = new AParser(listNode3, listNode5, listNode6, listNode8, listNode10);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new120() /* reduce AAparser29Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList5.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pparserNode1 = new AParser(listNode2, listNode3, listNode5, listNode7, listNode9);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new121() /* reduce AAparser30Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList6.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        pparserNode1 = new AParser(listNode3, listNode4, listNode6, listNode8, listNode10);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new122() /* reduce AAparser31Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList6.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        pparserNode1 = new AParser(listNode2, listNode4, listNode6, listNode8, listNode10);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new123() /* reduce AAparser32Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode11 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList6.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        {
            // Block
        LinkedList listNode10 = new LinkedList();
        listNode10 = (LinkedList)nodeArrayList7.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pparserNode1 = new AParser(listNode3, listNode5, listNode7, listNode9, listNode11);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new124() /* reduce AProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProduction pproductionNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode4 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pproductionNode1 = new AProduction(tstringNode2, listNode4);
        }
	nodeList.add(pproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new125() /* reduce AAalternative1Alternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternative palternativeNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        LinkedList listNode4 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        {
            // Block
        }

        palternativeNode1 = new AAlternative(tstringNode2, pbooleanNode3, listNode4);
        }
	nodeList.add(palternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new126() /* reduce AAalternative2Alternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternative palternativeNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        LinkedList listNode5 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        palternativeNode1 = new AAlternative(tstringNode2, pbooleanNode3, listNode5);
        }
	nodeList.add(palternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new127() /* reduce AElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        PElementType pelementtypeNode4;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        pelementtypeNode4 = (PElementType)nodeArrayList5.get(0);

        pelementNode1 = new AElement(tstringNode2, pbooleanNode3, pelementtypeNode4);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new128() /* reduce ASingleElementType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElementType pelementtypeNode1;
        {
            // Block
        PSingleType psingletypeNode2;
        psingletypeNode2 = (PSingleType)nodeArrayList1.get(0);

        pelementtypeNode1 = new ASingleElementType(psingletypeNode2);
        }
	nodeList.add(pelementtypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new129() /* reduce AListElementType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElementType pelementtypeNode1;
        {
            // Block
        PListType plisttypeNode2;
        plisttypeNode2 = (PListType)nodeArrayList1.get(0);

        pelementtypeNode1 = new AListElementType(plisttypeNode2);
        }
	nodeList.add(pelementtypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new130() /* reduce AOneSingleType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSingleType psingletypeNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);

        psingletypeNode1 = new AOneSingleType(tstringNode2, pbooleanNode3);
        }
	nodeList.add(psingletypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new131() /* reduce AZeroOrOneSingleType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSingleType psingletypeNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);

        psingletypeNode1 = new AZeroOrOneSingleType(tstringNode2, pbooleanNode3);
        }
	nodeList.add(psingletypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new132() /* reduce ANumberListType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListType plisttypeNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TNumber tnumberNode4;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tnumberNode4 = (TNumber)nodeArrayList5.get(0);

        plisttypeNode1 = new ANumberListType(tstringNode2, pbooleanNode3, tnumberNode4);
        }
	nodeList.add(plisttypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new133() /* reduce AIntervalListType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListType plisttypeNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TNumber tnumberNode4;
        TNumber tnumberNode5;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tnumberNode4 = (TNumber)nodeArrayList5.get(0);
        tnumberNode5 = (TNumber)nodeArrayList6.get(0);

        plisttypeNode1 = new AIntervalListType(tstringNode2, pbooleanNode3, tnumberNode4, tnumberNode5);
        }
	nodeList.add(plisttypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new134() /* reduce AAtLeastListType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListType plisttypeNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TNumber tnumberNode4;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tnumberNode4 = (TNumber)nodeArrayList5.get(0);

        plisttypeNode1 = new AAtLeastListType(tstringNode2, pbooleanNode3, tnumberNode4);
        }
	nodeList.add(plisttypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new135() /* reduce ASeparatedNumberListType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListType plisttypeNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TString tstringNode4;
        PBoolean pbooleanNode5;
        TNumber tnumberNode6;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tstringNode4 = (TString)nodeArrayList5.get(0);
        pbooleanNode5 = (PBoolean)nodeArrayList6.get(0);
        tnumberNode6 = (TNumber)nodeArrayList7.get(0);

        plisttypeNode1 = new ASeparatedNumberListType(tstringNode2, pbooleanNode3, tstringNode4, pbooleanNode5, tnumberNode6);
        }
	nodeList.add(plisttypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new136() /* reduce ASeparatedIntervalListType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListType plisttypeNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TString tstringNode4;
        PBoolean pbooleanNode5;
        TNumber tnumberNode6;
        TNumber tnumberNode7;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tstringNode4 = (TString)nodeArrayList5.get(0);
        pbooleanNode5 = (PBoolean)nodeArrayList6.get(0);
        tnumberNode6 = (TNumber)nodeArrayList7.get(0);
        tnumberNode7 = (TNumber)nodeArrayList8.get(0);

        plisttypeNode1 = new ASeparatedIntervalListType(tstringNode2, pbooleanNode3, tstringNode4, pbooleanNode5, tnumberNode6, tnumberNode7);
        }
	nodeList.add(plisttypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new137() /* reduce ASeparatedAtLeastListType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListType plisttypeNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TString tstringNode4;
        PBoolean pbooleanNode5;
        TNumber tnumberNode6;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tstringNode4 = (TString)nodeArrayList5.get(0);
        pbooleanNode5 = (PBoolean)nodeArrayList6.get(0);
        tnumberNode6 = (TNumber)nodeArrayList7.get(0);

        plisttypeNode1 = new ASeparatedNumberListType(tstringNode2, pbooleanNode3, tstringNode4, pbooleanNode5, tnumberNode6);
        }
	nodeList.add(plisttypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new138() /* reduce ASeparator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new139() /* reduce AAparseproduction1ParseProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParseProduction pparseproductionNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }

        pparseproductionNode1 = new AParseProduction(tstringNode2, listNode4, listNode5);
        }
	nodeList.add(pparseproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new140() /* reduce AAparseproduction2ParseProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParseProduction pparseproductionNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList5.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pparseproductionNode1 = new AParseProduction(tstringNode2, listNode4, listNode6);
        }
	nodeList.add(pparseproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new141() /* reduce ARetainedElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PRetainedElement pretainedelementNode1;
        {
            // Block
        TString tstringNode2;
        PElementType pelementtypeNode3;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pelementtypeNode3 = (PElementType)nodeArrayList4.get(0);

        pretainedelementNode1 = new ARetainedElement(tstringNode2, pelementtypeNode3);
        }
	nodeList.add(pretainedelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new142() /* reduce AAparsealternative1ParseAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParseAlternative pparsealternativeNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        }

        pparsealternativeNode1 = new AParseAlternative(tstringNode2, listNode3, listNode4);
        }
	nodeList.add(pparsealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new143() /* reduce AAparsealternative2ParseAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParseAlternative pparsealternativeNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }

        pparsealternativeNode1 = new AParseAlternative(tstringNode2, listNode4, listNode5);
        }
	nodeList.add(pparsealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new144() /* reduce AAparsealternative3ParseAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParseAlternative pparsealternativeNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pparsealternativeNode1 = new AParseAlternative(tstringNode2, listNode3, listNode5);
        }
	nodeList.add(pparsealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new145() /* reduce AAparsealternative4ParseAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParseAlternative pparsealternativeNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList5.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pparsealternativeNode1 = new AParseAlternative(tstringNode2, listNode4, listNode6);
        }
	nodeList.add(pparsealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new146() /* reduce AParseElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParseElement pparseelementNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList3.get(0);

        pparseelementNode1 = new AParseElement(tstringNode2);
        }
	nodeList.add(pparseelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new147() /* reduce ATransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformation ptransformationNode1;
        {
            // Block
        TString tstringNode2;
        PValue pvalueNode3;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pvalueNode3 = (PValue)nodeArrayList4.get(0);

        ptransformationNode1 = new ATransformation(tstringNode2, pvalueNode3);
        }
	nodeList.add(ptransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new148() /* reduce ARetainedElementName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new149() /* reduce AParseElementName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new150() /* reduce ANullValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block

        pvalueNode1 = new ANullValue();
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new151() /* reduce AReferenceValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);

        pvalueNode1 = new AReferenceValue(tstringNode2, tstringNode3);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new152() /* reduce AAnewvalue1Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode3 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        }

        pvalueNode1 = new ANewValue(tstringNode2, listNode3);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new153() /* reduce AAnewvalue2Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode4 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pvalueNode1 = new ANewValue(tstringNode2, listNode4);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new154() /* reduce AAnumbervalue1Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TNumber tnumberNode4;
        LinkedList listNode5 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tnumberNode4 = (TNumber)nodeArrayList5.get(0);
        {
            // Block
        }

        pvalueNode1 = new ANumberValue(tstringNode2, pbooleanNode3, tnumberNode4, listNode5);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new155() /* reduce AAnumbervalue2Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TNumber tnumberNode4;
        LinkedList listNode6 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tnumberNode4 = (TNumber)nodeArrayList5.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList7.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pvalueNode1 = new ANumberValue(tstringNode2, pbooleanNode3, tnumberNode4, listNode6);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new156() /* reduce AAintervalvalue1Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TNumber tnumberNode4;
        TNumber tnumberNode5;
        LinkedList listNode6 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tnumberNode4 = (TNumber)nodeArrayList5.get(0);
        tnumberNode5 = (TNumber)nodeArrayList6.get(0);
        {
            // Block
        }

        pvalueNode1 = new AIntervalValue(tstringNode2, pbooleanNode3, tnumberNode4, tnumberNode5, listNode6);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new157() /* reduce AAintervalvalue2Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TNumber tnumberNode4;
        TNumber tnumberNode5;
        LinkedList listNode7 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tnumberNode4 = (TNumber)nodeArrayList5.get(0);
        tnumberNode5 = (TNumber)nodeArrayList6.get(0);
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList7.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        pvalueNode1 = new AIntervalValue(tstringNode2, pbooleanNode3, tnumberNode4, tnumberNode5, listNode7);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new158() /* reduce AAatleastvalue1Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TNumber tnumberNode4;
        LinkedList listNode5 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tnumberNode4 = (TNumber)nodeArrayList5.get(0);
        {
            // Block
        }

        pvalueNode1 = new AAtLeastValue(tstringNode2, pbooleanNode3, tnumberNode4, listNode5);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new159() /* reduce AAatleastvalue2Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TNumber tnumberNode4;
        LinkedList listNode6 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tnumberNode4 = (TNumber)nodeArrayList5.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList7.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pvalueNode1 = new AAtLeastValue(tstringNode2, pbooleanNode3, tnumberNode4, listNode6);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new160() /* reduce AAseparatednumbervalue1Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TString tstringNode4;
        PBoolean pbooleanNode5;
        TNumber tnumberNode6;
        LinkedList listNode7 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tstringNode4 = (TString)nodeArrayList5.get(0);
        pbooleanNode5 = (PBoolean)nodeArrayList6.get(0);
        tnumberNode6 = (TNumber)nodeArrayList7.get(0);
        {
            // Block
        }

        pvalueNode1 = new ASeparatedNumberValue(tstringNode2, pbooleanNode3, tstringNode4, pbooleanNode5, tnumberNode6, listNode7);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new161() /* reduce AAseparatednumbervalue2Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TString tstringNode4;
        PBoolean pbooleanNode5;
        TNumber tnumberNode6;
        LinkedList listNode8 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tstringNode4 = (TString)nodeArrayList5.get(0);
        pbooleanNode5 = (PBoolean)nodeArrayList6.get(0);
        tnumberNode6 = (TNumber)nodeArrayList7.get(0);
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList9.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pvalueNode1 = new ASeparatedNumberValue(tstringNode2, pbooleanNode3, tstringNode4, pbooleanNode5, tnumberNode6, listNode8);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new162() /* reduce AAseparatedintervalvalue1Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TString tstringNode4;
        PBoolean pbooleanNode5;
        TNumber tnumberNode6;
        TNumber tnumberNode7;
        LinkedList listNode8 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tstringNode4 = (TString)nodeArrayList5.get(0);
        pbooleanNode5 = (PBoolean)nodeArrayList6.get(0);
        tnumberNode6 = (TNumber)nodeArrayList7.get(0);
        tnumberNode7 = (TNumber)nodeArrayList8.get(0);
        {
            // Block
        }

        pvalueNode1 = new ASeparatedIntervalValue(tstringNode2, pbooleanNode3, tstringNode4, pbooleanNode5, tnumberNode6, tnumberNode7, listNode8);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new163() /* reduce AAseparatedintervalvalue2Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TString tstringNode4;
        PBoolean pbooleanNode5;
        TNumber tnumberNode6;
        TNumber tnumberNode7;
        LinkedList listNode9 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tstringNode4 = (TString)nodeArrayList5.get(0);
        pbooleanNode5 = (PBoolean)nodeArrayList6.get(0);
        tnumberNode6 = (TNumber)nodeArrayList7.get(0);
        tnumberNode7 = (TNumber)nodeArrayList8.get(0);
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList9.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pvalueNode1 = new ASeparatedIntervalValue(tstringNode2, pbooleanNode3, tstringNode4, pbooleanNode5, tnumberNode6, tnumberNode7, listNode9);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new164() /* reduce AAseparatedatleastvalue1Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TString tstringNode4;
        PBoolean pbooleanNode5;
        TNumber tnumberNode6;
        LinkedList listNode7 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tstringNode4 = (TString)nodeArrayList5.get(0);
        pbooleanNode5 = (PBoolean)nodeArrayList6.get(0);
        tnumberNode6 = (TNumber)nodeArrayList7.get(0);
        {
            // Block
        }

        pvalueNode1 = new ASeparatedAtLeastValue(tstringNode2, pbooleanNode3, tstringNode4, pbooleanNode5, tnumberNode6, listNode7);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new165() /* reduce AAseparatedatleastvalue2Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValue pvalueNode1;
        {
            // Block
        TString tstringNode2;
        PBoolean pbooleanNode3;
        TString tstringNode4;
        PBoolean pbooleanNode5;
        TNumber tnumberNode6;
        LinkedList listNode8 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pbooleanNode3 = (PBoolean)nodeArrayList4.get(0);
        tstringNode4 = (TString)nodeArrayList5.get(0);
        pbooleanNode5 = (PBoolean)nodeArrayList6.get(0);
        tnumberNode6 = (TNumber)nodeArrayList7.get(0);
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList9.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pvalueNode1 = new ASeparatedAtLeastValue(tstringNode2, pbooleanNode3, tstringNode4, pbooleanNode5, tnumberNode6, listNode8);
        }
	nodeList.add(pvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new166() /* reduce AReferenceListValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListValue plistvalueNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);

        plistvalueNode1 = new AReferenceListValue(tstringNode2, tstringNode3);
        }
	nodeList.add(plistvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new167() /* reduce AListReferenceListValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListValue plistvalueNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);

        plistvalueNode1 = new AListReferenceListValue(tstringNode2, tstringNode3);
        }
	nodeList.add(plistvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new168() /* reduce AAnewlistvalue1ListValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListValue plistvalueNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode3 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        }

        plistvalueNode1 = new ANewListValue(tstringNode2, listNode3);
        }
	nodeList.add(plistvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new169() /* reduce AAnewlistvalue2ListValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListValue plistvalueNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode4 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        plistvalueNode1 = new ANewListValue(tstringNode2, listNode4);
        }
	nodeList.add(plistvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new170() /* reduce AStart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStart pstartNode1;
        {
            // Block
        PParserAutomaton pparserautomatonNode2;
        pparserautomatonNode2 = (PParserAutomaton)nodeArrayList3.get(0);

        pstartNode1 = new AStart(pparserautomatonNode2);
        }
	nodeList.add(pstartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new171() /* reduce AParserAutomaton */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAutomaton pparserautomatonNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pparserautomatonNode1 = new AParserAutomaton(listNode3);
        }
	nodeList.add(pparserautomatonNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new172() /* reduce AAparserstate1ParserState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserState pparserstateNode1;
        {
            // Block
        TString tstringNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PDecision pdecisionNode4;
        LinkedList listNode5 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pdecisionNode4 = (PDecision)nodeArrayList4.get(0);
        {
            // Block
        }

        pparserstateNode1 = new AParserState(tstringNode2, null, pdecisionNode4, listNode5);
        }
	nodeList.add(pparserstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new173() /* reduce AAparserstate2ParserState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserState pparserstateNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        PDecision pdecisionNode4;
        LinkedList listNode5 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);
        pdecisionNode4 = (PDecision)nodeArrayList5.get(0);
        {
            // Block
        }

        pparserstateNode1 = new AParserState(tstringNode2, tstringNode3, pdecisionNode4, listNode5);
        }
	nodeList.add(pparserstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new174() /* reduce AAparserstate3ParserState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserState pparserstateNode1;
        {
            // Block
        TString tstringNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PDecision pdecisionNode4;
        LinkedList listNode6 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        pdecisionNode4 = (PDecision)nodeArrayList4.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList5.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pparserstateNode1 = new AParserState(tstringNode2, null, pdecisionNode4, listNode6);
        }
	nodeList.add(pparserstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new175() /* reduce AAparserstate4ParserState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserState pparserstateNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        PDecision pdecisionNode4;
        LinkedList listNode6 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);
        pdecisionNode4 = (PDecision)nodeArrayList5.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList6.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pparserstateNode1 = new AParserState(tstringNode2, tstringNode3, pdecisionNode4, listNode6);
        }
	nodeList.add(pparserstateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new176() /* reduce AInvestigatorName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new177() /* reduce AAparserinvestigator1ParserInvestigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserInvestigator pparserinvestigatorNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode3 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        }

        pparserinvestigatorNode1 = new AParserInvestigator(tstringNode2, listNode3);
        }
	nodeList.add(pparserinvestigatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new178() /* reduce AAparserinvestigator2ParserInvestigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserInvestigator pparserinvestigatorNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode4 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparserinvestigatorNode1 = new AParserInvestigator(tstringNode2, listNode4);
        }
	nodeList.add(pparserinvestigatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new179() /* reduce ANoLookDecision */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDecision pdecisionNode1;
        {
            // Block
        PAction pactionNode2;
        pactionNode2 = (PAction)nodeArrayList1.get(0);

        pdecisionNode1 = new ANoLookDecision(pactionNode2);
        }
	nodeList.add(pdecisionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new180() /* reduce ALookDecision */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDecision pdecisionNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pdecisionNode1 = new ALookDecision(listNode3);
        }
	nodeList.add(pdecisionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new181() /* reduce AAdepth1Depth */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDepth pdepthNode1;
        {
            // Block
        TNumber tnumberNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode4 = new LinkedList();
        tnumberNode2 = (TNumber)nodeArrayList3.get(0);
        {
            // Block
        }

        pdepthNode1 = new ADepth(tnumberNode2, null, listNode4);
        }
	nodeList.add(pdepthNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new182() /* reduce AAdepth2Depth */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDepth pdepthNode1;
        {
            // Block
        TNumber tnumberNode2;
        TString tstringNode3;
        LinkedList listNode4 = new LinkedList();
        tnumberNode2 = (TNumber)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);
        {
            // Block
        }

        pdepthNode1 = new ADepth(tnumberNode2, tstringNode3, listNode4);
        }
	nodeList.add(pdepthNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new183() /* reduce AAdepth3Depth */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDepth pdepthNode1;
        {
            // Block
        TNumber tnumberNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode5 = new LinkedList();
        tnumberNode2 = (TNumber)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pdepthNode1 = new ADepth(tnumberNode2, null, listNode5);
        }
	nodeList.add(pdepthNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new184() /* reduce AAdepth4Depth */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDepth pdepthNode1;
        {
            // Block
        TNumber tnumberNode2;
        TString tstringNode3;
        LinkedList listNode5 = new LinkedList();
        tnumberNode2 = (TNumber)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pdepthNode1 = new ADepth(tnumberNode2, tstringNode3, listNode5);
        }
	nodeList.add(pdepthNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new185() /* reduce ALookDepth */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TNumber tnumberNode1;
        tnumberNode1 = (TNumber)nodeArrayList3.get(0);
	nodeList.add(tnumberNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new186() /* reduce AContextName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new187() /* reduce AChoice */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PChoice pchoiceNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        PAction pactionNode4;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        pactionNode4 = (PAction)nodeArrayList4.get(0);

        pchoiceNode1 = new AChoice(listNode3, pactionNode4);
        }
	nodeList.add(pchoiceNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new188() /* reduce ACondition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCondition pconditionNode1;
        {
            // Block
        TNumber tnumberNode2;
        LinkedList listNode4 = new LinkedList();
        tnumberNode2 = (TNumber)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pconditionNode1 = new ACondition(tnumberNode2, listNode4);
        }
	nodeList.add(pconditionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new189() /* reduce AAlooksymbol1LookSymbol */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLookSymbol plooksymbolNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;

        plooksymbolNode1 = new ALookSymbol(null);
        }
	nodeList.add(plooksymbolNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new190() /* reduce AAlooksymbol2LookSymbol */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLookSymbol plooksymbolNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList3.get(0);

        plooksymbolNode1 = new ALookSymbol(tstringNode2);
        }
	nodeList.add(plooksymbolNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new191() /* reduce AShiftAction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAction pactionNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList3.get(0);

        pactionNode1 = new AShiftAction(tstringNode2);
        }
	nodeList.add(pactionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new192() /* reduce AReduceAction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAction pactionNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList3.get(0);

        pactionNode1 = new AReduceAction(tstringNode2);
        }
	nodeList.add(pactionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new193() /* reduce ASelectionAction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAction pactionNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode4 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pactionNode1 = new ASelectionAction(tstringNode2, listNode4);
        }
	nodeList.add(pactionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new194() /* reduce ATreeAction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAction pactionNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList3.get(0);

        pactionNode1 = new ATreeAction(tstringNode2);
        }
	nodeList.add(pactionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new195() /* reduce ATokenAction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAction pactionNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);

        pactionNode1 = new ATokenAction(tstringNode2, tstringNode3);
        }
	nodeList.add(pactionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new196() /* reduce AParseAlternativeName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new197() /* reduce AExpectedSelection */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpectedSelection pexpectedselectionNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);

        pexpectedselectionNode1 = new AExpectedSelection(tstringNode2, tstringNode3);
        }
	nodeList.add(pexpectedselectionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new198() /* reduce AParseProductionName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList3.get(0);
	nodeList.add(tstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new199() /* reduce AAparserselector1ParserSelector */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserSelector pparserselectorNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pparserselectorNode1 = new AParserSelector(tstringNode2, listNode3, listNode5);
        }
	nodeList.add(pparserselectorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new200() /* reduce AAparserselector2ParserSelector */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserSelector pparserselectorNode1;
        {
            // Block
        TString tstringNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        tstringNode2 = (TString)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList5.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pparserselectorNode1 = new AParserSelector(tstringNode2, listNode4, listNode6);
        }
	nodeList.add(pparserselectorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new201() /* reduce ATokenParserTransition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserTransition pparsertransitionNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);

        pparsertransitionNode1 = new ATokenParserTransition(tstringNode2, tstringNode3);
        }
	nodeList.add(pparsertransitionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new202() /* reduce AProductionParserTransition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserTransition pparsertransitionNode1;
        {
            // Block
        TString tstringNode2;
        TString tstringNode3;
        tstringNode2 = (TString)nodeArrayList3.get(0);
        tstringNode3 = (TString)nodeArrayList4.get(0);

        pparsertransitionNode1 = new AProductionParserTransition(tstringNode2, tstringNode3);
        }
	nodeList.add(pparsertransitionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new203() /* reduce ATerminal$Group */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PGroup pgroupNode1;
        pgroupNode1 = (PGroup)nodeArrayList1.get(0);
	if(pgroupNode1 != null)
	{
	  listNode2.add(pgroupNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new204() /* reduce ANonTerminal$Group */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PGroup pgroupNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pgroupNode2 = (PGroup)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pgroupNode2 != null)
	{
	  listNode3.add(pgroupNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new205() /* reduce ATerminal$Token */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PToken ptokenNode1;
        ptokenNode1 = (PToken)nodeArrayList1.get(0);
	if(ptokenNode1 != null)
	{
	  listNode2.add(ptokenNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new206() /* reduce ANonTerminal$Token */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PToken ptokenNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptokenNode2 = (PToken)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptokenNode2 != null)
	{
	  listNode3.add(ptokenNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new207() /* reduce ATerminal$TokenSelector */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTokenSelector ptokenselectorNode1;
        ptokenselectorNode1 = (PTokenSelector)nodeArrayList1.get(0);
	if(ptokenselectorNode1 != null)
	{
	  listNode2.add(ptokenselectorNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new208() /* reduce ANonTerminal$TokenSelector */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PTokenSelector ptokenselectorNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptokenselectorNode2 = (PTokenSelector)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptokenselectorNode2 != null)
	{
	  listNode3.add(ptokenselectorNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new209() /* reduce ATerminal$Context */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PContext pcontextNode1;
        pcontextNode1 = (PContext)nodeArrayList1.get(0);
	if(pcontextNode1 != null)
	{
	  listNode2.add(pcontextNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new210() /* reduce ANonTerminal$Context */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PContext pcontextNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcontextNode2 = (PContext)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcontextNode2 != null)
	{
	  listNode3.add(pcontextNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new211() /* reduce ATerminal$TokenInvestigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTokenInvestigator ptokeninvestigatorNode1;
        ptokeninvestigatorNode1 = (PTokenInvestigator)nodeArrayList1.get(0);
	if(ptokeninvestigatorNode1 != null)
	{
	  listNode2.add(ptokeninvestigatorNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new212() /* reduce ANonTerminal$TokenInvestigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PTokenInvestigator ptokeninvestigatorNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptokeninvestigatorNode2 = (PTokenInvestigator)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptokeninvestigatorNode2 != null)
	{
	  listNode3.add(ptokeninvestigatorNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new213() /* reduce ATerminal$StringPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList1.get(0);
	if(tstringNode1 != null)
	{
	  listNode2.add(tstringNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new214() /* reduce ANonTerminal$StringPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        TString tstringNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        tstringNode2 = (TString)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(tstringNode2 != null)
	{
	  listNode3.add(tstringNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new215() /* reduce ATerminal$LexerAction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PLexerAction plexeractionNode1;
        plexeractionNode1 = (PLexerAction)nodeArrayList1.get(0);
	if(plexeractionNode1 != null)
	{
	  listNode2.add(plexeractionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new216() /* reduce ANonTerminal$LexerAction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PLexerAction plexeractionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plexeractionNode2 = (PLexerAction)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plexeractionNode2 != null)
	{
	  listNode3.add(plexeractionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new217() /* reduce ATerminal$Symbol */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PSymbol psymbolNode1;
        psymbolNode1 = (PSymbol)nodeArrayList1.get(0);
	if(psymbolNode1 != null)
	{
	  listNode2.add(psymbolNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new218() /* reduce ANonTerminal$Symbol */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PSymbol psymbolNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        psymbolNode2 = (PSymbol)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(psymbolNode2 != null)
	{
	  listNode3.add(psymbolNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new219() /* reduce ATerminal$Interval */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PInterval pintervalNode1;
        pintervalNode1 = (PInterval)nodeArrayList1.get(0);
	if(pintervalNode1 != null)
	{
	  listNode2.add(pintervalNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new220() /* reduce ANonTerminal$Interval */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PInterval pintervalNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pintervalNode2 = (PInterval)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pintervalNode2 != null)
	{
	  listNode3.add(pintervalNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new221() /* reduce ATerminal$LexerState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PLexerState plexerstateNode1;
        plexerstateNode1 = (PLexerState)nodeArrayList1.get(0);
	if(plexerstateNode1 != null)
	{
	  listNode2.add(plexerstateNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new222() /* reduce ANonTerminal$LexerState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PLexerState plexerstateNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plexerstateNode2 = (PLexerState)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plexerstateNode2 != null)
	{
	  listNode3.add(plexerstateNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new223() /* reduce ATerminal$Marker */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList1.get(0);
	if(tstringNode1 != null)
	{
	  listNode2.add(tstringNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new224() /* reduce ANonTerminal$Marker */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        TString tstringNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        tstringNode2 = (TString)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(tstringNode2 != null)
	{
	  listNode3.add(tstringNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new225() /* reduce ATerminal$LexerTransition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PLexerTransition plexertransitionNode1;
        plexertransitionNode1 = (PLexerTransition)nodeArrayList1.get(0);
	if(plexertransitionNode1 != null)
	{
	  listNode2.add(plexertransitionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new226() /* reduce ANonTerminal$LexerTransition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PLexerTransition plexertransitionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plexertransitionNode2 = (PLexerTransition)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plexertransitionNode2 != null)
	{
	  listNode3.add(plexertransitionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new227() /* reduce ATerminal$Production */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PProduction pproductionNode1;
        pproductionNode1 = (PProduction)nodeArrayList1.get(0);
	if(pproductionNode1 != null)
	{
	  listNode2.add(pproductionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new228() /* reduce ANonTerminal$Production */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PProduction pproductionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pproductionNode2 = (PProduction)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pproductionNode2 != null)
	{
	  listNode3.add(pproductionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new229() /* reduce ATerminal$ParseProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParseProduction pparseproductionNode1;
        pparseproductionNode1 = (PParseProduction)nodeArrayList1.get(0);
	if(pparseproductionNode1 != null)
	{
	  listNode2.add(pparseproductionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new230() /* reduce ANonTerminal$ParseProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParseProduction pparseproductionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparseproductionNode2 = (PParseProduction)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparseproductionNode2 != null)
	{
	  listNode3.add(pparseproductionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new231() /* reduce ATerminal$Start */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PStart pstartNode1;
        pstartNode1 = (PStart)nodeArrayList1.get(0);
	if(pstartNode1 != null)
	{
	  listNode2.add(pstartNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new232() /* reduce ANonTerminal$Start */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PStart pstartNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pstartNode2 = (PStart)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pstartNode2 != null)
	{
	  listNode3.add(pstartNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new233() /* reduce ATerminal$ParserInvestigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserInvestigator pparserinvestigatorNode1;
        pparserinvestigatorNode1 = (PParserInvestigator)nodeArrayList1.get(0);
	if(pparserinvestigatorNode1 != null)
	{
	  listNode2.add(pparserinvestigatorNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new234() /* reduce ANonTerminal$ParserInvestigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParserInvestigator pparserinvestigatorNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparserinvestigatorNode2 = (PParserInvestigator)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparserinvestigatorNode2 != null)
	{
	  listNode3.add(pparserinvestigatorNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new235() /* reduce ATerminal$ParserSelector */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserSelector pparserselectorNode1;
        pparserselectorNode1 = (PParserSelector)nodeArrayList1.get(0);
	if(pparserselectorNode1 != null)
	{
	  listNode2.add(pparserselectorNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new236() /* reduce ANonTerminal$ParserSelector */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParserSelector pparserselectorNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparserselectorNode2 = (PParserSelector)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparserselectorNode2 != null)
	{
	  listNode3.add(pparserselectorNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new237() /* reduce ATerminal$Alternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAlternative palternativeNode1;
        palternativeNode1 = (PAlternative)nodeArrayList1.get(0);
	if(palternativeNode1 != null)
	{
	  listNode2.add(palternativeNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new238() /* reduce ANonTerminal$Alternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PAlternative palternativeNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        palternativeNode2 = (PAlternative)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(palternativeNode2 != null)
	{
	  listNode3.add(palternativeNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new239() /* reduce ATerminal$Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PElement pelementNode1;
        pelementNode1 = (PElement)nodeArrayList1.get(0);
	if(pelementNode1 != null)
	{
	  listNode2.add(pelementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new240() /* reduce ANonTerminal$Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PElement pelementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pelementNode2 = (PElement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pelementNode2 != null)
	{
	  listNode3.add(pelementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new241() /* reduce ATerminal$ParseAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParseAlternative pparsealternativeNode1;
        pparsealternativeNode1 = (PParseAlternative)nodeArrayList1.get(0);
	if(pparsealternativeNode1 != null)
	{
	  listNode2.add(pparsealternativeNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new242() /* reduce ANonTerminal$ParseAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParseAlternative pparsealternativeNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparsealternativeNode2 = (PParseAlternative)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparsealternativeNode2 != null)
	{
	  listNode3.add(pparsealternativeNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new243() /* reduce ATerminal$RetainedElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PRetainedElement pretainedelementNode1;
        pretainedelementNode1 = (PRetainedElement)nodeArrayList1.get(0);
	if(pretainedelementNode1 != null)
	{
	  listNode2.add(pretainedelementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new244() /* reduce ANonTerminal$RetainedElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PRetainedElement pretainedelementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pretainedelementNode2 = (PRetainedElement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pretainedelementNode2 != null)
	{
	  listNode3.add(pretainedelementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new245() /* reduce ATerminal$ParseElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParseElement pparseelementNode1;
        pparseelementNode1 = (PParseElement)nodeArrayList1.get(0);
	if(pparseelementNode1 != null)
	{
	  listNode2.add(pparseelementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new246() /* reduce ANonTerminal$ParseElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParseElement pparseelementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparseelementNode2 = (PParseElement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparseelementNode2 != null)
	{
	  listNode3.add(pparseelementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new247() /* reduce ATerminal$Transformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTransformation ptransformationNode1;
        ptransformationNode1 = (PTransformation)nodeArrayList1.get(0);
	if(ptransformationNode1 != null)
	{
	  listNode2.add(ptransformationNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new248() /* reduce ANonTerminal$Transformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PTransformation ptransformationNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptransformationNode2 = (PTransformation)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptransformationNode2 != null)
	{
	  listNode3.add(ptransformationNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new249() /* reduce ATerminal$Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PValue pvalueNode1;
        pvalueNode1 = (PValue)nodeArrayList1.get(0);
	if(pvalueNode1 != null)
	{
	  listNode2.add(pvalueNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new250() /* reduce ANonTerminal$Value */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PValue pvalueNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pvalueNode2 = (PValue)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pvalueNode2 != null)
	{
	  listNode3.add(pvalueNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new251() /* reduce ATerminal$ListValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PListValue plistvalueNode1;
        plistvalueNode1 = (PListValue)nodeArrayList1.get(0);
	if(plistvalueNode1 != null)
	{
	  listNode2.add(plistvalueNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new252() /* reduce ANonTerminal$ListValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PListValue plistvalueNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plistvalueNode2 = (PListValue)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plistvalueNode2 != null)
	{
	  listNode3.add(plistvalueNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new253() /* reduce ATerminal$ParserState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserState pparserstateNode1;
        pparserstateNode1 = (PParserState)nodeArrayList1.get(0);
	if(pparserstateNode1 != null)
	{
	  listNode2.add(pparserstateNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new254() /* reduce ANonTerminal$ParserState */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParserState pparserstateNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparserstateNode2 = (PParserState)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparserstateNode2 != null)
	{
	  listNode3.add(pparserstateNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new255() /* reduce ATerminal$ParserTransition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserTransition pparsertransitionNode1;
        pparsertransitionNode1 = (PParserTransition)nodeArrayList1.get(0);
	if(pparsertransitionNode1 != null)
	{
	  listNode2.add(pparsertransitionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new256() /* reduce ANonTerminal$ParserTransition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParserTransition pparsertransitionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparsertransitionNode2 = (PParserTransition)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparsertransitionNode2 != null)
	{
	  listNode3.add(pparsertransitionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new257() /* reduce ATerminal$Depth */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PDepth pdepthNode1;
        pdepthNode1 = (PDepth)nodeArrayList1.get(0);
	if(pdepthNode1 != null)
	{
	  listNode2.add(pdepthNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new258() /* reduce ANonTerminal$Depth */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PDepth pdepthNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdepthNode2 = (PDepth)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdepthNode2 != null)
	{
	  listNode3.add(pdepthNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new259() /* reduce ATerminal$Choice */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PChoice pchoiceNode1;
        pchoiceNode1 = (PChoice)nodeArrayList1.get(0);
	if(pchoiceNode1 != null)
	{
	  listNode2.add(pchoiceNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new260() /* reduce ANonTerminal$Choice */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PChoice pchoiceNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pchoiceNode2 = (PChoice)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pchoiceNode2 != null)
	{
	  listNode3.add(pchoiceNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new261() /* reduce ATerminal$Condition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PCondition pconditionNode1;
        pconditionNode1 = (PCondition)nodeArrayList1.get(0);
	if(pconditionNode1 != null)
	{
	  listNode2.add(pconditionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new262() /* reduce ANonTerminal$Condition */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PCondition pconditionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pconditionNode2 = (PCondition)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pconditionNode2 != null)
	{
	  listNode3.add(pconditionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new263() /* reduce ATerminal$LookSymbol */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PLookSymbol plooksymbolNode1;
        plooksymbolNode1 = (PLookSymbol)nodeArrayList1.get(0);
	if(plooksymbolNode1 != null)
	{
	  listNode2.add(plooksymbolNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new264() /* reduce ANonTerminal$LookSymbol */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PLookSymbol plooksymbolNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plooksymbolNode2 = (PLookSymbol)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plooksymbolNode2 != null)
	{
	  listNode3.add(plooksymbolNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new265() /* reduce ATerminal$ExpectedSelection */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PExpectedSelection pexpectedselectionNode1;
        pexpectedselectionNode1 = (PExpectedSelection)nodeArrayList1.get(0);
	if(pexpectedselectionNode1 != null)
	{
	  listNode2.add(pexpectedselectionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new266() /* reduce ANonTerminal$ExpectedSelection */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PExpectedSelection pexpectedselectionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexpectedselectionNode2 = (PExpectedSelection)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexpectedselectionNode2 != null)
	{
	  listNode3.add(pexpectedselectionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new267() /* reduce ATerminal$ParseProductionName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TString tstringNode1;
        tstringNode1 = (TString)nodeArrayList1.get(0);
	if(tstringNode1 != null)
	{
	  listNode2.add(tstringNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new268() /* reduce ANonTerminal$ParseProductionName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        TString tstringNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        tstringNode2 = (TString)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(tstringNode2 != null)
	{
	  listNode3.add(tstringNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {24, SHIFT, 1}, },
			{{-1, ERROR, 1}, {77, SHIFT, 4}, },
			{{-1, ERROR, 2}, {84, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {25, SHIFT, 5}, },
			{{-1, ERROR, 4}, {81, SHIFT, 7}, },
			{{-1, ERROR, 5}, {79, SHIFT, 8}, },
			{{-1, ERROR, 6}, {46, SHIFT, 9}, },
			{{-1, ERROR, 7}, {78, SHIFT, 11}, },
			{{-1, ERROR, 8}, {1, SHIFT, 12}, {16, SHIFT, 13}, {33, SHIFT, 14}, {68, SHIFT, 15}, {80, SHIFT, 16}, },
			{{-1, ERROR, 9}, {79, SHIFT, 29}, },
			{{-1, REDUCE, 0}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 12}, {79, SHIFT, 30}, },
			{{-1, ERROR, 13}, {77, SHIFT, 31}, },
			{{-1, ERROR, 14}, {77, SHIFT, 32}, },
			{{-1, ERROR, 15}, {79, SHIFT, 33}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 203}, },
			{{-1, REDUCE, 205}, },
			{{-1, ERROR, 19}, {1, SHIFT, 12}, {3, SHIFT, 34}, },
			{{-1, REDUCE, 207}, },
			{{-1, REDUCE, 211}, },
			{{-1, REDUCE, 209}, },
			{{-1, ERROR, 23}, {26, SHIFT, 37}, },
			{{-1, ERROR, 24}, {1, SHIFT, 12}, {16, SHIFT, 13}, {33, SHIFT, 14}, {68, SHIFT, 15}, {80, SHIFT, 39}, },
			{{-1, ERROR, 25}, {1, SHIFT, 12}, {33, SHIFT, 14}, {68, SHIFT, 15}, {80, SHIFT, 45}, },
			{{-1, ERROR, 26}, {1, SHIFT, 12}, {33, SHIFT, 14}, {80, SHIFT, 50}, },
			{{-1, ERROR, 27}, {1, SHIFT, 12}, {33, SHIFT, 14}, {80, SHIFT, 54}, },
			{{-1, ERROR, 28}, {33, SHIFT, 14}, {80, SHIFT, 58}, },
			{{-1, ERROR, 29}, {44, SHIFT, 61}, {47, SHIFT, 62}, {48, SHIFT, 63}, {50, SHIFT, 64}, {63, SHIFT, 65}, {80, SHIFT, 66}, },
			{{-1, ERROR, 30}, {19, SHIFT, 77}, {64, SHIFT, 78}, {80, SHIFT, 79}, },
			{{-1, ERROR, 31}, {81, SHIFT, 84}, },
			{{-1, ERROR, 32}, {81, SHIFT, 85}, },
			{{-1, ERROR, 33}, {33, SHIFT, 14}, },
			{{-1, ERROR, 34}, {77, SHIFT, 87}, },
			{{-1, REDUCE, 51}, {72, SHIFT, 88}, },
			{{-1, ERROR, 36}, {26, SHIFT, 37}, },
			{{-1, ERROR, 37}, {79, SHIFT, 91}, },
			{{-1, REDUCE, 52}, {0, SHIFT, 92}, {18, SHIFT, 93}, {39, SHIFT, 94}, {55, SHIFT, 95}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 204}, },
			{{-1, ERROR, 41}, {1, SHIFT, 12}, {33, SHIFT, 14}, {68, SHIFT, 15}, {80, SHIFT, 98}, },
			{{-1, ERROR, 42}, {1, SHIFT, 12}, {33, SHIFT, 14}, {80, SHIFT, 102}, },
			{{-1, ERROR, 43}, {1, SHIFT, 12}, {33, SHIFT, 14}, {80, SHIFT, 105}, },
			{{-1, ERROR, 44}, {33, SHIFT, 14}, {80, SHIFT, 107}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 206}, },
			{{-1, ERROR, 47}, {1, SHIFT, 12}, {33, SHIFT, 14}, {80, SHIFT, 108}, },
			{{-1, ERROR, 48}, {1, SHIFT, 12}, {33, SHIFT, 14}, {80, SHIFT, 111}, },
			{{-1, ERROR, 49}, {33, SHIFT, 14}, {80, SHIFT, 113}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 208}, },
			{{-1, ERROR, 52}, {1, SHIFT, 12}, {33, SHIFT, 14}, {80, SHIFT, 114}, },
			{{-1, ERROR, 53}, {33, SHIFT, 14}, {80, SHIFT, 116}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 55}, {1, SHIFT, 12}, {3, SHIFT, 34}, },
			{{-1, REDUCE, 210}, },
			{{-1, ERROR, 57}, {33, SHIFT, 14}, {80, SHIFT, 118}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 59}, {3, SHIFT, 34}, },
			{{-1, REDUCE, 212}, },
			{{-1, ERROR, 61}, {79, SHIFT, 119}, },
			{{-1, ERROR, 62}, {79, SHIFT, 120}, },
			{{-1, ERROR, 63}, {79, SHIFT, 121}, },
			{{-1, ERROR, 64}, {79, SHIFT, 122}, },
			{{-1, ERROR, 65}, {79, SHIFT, 123}, },
			{{-1, REDUCE, 92}, },
			{{-1, REDUCE, 227}, },
			{{-1, REDUCE, 229}, },
			{{-1, REDUCE, 231}, },
			{{-1, REDUCE, 233}, },
			{{-1, REDUCE, 235}, },
			{{-1, ERROR, 72}, {44, SHIFT, 61}, {47, SHIFT, 62}, {48, SHIFT, 63}, {50, SHIFT, 64}, {63, SHIFT, 65}, {80, SHIFT, 124}, },
			{{-1, ERROR, 73}, {44, SHIFT, 61}, {47, SHIFT, 62}, {48, SHIFT, 63}, {63, SHIFT, 65}, {80, SHIFT, 130}, },
			{{-1, ERROR, 74}, {47, SHIFT, 62}, {48, SHIFT, 63}, {63, SHIFT, 65}, {80, SHIFT, 135}, },
			{{-1, ERROR, 75}, {47, SHIFT, 62}, {48, SHIFT, 63}, {80, SHIFT, 139}, },
			{{-1, ERROR, 76}, {48, SHIFT, 63}, {80, SHIFT, 142}, },
			{{-1, ERROR, 77}, {79, SHIFT, 144}, },
			{{-1, ERROR, 78}, {79, SHIFT, 145}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 217}, },
			{{-1, REDUCE, 219}, },
			{{-1, ERROR, 82}, {19, SHIFT, 77}, {64, SHIFT, 78}, {80, SHIFT, 146}, },
			{{-1, ERROR, 83}, {19, SHIFT, 77}, {80, SHIFT, 149}, },
			{{-1, ERROR, 84}, {78, SHIFT, 151}, },
			{{-1, ERROR, 85}, {78, SHIFT, 152}, },
			{{-1, ERROR, 86}, {52, SHIFT, 153}, },
			{{-1, ERROR, 87}, {81, SHIFT, 155}, },
			{{-1, ERROR, 88}, {79, SHIFT, 156}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 53}, {0, SHIFT, 92}, {18, SHIFT, 93}, {39, SHIFT, 94}, {55, SHIFT, 95}, },
			{{-1, ERROR, 91}, {27, SHIFT, 158}, },
			{{-1, ERROR, 92}, {77, SHIFT, 161}, },
			{{-1, ERROR, 93}, {77, SHIFT, 162}, },
			{{-1, ERROR, 94}, {79, SHIFT, 163}, },
			{{-1, ERROR, 95}, {77, SHIFT, 164}, },
			{{-1, REDUCE, 215}, },
			{{-1, REDUCE, 54}, {0, SHIFT, 92}, {18, SHIFT, 93}, {39, SHIFT, 94}, {55, SHIFT, 95}, },
			{{-1, REDUCE, 5}, },
			{{-1, ERROR, 99}, {1, SHIFT, 12}, {33, SHIFT, 14}, {80, SHIFT, 166}, },
			{{-1, ERROR, 100}, {1, SHIFT, 12}, {33, SHIFT, 14}, {80, SHIFT, 169}, },
			{{-1, ERROR, 101}, {33, SHIFT, 14}, {80, SHIFT, 171}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 103}, {1, SHIFT, 12}, {33, SHIFT, 14}, {80, SHIFT, 172}, },
			{{-1, ERROR, 104}, {33, SHIFT, 14}, {80, SHIFT, 174}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 106}, {33, SHIFT, 14}, {80, SHIFT, 175}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 8}, },
			{{-1, ERROR, 109}, {1, SHIFT, 12}, {33, SHIFT, 14}, {80, SHIFT, 176}, },
			{{-1, ERROR, 110}, {33, SHIFT, 14}, {80, SHIFT, 178}, },
			{{-1, REDUCE, 12}, },
			{{-1, ERROR, 112}, {33, SHIFT, 14}, {80, SHIFT, 179}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 14}, },
			{{-1, ERROR, 115}, {33, SHIFT, 14}, {80, SHIFT, 180}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 26}, },
			{{-1, ERROR, 119}, {33, SHIFT, 14}, },
			{{-1, ERROR, 120}, {33, SHIFT, 14}, },
			{{-1, ERROR, 121}, {33, SHIFT, 14}, },
			{{-1, ERROR, 122}, {33, SHIFT, 14}, },
			{{-1, ERROR, 123}, {49, SHIFT, 185}, },
			{{-1, REDUCE, 93}, },
			{{-1, REDUCE, 228}, },
			{{-1, ERROR, 126}, {44, SHIFT, 61}, {47, SHIFT, 62}, {48, SHIFT, 63}, {63, SHIFT, 65}, {80, SHIFT, 189}, },
			{{-1, ERROR, 127}, {47, SHIFT, 62}, {48, SHIFT, 63}, {63, SHIFT, 65}, {80, SHIFT, 193}, },
			{{-1, ERROR, 128}, {47, SHIFT, 62}, {48, SHIFT, 63}, {80, SHIFT, 196}, },
			{{-1, ERROR, 129}, {48, SHIFT, 63}, {80, SHIFT, 198}, },
			{{-1, REDUCE, 94}, },
			{{-1, REDUCE, 230}, },
			{{-1, ERROR, 132}, {47, SHIFT, 62}, {48, SHIFT, 63}, {63, SHIFT, 65}, {80, SHIFT, 199}, },
			{{-1, ERROR, 133}, {47, SHIFT, 62}, {48, SHIFT, 63}, {80, SHIFT, 202}, },
			{{-1, ERROR, 134}, {48, SHIFT, 63}, {80, SHIFT, 204}, },
			{{-1, REDUCE, 96}, },
			{{-1, REDUCE, 232}, },
			{{-1, ERROR, 137}, {47, SHIFT, 62}, {48, SHIFT, 63}, {80, SHIFT, 205}, },
			{{-1, ERROR, 138}, {48, SHIFT, 63}, {80, SHIFT, 207}, },
			{{-1, REDUCE, 100}, },
			{{-1, REDUCE, 234}, },
			{{-1, ERROR, 141}, {48, SHIFT, 63}, {80, SHIFT, 208}, },
			{{-1, REDUCE, 108}, },
			{{-1, REDUCE, 236}, },
			{{-1, ERROR, 144}, {15, SHIFT, 209}, {67, SHIFT, 210}, {80, SHIFT, 211}, },
			{{-1, ERROR, 145}, {33, SHIFT, 14}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 218}, },
			{{-1, ERROR, 148}, {19, SHIFT, 77}, {80, SHIFT, 215}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 220}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 37}, },
			{{-1, ERROR, 153}, {77, SHIFT, 216}, },
			{{-1, ERROR, 154}, {17, SHIFT, 217}, {61, SHIFT, 218}, },
			{{-1, ERROR, 155}, {78, SHIFT, 221}, },
			{{-1, ERROR, 156}, {80, SHIFT, 222}, {81, SHIFT, 223}, },
			{{-1, REDUCE, 55}, {0, SHIFT, 92}, {18, SHIFT, 93}, {39, SHIFT, 94}, {55, SHIFT, 95}, },
			{{-1, ERROR, 158}, {79, SHIFT, 226}, },
			{{-1, REDUCE, 221}, },
			{{-1, ERROR, 160}, {27, SHIFT, 158}, {32, SHIFT, 227}, {80, SHIFT, 228}, },
			{{-1, ERROR, 161}, {81, SHIFT, 232}, },
			{{-1, ERROR, 162}, {81, SHIFT, 233}, },
			{{-1, ERROR, 163}, {70, SHIFT, 234}, },
			{{-1, ERROR, 164}, {81, SHIFT, 236}, },
			{{-1, REDUCE, 216}, },
			{{-1, REDUCE, 9}, },
			{{-1, ERROR, 167}, {1, SHIFT, 12}, {33, SHIFT, 14}, {80, SHIFT, 237}, },
			{{-1, ERROR, 168}, {33, SHIFT, 14}, {80, SHIFT, 239}, },
			{{-1, REDUCE, 13}, },
			{{-1, ERROR, 170}, {33, SHIFT, 14}, {80, SHIFT, 240}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 173}, {33, SHIFT, 14}, {80, SHIFT, 241}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 16}, },
			{{-1, ERROR, 177}, {33, SHIFT, 14}, {80, SHIFT, 242}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 30}, },
			{{-1, ERROR, 181}, {40, SHIFT, 243}, },
			{{-1, ERROR, 182}, {11, SHIFT, 246}, {80, SHIFT, 247}, },
			{{-1, ERROR, 183}, {11, SHIFT, 246}, {45, SHIFT, 250}, },
			{{-1, ERROR, 184}, {2, SHIFT, 254}, },
			{{-1, ERROR, 185}, {79, SHIFT, 257}, },
			{{-1, ERROR, 186}, {80, SHIFT, 258}, },
			{{-1, REDUCE, 253}, },
			{{-1, REDUCE, 171}, {49, SHIFT, 185}, },
			{{-1, REDUCE, 95}, },
			{{-1, ERROR, 190}, {47, SHIFT, 62}, {48, SHIFT, 63}, {63, SHIFT, 65}, {80, SHIFT, 260}, },
			{{-1, ERROR, 191}, {47, SHIFT, 62}, {48, SHIFT, 63}, {80, SHIFT, 263}, },
			{{-1, ERROR, 192}, {48, SHIFT, 63}, {80, SHIFT, 265}, },
			{{-1, REDUCE, 97}, },
			{{-1, ERROR, 194}, {47, SHIFT, 62}, {48, SHIFT, 63}, {80, SHIFT, 266}, },
			{{-1, ERROR, 195}, {48, SHIFT, 63}, {80, SHIFT, 268}, },
			{{-1, REDUCE, 101}, },
			{{-1, ERROR, 197}, {48, SHIFT, 63}, {80, SHIFT, 269}, },
			{{-1, REDUCE, 109}, },
			{{-1, REDUCE, 98}, },
			{{-1, ERROR, 200}, {47, SHIFT, 62}, {48, SHIFT, 63}, {80, SHIFT, 270}, },
			{{-1, ERROR, 201}, {48, SHIFT, 63}, {80, SHIFT, 272}, },
			{{-1, REDUCE, 102}, },
			{{-1, ERROR, 203}, {48, SHIFT, 63}, {80, SHIFT, 273}, },
			{{-1, REDUCE, 110}, },
			{{-1, REDUCE, 104}, },
			{{-1, ERROR, 206}, {48, SHIFT, 63}, {80, SHIFT, 274}, },
			{{-1, REDUCE, 112}, },
			{{-1, REDUCE, 116}, },
			{{-1, ERROR, 209}, {77, SHIFT, 275}, },
			{{-1, ERROR, 210}, {77, SHIFT, 276}, },
			{{-1, REDUCE, 61}, },
			{{-1, ERROR, 212}, {67, SHIFT, 210}, {80, SHIFT, 277}, },
			{{-1, ERROR, 213}, {80, SHIFT, 279}, },
			{{-1, ERROR, 214}, {19, SHIFT, 77}, },
			{{-1, REDUCE, 59}, },
			{{-1, ERROR, 216}, {14, SHIFT, 281}, {75, SHIFT, 282}, },
			{{-1, ERROR, 217}, {79, SHIFT, 284}, },
			{{-1, ERROR, 218}, {77, SHIFT, 285}, },
			{{-1, ERROR, 219}, {80, SHIFT, 286}, },
			{{-1, ERROR, 220}, {23, SHIFT, 287}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 49}, },
			{{-1, ERROR, 223}, {78, SHIFT, 289}, },
			{{-1, REDUCE, 213}, },
			{{-1, ERROR, 225}, {80, SHIFT, 290}, {81, SHIFT, 223}, },
			{{-1, ERROR, 226}, {33, SHIFT, 14}, },
			{{-1, ERROR, 227}, {77, SHIFT, 293}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 223}, },
			{{-1, REDUCE, 222}, },
			{{-1, ERROR, 231}, {32, SHIFT, 227}, {80, SHIFT, 294}, },
			{{-1, ERROR, 232}, {78, SHIFT, 296}, },
			{{-1, ERROR, 233}, {78, SHIFT, 297}, },
			{{-1, ERROR, 234}, {77, SHIFT, 298}, },
			{{-1, ERROR, 235}, {59, SHIFT, 299}, },
			{{-1, ERROR, 236}, {78, SHIFT, 301}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 238}, {33, SHIFT, 14}, {80, SHIFT, 302}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 243}, {79, SHIFT, 303}, },
			{{-1, REDUCE, 241}, },
			{{-1, ERROR, 245}, {40, SHIFT, 243}, {56, SHIFT, 304}, {80, SHIFT, 305}, },
			{{-1, ERROR, 246}, {79, SHIFT, 309}, },
			{{-1, REDUCE, 177}, },
			{{-1, REDUCE, 239}, },
			{{-1, ERROR, 249}, {11, SHIFT, 246}, {80, SHIFT, 310}, },
			{{-1, ERROR, 250}, {77, SHIFT, 312}, },
			{{-1, REDUCE, 267}, },
			{{-1, ERROR, 252}, {11, SHIFT, 246}, {45, SHIFT, 250}, },
			{{-1, ERROR, 253}, {45, SHIFT, 250}, {80, SHIFT, 314}, },
			{{-1, ERROR, 254}, {79, SHIFT, 316}, },
			{{-1, REDUCE, 237}, },
			{{-1, ERROR, 256}, {2, SHIFT, 254}, {80, SHIFT, 317}, },
			{{-1, ERROR, 257}, {33, SHIFT, 14}, },
			{{-1, REDUCE, 170}, },
			{{-1, REDUCE, 254}, },
			{{-1, REDUCE, 99}, },
			{{-1, ERROR, 261}, {47, SHIFT, 62}, {48, SHIFT, 63}, {80, SHIFT, 320}, },
			{{-1, ERROR, 262}, {48, SHIFT, 63}, {80, SHIFT, 322}, },
			{{-1, REDUCE, 103}, },
			{{-1, ERROR, 264}, {48, SHIFT, 63}, {80, SHIFT, 323}, },
			{{-1, REDUCE, 111}, },
			{{-1, REDUCE, 105}, },
			{{-1, ERROR, 267}, {48, SHIFT, 63}, {80, SHIFT, 324}, },
			{{-1, REDUCE, 113}, },
			{{-1, REDUCE, 117}, },
			{{-1, REDUCE, 106}, },
			{{-1, ERROR, 271}, {48, SHIFT, 63}, {80, SHIFT, 325}, },
			{{-1, REDUCE, 114}, },
			{{-1, REDUCE, 118}, },
			{{-1, REDUCE, 120}, },
			{{-1, ERROR, 275}, {82, SHIFT, 326}, },
			{{-1, ERROR, 276}, {82, SHIFT, 327}, },
			{{-1, REDUCE, 62}, },
			{{-1, ERROR, 278}, {80, SHIFT, 328}, },
			{{-1, REDUCE, 63}, },
			{{-1, ERROR, 280}, {19, SHIFT, 77}, {80, SHIFT, 329}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 45}, },
			{{-1, ERROR, 283}, {78, SHIFT, 330}, },
			{{-1, ERROR, 284}, {80, SHIFT, 331}, {81, SHIFT, 223}, },
			{{-1, ERROR, 285}, {81, SHIFT, 333}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 287}, {79, SHIFT, 334}, },
			{{-1, ERROR, 288}, {80, SHIFT, 335}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 50}, },
			{{-1, REDUCE, 214}, },
			{{-1, ERROR, 292}, {6, SHIFT, 336}, {12, SHIFT, 337}, {19, SHIFT, 77}, {28, SHIFT, 338}, {32, SHIFT, 227}, },
			{{-1, ERROR, 293}, {81, SHIFT, 345}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 224}, },
			{{-1, REDUCE, 87}, },
			{{-1, REDUCE, 88}, },
			{{-1, ERROR, 298}, {81, SHIFT, 346}, },
			{{-1, ERROR, 299}, {77, SHIFT, 347}, },
			{{-1, ERROR, 300}, {80, SHIFT, 348}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 303}, {33, SHIFT, 14}, },
			{{-1, ERROR, 304}, {79, SHIFT, 350}, },
			{{-1, REDUCE, 139}, },
			{{-1, REDUCE, 243}, },
			{{-1, REDUCE, 242}, },
			{{-1, ERROR, 308}, {56, SHIFT, 304}, {80, SHIFT, 351}, },
			{{-1, ERROR, 309}, {33, SHIFT, 14}, },
			{{-1, REDUCE, 178}, },
			{{-1, REDUCE, 240}, },
			{{-1, ERROR, 312}, {81, SHIFT, 354}, },
			{{-1, ERROR, 313}, {45, SHIFT, 250}, {80, SHIFT, 355}, },
			{{-1, REDUCE, 199}, },
			{{-1, REDUCE, 268}, },
			{{-1, ERROR, 316}, {33, SHIFT, 14}, },
			{{-1, REDUCE, 124}, },
			{{-1, REDUCE, 238}, },
			{{-1, ERROR, 319}, {10, SHIFT, 357}, {22, SHIFT, 358}, {53, SHIFT, 359}, {58, SHIFT, 360}, {60, SHIFT, 361}, {69, SHIFT, 362}, {74, SHIFT, 363}, },
			{{-1, REDUCE, 107}, },
			{{-1, ERROR, 321}, {48, SHIFT, 63}, {80, SHIFT, 369}, },
			{{-1, REDUCE, 115}, },
			{{-1, REDUCE, 119}, },
			{{-1, REDUCE, 121}, },
			{{-1, REDUCE, 122}, },
			{{-1, ERROR, 326}, {78, SHIFT, 370}, },
			{{-1, ERROR, 327}, {78, SHIFT, 371}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 332}, {80, SHIFT, 372}, {81, SHIFT, 223}, },
			{{-1, ERROR, 333}, {78, SHIFT, 373}, },
			{{-1, ERROR, 334}, {80, SHIFT, 374}, {81, SHIFT, 223}, },
			{{-1, REDUCE, 35}, },
			{{-1, ERROR, 336}, {77, SHIFT, 376}, },
			{{-1, ERROR, 337}, {77, SHIFT, 377}, },
			{{-1, ERROR, 338}, {79, SHIFT, 378}, },
			{{-1, ERROR, 339}, {12, SHIFT, 337}, {19, SHIFT, 77}, {28, SHIFT, 338}, },
			{{-1, ERROR, 340}, {80, SHIFT, 382}, },
			{{-1, ERROR, 341}, {32, SHIFT, 227}, {70, SHIFT, 234}, },
			{{-1, REDUCE, 225}, },
			{{-1, ERROR, 343}, {12, SHIFT, 337}, {19, SHIFT, 77}, },
			{{-1, ERROR, 344}, {12, SHIFT, 337}, {19, SHIFT, 77}, {28, SHIFT, 338}, },
			{{-1, ERROR, 345}, {78, SHIFT, 389}, },
			{{-1, ERROR, 346}, {78, SHIFT, 390}, },
			{{-1, ERROR, 347}, {81, SHIFT, 391}, },
			{{-1, REDUCE, 90}, },
			{{-1, ERROR, 349}, {42, SHIFT, 392}, {73, SHIFT, 393}, {80, SHIFT, 394}, },
			{{-1, ERROR, 350}, {33, SHIFT, 14}, },
			{{-1, REDUCE, 140}, },
			{{-1, REDUCE, 244}, },
			{{-1, ERROR, 353}, {52, SHIFT, 153}, },
			{{-1, ERROR, 354}, {78, SHIFT, 401}, },
			{{-1, REDUCE, 200}, },
			{{-1, ERROR, 356}, {52, SHIFT, 153}, },
			{{-1, ERROR, 357}, {79, SHIFT, 403}, },
			{{-1, ERROR, 358}, {77, SHIFT, 404}, },
			{{-1, ERROR, 359}, {77, SHIFT, 405}, },
			{{-1, ERROR, 360}, {77, SHIFT, 406}, },
			{{-1, ERROR, 361}, {79, SHIFT, 407}, },
			{{-1, ERROR, 362}, {79, SHIFT, 408}, },
			{{-1, ERROR, 363}, {77, SHIFT, 409}, },
			{{-1, ERROR, 364}, {10, SHIFT, 357}, {53, SHIFT, 359}, {58, SHIFT, 360}, {60, SHIFT, 361}, {69, SHIFT, 362}, {74, SHIFT, 363}, },
			{{-1, ERROR, 365}, {51, SHIFT, 411}, {71, SHIFT, 412}, {80, SHIFT, 413}, },
			{{-1, REDUCE, 257}, },
			{{-1, REDUCE, 179}, },
			{{-1, REDUCE, 180}, {10, SHIFT, 357}, },
			{{-1, REDUCE, 123}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 42}, },
			{{-1, ERROR, 375}, {80, SHIFT, 417}, {81, SHIFT, 223}, },
			{{-1, ERROR, 376}, {82, SHIFT, 418}, },
			{{-1, ERROR, 377}, {14, SHIFT, 281}, {75, SHIFT, 282}, },
			{{-1, ERROR, 378}, {65, SHIFT, 420}, {66, SHIFT, 421}, },
			{{-1, ERROR, 379}, {80, SHIFT, 424}, },
			{{-1, ERROR, 380}, {12, SHIFT, 337}, {19, SHIFT, 77}, },
			{{-1, ERROR, 381}, {12, SHIFT, 337}, {19, SHIFT, 77}, {28, SHIFT, 338}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 383}, {70, SHIFT, 234}, },
			{{-1, ERROR, 384}, {80, SHIFT, 429}, },
			{{-1, ERROR, 385}, {80, SHIFT, 430}, },
			{{-1, ERROR, 386}, {80, SHIFT, 431}, },
			{{-1, REDUCE, 226}, },
			{{-1, ERROR, 388}, {12, SHIFT, 337}, {19, SHIFT, 77}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 82}, },
			{{-1, ERROR, 391}, {78, SHIFT, 433}, },
			{{-1, ERROR, 392}, {77, SHIFT, 434}, },
			{{-1, ERROR, 393}, {79, SHIFT, 435}, },
			{{-1, REDUCE, 142}, },
			{{-1, REDUCE, 245}, },
			{{-1, REDUCE, 247}, },
			{{-1, ERROR, 397}, {42, SHIFT, 392}, {73, SHIFT, 393}, {80, SHIFT, 436}, },
			{{-1, ERROR, 398}, {73, SHIFT, 393}, {80, SHIFT, 439}, },
			{{-1, ERROR, 399}, {4, SHIFT, 441}, {20, SHIFT, 442}, {36, SHIFT, 443}, {38, SHIFT, 444}, {76, SHIFT, 445}, },
			{{-1, ERROR, 400}, {4, SHIFT, 441}, {20, SHIFT, 442}, {36, SHIFT, 443}, {38, SHIFT, 444}, {76, SHIFT, 445}, },
			{{-1, REDUCE, 198}, },
			{{-1, ERROR, 402}, {11, SHIFT, 246}, {80, SHIFT, 450}, },
			{{-1, ERROR, 403}, {30, SHIFT, 452}, },
			{{-1, ERROR, 404}, {81, SHIFT, 454}, },
			{{-1, ERROR, 405}, {81, SHIFT, 455}, },
			{{-1, ERROR, 406}, {81, SHIFT, 456}, },
			{{-1, ERROR, 407}, {61, SHIFT, 218}, },
			{{-1, ERROR, 408}, {33, SHIFT, 14}, },
			{{-1, ERROR, 409}, {81, SHIFT, 459}, },
			{{-1, ERROR, 410}, {51, SHIFT, 411}, {71, SHIFT, 412}, {80, SHIFT, 460}, },
			{{-1, ERROR, 411}, {79, SHIFT, 462}, },
			{{-1, ERROR, 412}, {79, SHIFT, 463}, },
			{{-1, REDUCE, 172}, },
			{{-1, REDUCE, 255}, },
			{{-1, ERROR, 415}, {51, SHIFT, 411}, {71, SHIFT, 412}, {80, SHIFT, 464}, },
			{{-1, REDUCE, 258}, },
			{{-1, REDUCE, 43}, },
			{{-1, ERROR, 418}, {78, SHIFT, 466}, },
			{{-1, ERROR, 419}, {78, SHIFT, 467}, },
			{{-1, ERROR, 420}, {77, SHIFT, 468}, },
			{{-1, ERROR, 421}, {77, SHIFT, 469}, },
			{{-1, ERROR, 422}, {66, SHIFT, 421}, },
			{{-1, ERROR, 423}, {80, SHIFT, 471}, },
			{{-1, REDUCE, 71}, },
			{{-1, ERROR, 425}, {80, SHIFT, 472}, },
			{{-1, ERROR, 426}, {80, SHIFT, 473}, },
			{{-1, ERROR, 427}, {12, SHIFT, 337}, {19, SHIFT, 77}, },
			{{-1, ERROR, 428}, {80, SHIFT, 475}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 72}, },
			{{-1, ERROR, 432}, {80, SHIFT, 476}, },
			{{-1, REDUCE, 91}, },
			{{-1, ERROR, 434}, {81, SHIFT, 477}, },
			{{-1, ERROR, 435}, {57, SHIFT, 478}, },
			{{-1, REDUCE, 143}, },
			{{-1, REDUCE, 246}, },
			{{-1, ERROR, 438}, {73, SHIFT, 393}, {80, SHIFT, 480}, },
			{{-1, REDUCE, 144}, },
			{{-1, REDUCE, 248}, },
			{{-1, ERROR, 441}, {79, SHIFT, 481}, },
			{{-1, ERROR, 442}, {79, SHIFT, 482}, },
			{{-1, ERROR, 443}, {79, SHIFT, 483}, },
			{{-1, ERROR, 444}, {79, SHIFT, 484}, },
			{{-1, ERROR, 445}, {79, SHIFT, 485}, },
			{{-1, ERROR, 446}, {80, SHIFT, 486}, },
			{{-1, REDUCE, 128}, },
			{{-1, REDUCE, 129}, },
			{{-1, ERROR, 449}, {80, SHIFT, 487}, },
			{{-1, REDUCE, 125}, },
			{{-1, ERROR, 451}, {11, SHIFT, 246}, {80, SHIFT, 488}, },
			{{-1, ERROR, 452}, {77, SHIFT, 489}, },
			{{-1, ERROR, 453}, {7, SHIFT, 490}, {9, SHIFT, 491}, {80, SHIFT, 492}, },
			{{-1, ERROR, 454}, {78, SHIFT, 496}, },
			{{-1, ERROR, 455}, {78, SHIFT, 497}, },
			{{-1, ERROR, 456}, {78, SHIFT, 498}, },
			{{-1, ERROR, 457}, {13, SHIFT, 499}, },
			{{-1, ERROR, 458}, {41, SHIFT, 502}, },
			{{-1, ERROR, 459}, {78, SHIFT, 504}, },
			{{-1, REDUCE, 173}, },
			{{-1, ERROR, 461}, {51, SHIFT, 411}, {71, SHIFT, 412}, {80, SHIFT, 505}, },
			{{-1, ERROR, 462}, {45, SHIFT, 250}, },
			{{-1, ERROR, 463}, {70, SHIFT, 234}, },
			{{-1, REDUCE, 174}, },
			{{-1, REDUCE, 256}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 80}, },
			{{-1, ERROR, 468}, {81, SHIFT, 508}, },
			{{-1, ERROR, 469}, {81, SHIFT, 509}, },
			{{-1, ERROR, 470}, {80, SHIFT, 510}, },
			{{-1, REDUCE, 83}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 73}, },
			{{-1, ERROR, 474}, {80, SHIFT, 511}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 76}, },
			{{-1, ERROR, 477}, {78, SHIFT, 512}, },
			{{-1, ERROR, 478}, {77, SHIFT, 513}, },
			{{-1, ERROR, 479}, {5, SHIFT, 514}, {21, SHIFT, 515}, {34, SHIFT, 516}, {35, SHIFT, 517}, {37, SHIFT, 518}, {54, SHIFT, 519}, },
			{{-1, REDUCE, 145}, },
			{{-1, ERROR, 481}, {33, SHIFT, 14}, },
			{{-1, ERROR, 482}, {33, SHIFT, 14}, },
			{{-1, ERROR, 483}, {33, SHIFT, 14}, },
			{{-1, ERROR, 484}, {33, SHIFT, 14}, },
			{{-1, ERROR, 485}, {33, SHIFT, 14}, },
			{{-1, REDUCE, 141}, },
			{{-1, REDUCE, 127}, },
			{{-1, REDUCE, 126}, },
			{{-1, ERROR, 489}, {82, SHIFT, 526}, },
			{{-1, ERROR, 490}, {79, SHIFT, 527}, },
			{{-1, ERROR, 491}, {77, SHIFT, 528}, },
			{{-1, REDUCE, 181}, },
			{{-1, ERROR, 493}, {7, SHIFT, 490}, {80, SHIFT, 529}, },
			{{-1, REDUCE, 259}, },
			{{-1, ERROR, 495}, {7, SHIFT, 490}, {80, SHIFT, 531}, },
			{{-1, REDUCE, 176}, },
			{{-1, REDUCE, 192}, },
			{{-1, REDUCE, 191}, },
			{{-1, ERROR, 499}, {79, SHIFT, 533}, },
			{{-1, REDUCE, 265}, },
			{{-1, ERROR, 501}, {13, SHIFT, 499}, {80, SHIFT, 534}, },
			{{-1, ERROR, 502}, {77, SHIFT, 536}, },
			{{-1, ERROR, 503}, {80, SHIFT, 537}, },
			{{-1, REDUCE, 194}, },
			{{-1, REDUCE, 175}, },
			{{-1, ERROR, 506}, {66, SHIFT, 421}, },
			{{-1, ERROR, 507}, {66, SHIFT, 421}, },
			{{-1, ERROR, 508}, {78, SHIFT, 540}, },
			{{-1, ERROR, 509}, {78, SHIFT, 541}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 146}, },
			{{-1, ERROR, 513}, {81, SHIFT, 542}, },
			{{-1, ERROR, 514}, {79, SHIFT, 543}, },
			{{-1, ERROR, 515}, {79, SHIFT, 544}, },
			{{-1, ERROR, 516}, {79, SHIFT, 545}, },
			{{-1, ERROR, 517}, {78, SHIFT, 546}, },
			{{-1, ERROR, 518}, {79, SHIFT, 547}, },
			{{-1, ERROR, 519}, {79, SHIFT, 548}, },
			{{-1, ERROR, 520}, {80, SHIFT, 549}, },
			{{-1, ERROR, 521}, {52, SHIFT, 153}, },
			{{-1, ERROR, 522}, {52, SHIFT, 153}, },
			{{-1, ERROR, 523}, {52, SHIFT, 153}, },
			{{-1, ERROR, 524}, {52, SHIFT, 153}, },
			{{-1, ERROR, 525}, {52, SHIFT, 153}, },
			{{-1, ERROR, 526}, {78, SHIFT, 555}, },
			{{-1, ERROR, 527}, {8, SHIFT, 556}, },
			{{-1, ERROR, 528}, {81, SHIFT, 559}, },
			{{-1, REDUCE, 182}, },
			{{-1, ERROR, 530}, {7, SHIFT, 490}, {80, SHIFT, 560}, },
			{{-1, REDUCE, 183}, },
			{{-1, REDUCE, 260}, },
			{{-1, ERROR, 533}, {45, SHIFT, 250}, },
			{{-1, REDUCE, 193}, },
			{{-1, REDUCE, 266}, },
			{{-1, ERROR, 536}, {81, SHIFT, 562}, },
			{{-1, REDUCE, 195}, },
			{{-1, ERROR, 538}, {80, SHIFT, 563}, },
			{{-1, ERROR, 539}, {80, SHIFT, 564}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 542}, {78, SHIFT, 565}, },
			{{-1, ERROR, 543}, {33, SHIFT, 14}, },
			{{-1, ERROR, 544}, {33, SHIFT, 14}, },
			{{-1, ERROR, 545}, {33, SHIFT, 14}, },
			{{-1, REDUCE, 150}, },
			{{-1, ERROR, 547}, {33, SHIFT, 14}, },
			{{-1, ERROR, 548}, {43, SHIFT, 570}, },
			{{-1, REDUCE, 147}, },
			{{-1, ERROR, 550}, {62, SHIFT, 572}, {82, SHIFT, 573}, },
			{{-1, ERROR, 551}, {15, SHIFT, 209}, {62, SHIFT, 572}, },
			{{-1, ERROR, 552}, {62, SHIFT, 572}, {82, SHIFT, 577}, },
			{{-1, ERROR, 553}, {80, SHIFT, 579}, },
			{{-1, ERROR, 554}, {80, SHIFT, 580}, },
			{{-1, REDUCE, 185}, },
			{{-1, ERROR, 556}, {79, SHIFT, 581}, },
			{{-1, REDUCE, 261}, },
			{{-1, ERROR, 558}, {8, SHIFT, 556}, {53, SHIFT, 359}, {58, SHIFT, 360}, {60, SHIFT, 361}, {69, SHIFT, 362}, {74, SHIFT, 363}, },
			{{-1, ERROR, 559}, {78, SHIFT, 584}, },
			{{-1, REDUCE, 184}, },
			{{-1, ERROR, 561}, {41, SHIFT, 502}, },
			{{-1, ERROR, 562}, {78, SHIFT, 586}, },
			{{-1, REDUCE, 202}, },
			{{-1, REDUCE, 201}, },
			{{-1, REDUCE, 148}, },
			{{-1, ERROR, 566}, {52, SHIFT, 153}, },
			{{-1, ERROR, 567}, {52, SHIFT, 153}, },
			{{-1, ERROR, 568}, {5, SHIFT, 514}, {21, SHIFT, 515}, {34, SHIFT, 516}, {35, SHIFT, 517}, {37, SHIFT, 518}, {54, SHIFT, 519}, {80, SHIFT, 589}, },
			{{-1, ERROR, 569}, {52, SHIFT, 153}, },
			{{-1, ERROR, 570}, {77, SHIFT, 593}, },
			{{-1, ERROR, 571}, {57, SHIFT, 478}, },
			{{-1, ERROR, 572}, {77, SHIFT, 595}, },
			{{-1, ERROR, 573}, {78, SHIFT, 596}, },
			{{-1, ERROR, 574}, {52, SHIFT, 153}, },
			{{-1, ERROR, 575}, {67, SHIFT, 210}, },
			{{-1, ERROR, 576}, {52, SHIFT, 153}, },
			{{-1, ERROR, 577}, {78, SHIFT, 600}, },
			{{-1, ERROR, 578}, {52, SHIFT, 153}, },
			{{-1, REDUCE, 130}, },
			{{-1, REDUCE, 131}, },
			{{-1, ERROR, 581}, {30, SHIFT, 452}, },
			{{-1, REDUCE, 262}, },
			{{-1, ERROR, 583}, {80, SHIFT, 603}, },
			{{-1, REDUCE, 186}, },
			{{-1, ERROR, 585}, {80, SHIFT, 604}, },
			{{-1, REDUCE, 196}, },
			{{-1, ERROR, 587}, {62, SHIFT, 572}, {82, SHIFT, 605}, },
			{{-1, ERROR, 588}, {15, SHIFT, 209}, {62, SHIFT, 572}, },
			{{-1, REDUCE, 152}, },
			{{-1, REDUCE, 249}, },
			{{-1, ERROR, 591}, {5, SHIFT, 514}, {21, SHIFT, 515}, {34, SHIFT, 516}, {35, SHIFT, 517}, {37, SHIFT, 518}, {54, SHIFT, 519}, {80, SHIFT, 609}, },
			{{-1, ERROR, 592}, {62, SHIFT, 572}, {82, SHIFT, 611}, },
			{{-1, ERROR, 593}, {81, SHIFT, 613}, },
			{{-1, ERROR, 594}, {80, SHIFT, 614}, },
			{{-1, ERROR, 595}, {81, SHIFT, 615}, },
			{{-1, ERROR, 596}, {80, SHIFT, 616}, },
			{{-1, ERROR, 597}, {82, SHIFT, 617}, },
			{{-1, ERROR, 598}, {80, SHIFT, 618}, },
			{{-1, ERROR, 599}, {15, SHIFT, 209}, },
			{{-1, ERROR, 600}, {80, SHIFT, 620}, },
			{{-1, ERROR, 601}, {82, SHIFT, 621}, },
			{{-1, ERROR, 602}, {31, SHIFT, 622}, },
			{{-1, REDUCE, 187}, },
			{{-1, REDUCE, 197}, },
			{{-1, ERROR, 605}, {78, SHIFT, 625}, },
			{{-1, ERROR, 606}, {52, SHIFT, 153}, },
			{{-1, ERROR, 607}, {67, SHIFT, 210}, },
			{{-1, ERROR, 608}, {52, SHIFT, 153}, },
			{{-1, REDUCE, 153}, },
			{{-1, REDUCE, 250}, },
			{{-1, ERROR, 611}, {78, SHIFT, 629}, },
			{{-1, ERROR, 612}, {52, SHIFT, 153}, },
			{{-1, ERROR, 613}, {78, SHIFT, 631}, },
			{{-1, REDUCE, 151}, },
			{{-1, ERROR, 615}, {78, SHIFT, 632}, },
			{{-1, REDUCE, 134}, },
			{{-1, ERROR, 617}, {78, SHIFT, 633}, },
			{{-1, REDUCE, 133}, },
			{{-1, ERROR, 619}, {67, SHIFT, 210}, },
			{{-1, REDUCE, 132}, },
			{{-1, ERROR, 621}, {78, SHIFT, 635}, },
			{{-1, ERROR, 622}, {79, SHIFT, 636}, },
			{{-1, REDUCE, 263}, },
			{{-1, ERROR, 624}, {31, SHIFT, 622}, {80, SHIFT, 637}, },
			{{-1, ERROR, 625}, {29, SHIFT, 639}, {34, SHIFT, 640}, {54, SHIFT, 641}, {80, SHIFT, 642}, },
			{{-1, ERROR, 626}, {82, SHIFT, 645}, },
			{{-1, ERROR, 627}, {29, SHIFT, 639}, {34, SHIFT, 640}, {54, SHIFT, 641}, {80, SHIFT, 646}, },
			{{-1, ERROR, 628}, {15, SHIFT, 209}, },
			{{-1, ERROR, 629}, {29, SHIFT, 639}, {34, SHIFT, 640}, {54, SHIFT, 641}, {80, SHIFT, 649}, },
			{{-1, ERROR, 630}, {82, SHIFT, 651}, },
			{{-1, REDUCE, 149}, },
			{{-1, REDUCE, 138}, },
			{{-1, ERROR, 633}, {80, SHIFT, 652}, },
			{{-1, ERROR, 634}, {80, SHIFT, 653}, },
			{{-1, ERROR, 635}, {80, SHIFT, 654}, },
			{{-1, ERROR, 636}, {65, SHIFT, 420}, {80, SHIFT, 655}, },
			{{-1, REDUCE, 188}, },
			{{-1, REDUCE, 264}, },
			{{-1, ERROR, 639}, {79, SHIFT, 657}, },
			{{-1, ERROR, 640}, {79, SHIFT, 658}, },
			{{-1, ERROR, 641}, {79, SHIFT, 659}, },
			{{-1, REDUCE, 158}, },
			{{-1, REDUCE, 251}, },
			{{-1, ERROR, 644}, {29, SHIFT, 639}, {34, SHIFT, 640}, {54, SHIFT, 641}, {80, SHIFT, 660}, },
			{{-1, ERROR, 645}, {78, SHIFT, 662}, },
			{{-1, REDUCE, 156}, },
			{{-1, ERROR, 647}, {29, SHIFT, 639}, {34, SHIFT, 640}, {54, SHIFT, 641}, {80, SHIFT, 663}, },
			{{-1, ERROR, 648}, {67, SHIFT, 210}, },
			{{-1, REDUCE, 154}, },
			{{-1, ERROR, 650}, {29, SHIFT, 639}, {34, SHIFT, 640}, {54, SHIFT, 641}, {80, SHIFT, 665}, },
			{{-1, ERROR, 651}, {78, SHIFT, 666}, },
			{{-1, REDUCE, 137}, },
			{{-1, REDUCE, 136}, },
			{{-1, REDUCE, 135}, },
			{{-1, REDUCE, 189}, },
			{{-1, ERROR, 656}, {80, SHIFT, 667}, },
			{{-1, ERROR, 657}, {43, SHIFT, 570}, },
			{{-1, ERROR, 658}, {33, SHIFT, 14}, },
			{{-1, ERROR, 659}, {43, SHIFT, 570}, },
			{{-1, REDUCE, 159}, },
			{{-1, REDUCE, 252}, },
			{{-1, ERROR, 662}, {29, SHIFT, 639}, {34, SHIFT, 640}, {54, SHIFT, 641}, {80, SHIFT, 671}, },
			{{-1, REDUCE, 157}, },
			{{-1, ERROR, 664}, {29, SHIFT, 639}, {34, SHIFT, 640}, {54, SHIFT, 641}, {80, SHIFT, 673}, },
			{{-1, REDUCE, 155}, },
			{{-1, ERROR, 666}, {29, SHIFT, 639}, {34, SHIFT, 640}, {54, SHIFT, 641}, {80, SHIFT, 675}, },
			{{-1, REDUCE, 190}, },
			{{-1, ERROR, 668}, {57, SHIFT, 478}, },
			{{-1, ERROR, 669}, {5, SHIFT, 514}, {21, SHIFT, 515}, {34, SHIFT, 516}, {35, SHIFT, 517}, {37, SHIFT, 518}, {54, SHIFT, 519}, {80, SHIFT, 678}, },
			{{-1, ERROR, 670}, {57, SHIFT, 478}, },
			{{-1, REDUCE, 164}, },
			{{-1, ERROR, 672}, {29, SHIFT, 639}, {34, SHIFT, 640}, {54, SHIFT, 641}, {80, SHIFT, 681}, },
			{{-1, REDUCE, 162}, },
			{{-1, ERROR, 674}, {29, SHIFT, 639}, {34, SHIFT, 640}, {54, SHIFT, 641}, {80, SHIFT, 682}, },
			{{-1, REDUCE, 160}, },
			{{-1, ERROR, 676}, {29, SHIFT, 639}, {34, SHIFT, 640}, {54, SHIFT, 641}, {80, SHIFT, 683}, },
			{{-1, ERROR, 677}, {80, SHIFT, 684}, },
			{{-1, REDUCE, 168}, },
			{{-1, ERROR, 679}, {5, SHIFT, 514}, {21, SHIFT, 515}, {34, SHIFT, 516}, {35, SHIFT, 517}, {37, SHIFT, 518}, {54, SHIFT, 519}, {80, SHIFT, 685}, },
			{{-1, ERROR, 680}, {80, SHIFT, 686}, },
			{{-1, REDUCE, 165}, },
			{{-1, REDUCE, 163}, },
			{{-1, REDUCE, 161}, },
			{{-1, REDUCE, 167}, },
			{{-1, REDUCE, 169}, },
			{{-1, REDUCE, 166}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 3}, },
			{{-1, 6}, },
			{{-1, 17}, {24, 40}, },
			{{-1, 18}, {25, 46}, {41, 46}, },
			{{-1, 59}, {8, 19}, {24, 19}, {25, 19}, {26, 19}, {27, 55}, {33, 86}, {41, 19}, {42, 19}, {43, 55}, {47, 19}, {48, 55}, {52, 55}, {99, 19}, {100, 55}, {103, 55}, {109, 55}, {119, 181}, {120, 182}, {121, 183}, {122, 184}, {145, 214}, {167, 55}, {226, 292}, {257, 319}, {303, 349}, {309, 353}, {316, 356}, {350, 399}, {408, 458}, {481, 521}, {482, 522}, {483, 523}, {484, 524}, {485, 525}, {543, 566}, {544, 567}, {545, 568}, {547, 569}, {658, 669}, },
			{{-1, 154}, {353, 400}, {356, 402}, {521, 550}, {522, 551}, {523, 552}, {524, 553}, {525, 554}, {566, 587}, {567, 588}, {569, 592}, {574, 597}, {576, 599}, {578, 601}, {606, 626}, {608, 628}, {612, 630}, },
			{{-1, 219}, {407, 457}, },
			{{-1, 220}, },
			{{-1, 288}, },
			{{-1, 224}, {225, 291}, {332, 291}, {375, 291}, },
			{{-1, 283}, {377, 419}, },
			{{-1, 20}, {26, 51}, {42, 51}, {47, 51}, {99, 51}, },
			{{-1, 117}, {19, 35}, },
			{{-1, 89}, },
			{{-1, 21}, {28, 60}, {44, 60}, {49, 60}, {53, 60}, {57, 60}, {101, 60}, {104, 60}, {106, 60}, {110, 60}, {112, 60}, {115, 60}, {168, 60}, {170, 60}, {173, 60}, {177, 60}, {238, 60}, },
			{{-1, 22}, {27, 56}, {43, 56}, {48, 56}, {52, 56}, {100, 56}, {103, 56}, {109, 56}, {167, 56}, },
			{{-1, 23}, {19, 36}, {55, 36}, },
			{{-1, 80}, {82, 147}, },
			{{-1, 81}, {83, 150}, {148, 150}, {280, 150}, {343, 150}, {380, 150}, {388, 150}, {427, 150}, },
			{{-1, 212}, {551, 575}, {588, 607}, {599, 619}, {628, 648}, },
			{{-1, 213}, {212, 278}, {575, 598}, {607, 627}, {619, 634}, {648, 664}, },
			{{-1, 38}, {36, 90}, },
			{{-1, 229}, {231, 295}, {292, 339}, {341, 383}, },
			{{-1, 159}, {160, 230}, },
			{{-1, 340}, {339, 379}, {343, 385}, {344, 386}, {380, 425}, {381, 426}, {388, 432}, {427, 474}, },
			{{-1, 341}, },
			{{-1, 235}, {341, 384}, {383, 428}, {463, 507}, },
			{{-1, 342}, {344, 387}, {381, 387}, },
			{{-1, 422}, {636, 656}, },
			{{-1, 423}, {422, 470}, {506, 538}, {507, 539}, },
			{{-1, 96}, {97, 165}, {157, 165}, },
			{{-1, 300}, },
			{{-1, 10}, },
			{{-1, 67}, {72, 125}, },
			{{-1, 255}, {256, 318}, },
			{{-1, 248}, {249, 311}, {252, 311}, {451, 311}, },
			{{-1, 446}, {400, 449}, },
			{{-1, 447}, },
			{{-1, 448}, },
			{{-1, 574}, {551, 576}, {552, 578}, {587, 606}, {588, 608}, {592, 612}, },
			{{-1, 68}, {73, 131}, {126, 131}, },
			{{-1, 306}, {308, 352}, },
			{{-1, 244}, {245, 307}, },
			{{-1, 395}, {397, 437}, },
			{{-1, 396}, {398, 440}, {438, 440}, },
			{{-1, 479}, {571, 594}, {668, 677}, {670, 680}, },
			{{-1, 571}, {657, 668}, {659, 670}, },
			{{-1, 590}, {479, 520}, {591, 610}, {679, 610}, },
			{{-1, 643}, {644, 661}, {647, 661}, {650, 661}, {672, 661}, {674, 661}, {676, 661}, },
			{{-1, 69}, {74, 136}, {127, 136}, {132, 136}, {190, 136}, },
			{{-1, 186}, },
			{{-1, 187}, {188, 259}, },
			{{-1, 364}, },
			{{-1, 70}, {75, 140}, {128, 140}, {133, 140}, {137, 140}, {191, 140}, {194, 140}, {200, 140}, {261, 140}, },
			{{-1, 365}, {364, 410}, },
			{{-1, 366}, {368, 416}, },
			{{-1, 453}, {581, 602}, },
			{{-1, 493}, },
			{{-1, 494}, {495, 532}, {530, 532}, },
			{{-1, 557}, {558, 582}, },
			{{-1, 623}, {624, 638}, },
			{{-1, 367}, {558, 583}, },
			{{-1, 503}, {561, 585}, },
			{{-1, 500}, {501, 535}, },
			{{-1, 251}, {253, 315}, {313, 315}, {462, 506}, {533, 561}, },
			{{-1, 71}, {76, 143}, {129, 143}, {134, 143}, {138, 143}, {141, 143}, {192, 143}, {195, 143}, {197, 143}, {201, 143}, {203, 143}, {206, 143}, {262, 143}, {264, 143}, {267, 143}, {271, 143}, {321, 143}, },
			{{-1, 414}, {415, 465}, {461, 465}, },
			{{-1, 24}, },
			{{-1, 25}, {24, 41}, },
			{{-1, 26}, {24, 42}, {25, 47}, {41, 99}, },
			{{-1, 27}, {24, 43}, {25, 48}, {26, 52}, {41, 100}, {42, 103}, {47, 109}, {99, 167}, },
			{{-1, 28}, {24, 44}, {25, 49}, {26, 53}, {27, 57}, {41, 101}, {42, 104}, {43, 106}, {47, 110}, {48, 112}, {52, 115}, {99, 168}, {100, 170}, {103, 173}, {109, 177}, {167, 238}, },
			{{-1, 225}, {284, 332}, {334, 375}, },
			{{-1, 97}, {90, 157}, },
			{{-1, 82}, },
			{{-1, 83}, {82, 148}, {214, 280}, {292, 343}, {339, 380}, {344, 388}, {381, 427}, },
			{{-1, 160}, },
			{{-1, 231}, },
			{{-1, 344}, {339, 381}, },
			{{-1, 72}, },
			{{-1, 73}, {72, 126}, },
			{{-1, 74}, {72, 127}, {73, 132}, {126, 190}, },
			{{-1, 75}, {72, 128}, {73, 133}, {74, 137}, {126, 191}, {127, 194}, {132, 200}, {190, 261}, },
			{{-1, 76}, {72, 129}, {73, 134}, {74, 138}, {75, 141}, {126, 192}, {127, 195}, {128, 197}, {132, 201}, {133, 203}, {137, 206}, {190, 262}, {191, 264}, {194, 267}, {200, 271}, {261, 321}, },
			{{-1, 256}, },
			{{-1, 249}, {183, 252}, {402, 451}, },
			{{-1, 245}, },
			{{-1, 308}, },
			{{-1, 397}, },
			{{-1, 398}, {397, 438}, },
			{{-1, 591}, {669, 679}, },
			{{-1, 644}, {627, 647}, {629, 650}, {662, 672}, {664, 674}, {666, 676}, },
			{{-1, 188}, },
			{{-1, 415}, {410, 461}, },
			{{-1, 368}, },
			{{-1, 495}, {493, 530}, },
			{{-1, 558}, },
			{{-1, 624}, },
			{{-1, 501}, },
			{{-1, 253}, {252, 313}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'language'",
			"expecting: '='",
			"expecting: EOF",
			"expecting: 'lexer'",
			"expecting: string",
			"expecting: '{'",
			"expecting: 'parser'",
			"expecting: ';'",
			"expecting: 'alphabet', 'group', 'name', 'token', '}'",
			"expecting: 'alphabet', 'name', 'token', '}'",
			"expecting: 'alphabet', 'argument_name'",
			"expecting: 'alphabet', 'name', '}'",
			"expecting: 'name', '}'",
			"expecting: 'lexer_automaton'",
			"expecting: 'parse_production', 'parser_investigator', 'parser_selector', 'production', 'start', '}'",
			"expecting: 'interval', 'symbol', '}'",
			"expecting: 'name'",
			"expecting: 'name', 'tokens', '}'",
			"expecting: 'accept', 'alphabet', 'ignore', 'name', 'parse', 'reject', '}'",
			"expecting: 'argument_name'",
			"expecting: 'parse_production', 'parser_investigator', 'parser_selector', 'start', '}'",
			"expecting: 'parser_investigator', 'parser_selector', 'start', '}'",
			"expecting: 'parser_investigator', 'parser_selector', '}'",
			"expecting: 'parser_selector', '}'",
			"expecting: 'end_expected', 'interval', '}'",
			"expecting: 'interval', '}'",
			"expecting: 'public'",
			"expecting: 'lexer_state'",
			"expecting: 'parser_state'",
			"expecting: 'from', 'to', '}'",
			"expecting: 'alphabet', 'alternative', 'argument_name', 'at_least_type', 'at_least_value', 'back_count', 'depth', 'element', 'end_expected', 'interval', 'interval_type', 'interval_value', 'investigator_name', 'lexer_transition', 'marker', 'new_value', 'null_value', 'number_type', 'number_value', 'one', 'parse_alternative', 'parse_alternative_name', 'parse_element', 'parse_production_name', 'public', 'reduce_action', 'reference_value', 'shift_action', 'selection_action', 'token_action', 'transformation', 'tree_action', 'zero_or_one', '}'",
			"expecting: 'groups', 'selector_name'",
			"expecting: '}', string",
			"expecting: 'lexer_state', 'marker', '}'",
			"expecting: 'token_name'",
			"expecting: 'parse_alternative'",
			"expecting: 'element', '}'",
			"expecting: 'element', 'parse_production_name'",
			"expecting: 'alternative'",
			"expecting: '}'",
			"expecting: 'parser_state', '}'",
			"expecting: 'to', '}'",
			"expecting: 'interval'",
			"expecting: 'false', 'true'",
			"expecting: 'investigators'",
			"expecting: 'marker', '}'",
			"expecting: 'start_name'",
			"expecting: 'parse_alternative', 'retained_element', '}'",
			"expecting: 'element', 'parse_production_name', '}'",
			"expecting: 'parse_production_name', '}'",
			"expecting: 'alternative', '}'",
			"expecting: number",
			"expecting: 'back_count', 'end_expected', 'interval', 'lexer_transition', 'marker'",
			"expecting: 'retained_element', '}'",
			"expecting: 'depth', 'investigator_name', 'reduce_action', 'shift_action', 'selection_action', 'token_action', 'tree_action'",
			"expecting: 'at_least_type', 'element', 'from', 'groups', 'interval_type', 'number_type', 'one', 'selector_name', 'separator', 'zero_or_one', '}', number",
			"expecting: 'end_expected', 'interval', 'lexer_transition'",
			"expecting: 'marker', 'token_name'",
			"expecting: 'end_expected', 'interval'",
			"expecting: 'parse_element', 'transformation', '}'",
			"expecting: 'depth', 'reduce_action', 'shift_action', 'selection_action', 'token_action', 'tree_action'",
			"expecting: 'production_transition', 'token_transition', '}'",
			"expecting: 'depth', 'production_transition', 'token_transition', '}'",
			"expecting: 'list_reference_value', 'new_value', 'reference_value', '}'",
			"expecting: 'expected_selection', '}'",
			"expecting: 'symbol_name', 'target_name'",
			"expecting: 'end_expected', 'interval', 'lexer_transition', 'marker', 'token_name', '}'",
			"expecting: 'start_name', 'target_name', '}'",
			"expecting: 'transformation', '}'",
			"expecting: 'at_least_type', 'interval_type', 'number_type', 'one', 'zero_or_one'",
			"expecting: 'parse_alternative_name', 'parse_production_name', 'target_name', '}'",
			"expecting: 'look_depth'",
			"expecting: 'selector_name'",
			"expecting: 'target_name'",
			"expecting: 'retained_element_name'",
			"expecting: 'choice', 'context_name', '}'",
			"expecting: 'expected_selection'",
			"expecting: 'parse_alternative_name'",
			"expecting: 'parse_production_name'",
			"expecting: 'at_least_value', 'interval_value', 'new_value', 'null_value', 'number_value', 'reference_value'",
			"expecting: 'choice', '}'",
			"expecting: 'condition'",
			"expecting: 'target_name', '}'",
			"expecting: 'at_least_value', 'interval_value', 'new_value', 'null_value', 'number_value', 'reference_value', '}'",
			"expecting: 'parse_element_name'",
			"expecting: 'separator', number",
			"expecting: 'from', 'separator'",
			"expecting: 'choice', 'context_name', 'look_symbol', '}'",
			"expecting: 'condition', 'reduce_action', 'shift_action', 'selection_action', 'token_action', 'tree_action'",
			"expecting: 'to'",
			"expecting: 'from'",
			"expecting: 'look_symbol'",
			"expecting: 'look_symbol', '}'",
			"expecting: 'symbol_name', '}'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 6, 7, 8, 5, 2, 3, 5, 1, 1, 5, 6, 8, 9, 10, 11, 12, 11, 13, 8, 9, 11, 11, 12, 14, 15, 4, 4, 16, 1, 17, 13, 5, 18, 6, 8, 9, 11, 11, 12, 6, 9, 11, 11, 12, 6, 11, 11, 12, 6, 10, 11, 12, 6, 19, 12, 5, 5, 5, 5, 5, 2, 14, 20, 21, 22, 23, 14, 20, 21, 22, 23, 5, 5, 13, 15, 24, 15, 25, 7, 7, 26, 4, 5, 11, 18, 27, 1, 1, 5, 1, 18, 18, 6, 11, 11, 12, 6, 11, 12, 6, 12, 6, 6, 11, 12, 6, 12, 6, 6, 12, 6, 12, 6, 16, 16, 16, 16, 28, 2, 14, 20, 21, 22, 23, 2, 20, 21, 22, 23, 2, 21, 22, 23, 2, 22, 23, 2, 23, 29, 16, 13, 15, 25, 13, 24, 8, 30, 1, 31, 7, 32, 18, 5, 33, 33, 4, 4, 34, 4, 18, 6, 11, 12, 6, 12, 6, 6, 12, 6, 6, 6, 12, 6, 6, 6, 35, 36, 37, 38, 5, 39, 40, 40, 2, 21, 22, 23, 2, 22, 23, 2, 23, 2, 2, 22, 23, 2, 23, 2, 2, 23, 2, 2, 1, 1, 24, 41, 39, 42, 13, 43, 5, 1, 39, 44, 17, 11, 7, 32, 32, 16, 1, 18, 45, 33, 45, 7, 7, 1, 46, 7, 6, 12, 6, 6, 6, 6, 5, 47, 47, 5, 22, 48, 36, 1, 49, 37, 49, 5, 50, 50, 16, 21, 40, 2, 22, 23, 2, 23, 2, 2, 23, 2, 2, 2, 23, 2, 2, 2, 51, 51, 24, 39, 24, 25, 7, 7, 7, 32, 4, 9, 5, 39, 32, 11, 32, 52, 4, 18, 45, 18, 18, 4, 1, 39, 18, 6, 16, 5, 20, 53, 47, 53, 16, 22, 48, 4, 49, 23, 49, 16, 14, 50, 54, 2, 23, 2, 2, 2, 2, 7, 7, 24, 15, 55, 44, 32, 7, 32, 9, 1, 1, 5, 56, 39, 57, 56, 58, 56, 7, 7, 4, 18, 59, 16, 20, 53, 26, 7, 23, 26, 5, 1, 1, 1, 5, 5, 1, 60, 61, 62, 61, 62, 2, 41, 63, 44, 64, 39, 32, 51, 43, 65, 39, 58, 56, 33, 34, 39, 39, 39, 56, 58, 66, 67, 7, 1, 5, 47, 59, 68, 59, 68, 69, 69, 70, 36, 71, 4, 4, 4, 72, 16, 4, 61, 5, 5, 40, 61, 61, 62, 39, 7, 7, 1, 1, 73, 39, 33, 39, 39, 58, 39, 33, 33, 33, 39, 39, 4, 74, 47, 59, 68, 47, 68, 5, 5, 5, 5, 5, 39, 39, 39, 39, 50, 36, 1, 75, 7, 7, 7, 76, 77, 7, 40, 61, 78, 34, 40, 61, 57, 39, 4, 4, 39, 56, 33, 33, 39, 33, 33, 7, 1, 79, 47, 16, 16, 16, 16, 16, 53, 48, 50, 51, 5, 1, 62, 80, 80, 80, 60, 61, 61, 5, 64, 64, 1, 39, 61, 40, 73, 73, 7, 7, 56, 33, 59, 4, 5, 5, 5, 7, 5, 5, 39, 26, 26, 26, 26, 26, 7, 81, 4, 62, 80, 62, 80, 78, 61, 64, 4, 61, 39, 39, 82, 39, 7, 16, 16, 16, 83, 16, 84, 68, 85, 86, 85, 39, 39, 87, 5, 88, 88, 7, 62, 77, 7, 61, 61, 83, 26, 26, 83, 26, 1, 74, 1, 7, 26, 89, 26, 7, 26, 39, 39, 71, 88, 39, 80, 39, 39, 85, 86, 83, 83, 83, 85, 4, 39, 4, 39, 51, 39, 90, 39, 51, 91, 80, 64, 7, 26, 89, 26, 83, 83, 7, 26, 7, 83, 7, 39, 7, 39, 89, 39, 7, 5, 92, 92, 63, 51, 63, 90, 63, 51, 74, 26, 39, 39, 39, 93, 88, 92, 5, 5, 5, 83, 63, 63, 7, 83, 63, 89, 83, 63, 7, 39, 39, 39, 92, 39, 84, 16, 84, 83, 63, 63, 83, 63, 83, 63, 92, 74, 83, 74, 83, 63, 83, 63, 83, 63, 39, 63, 83, 39, 83, 83, 83, 63, 63, 63, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
