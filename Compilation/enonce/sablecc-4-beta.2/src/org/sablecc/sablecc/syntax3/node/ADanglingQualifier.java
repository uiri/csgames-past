/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.syntax3.node;

import org.sablecc.sablecc.syntax3.analysis.*;

@SuppressWarnings("nls")
public final class ADanglingQualifier extends PQualifier
{
    private TDanglingKeyword _danglingKeyword_;

    public ADanglingQualifier()
    {
        // Constructor
    }

    public ADanglingQualifier(
        @SuppressWarnings("hiding") TDanglingKeyword _danglingKeyword_)
    {
        // Constructor
        setDanglingKeyword(_danglingKeyword_);

    }

    @Override
    public Object clone()
    {
        return new ADanglingQualifier(
            cloneNode(this._danglingKeyword_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADanglingQualifier(this);
    }

    public TDanglingKeyword getDanglingKeyword()
    {
        return this._danglingKeyword_;
    }

    public void setDanglingKeyword(TDanglingKeyword node)
    {
        if(this._danglingKeyword_ != null)
        {
            this._danglingKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._danglingKeyword_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._danglingKeyword_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._danglingKeyword_ == child)
        {
            this._danglingKeyword_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._danglingKeyword_ == oldChild)
        {
            setDanglingKeyword((TDanglingKeyword) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
