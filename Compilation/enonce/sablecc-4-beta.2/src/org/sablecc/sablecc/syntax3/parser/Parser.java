/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.syntax3.parser;

import org.sablecc.sablecc.syntax3.lexer.*;
import org.sablecc.sablecc.syntax3.node.*;
import org.sablecc.sablecc.syntax3.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AAgrammar1Grammar */
		    {
			ArrayList list = new0();
			push(goTo(0), list);
		    }
		    break;
                    case 1: /* reduce AAgrammar2Grammar */
		    {
			ArrayList list = new1();
			push(goTo(0), list);
		    }
		    break;
                    case 2: /* reduce AAgrammar3Grammar */
		    {
			ArrayList list = new2();
			push(goTo(0), list);
		    }
		    break;
                    case 3: /* reduce AAgrammar4Grammar */
		    {
			ArrayList list = new3();
			push(goTo(0), list);
		    }
		    break;
                    case 4: /* reduce AAgrammar5Grammar */
		    {
			ArrayList list = new4();
			push(goTo(0), list);
		    }
		    break;
                    case 5: /* reduce AAgrammar6Grammar */
		    {
			ArrayList list = new5();
			push(goTo(0), list);
		    }
		    break;
                    case 6: /* reduce AAgrammar7Grammar */
		    {
			ArrayList list = new6();
			push(goTo(0), list);
		    }
		    break;
                    case 7: /* reduce AAgrammar8Grammar */
		    {
			ArrayList list = new7();
			push(goTo(0), list);
		    }
		    break;
                    case 8: /* reduce AAgrammar9Grammar */
		    {
			ArrayList list = new8();
			push(goTo(0), list);
		    }
		    break;
                    case 9: /* reduce AAgrammar10Grammar */
		    {
			ArrayList list = new9();
			push(goTo(0), list);
		    }
		    break;
                    case 10: /* reduce AAgrammar11Grammar */
		    {
			ArrayList list = new10();
			push(goTo(0), list);
		    }
		    break;
                    case 11: /* reduce AAgrammar12Grammar */
		    {
			ArrayList list = new11();
			push(goTo(0), list);
		    }
		    break;
                    case 12: /* reduce AAgrammar13Grammar */
		    {
			ArrayList list = new12();
			push(goTo(0), list);
		    }
		    break;
                    case 13: /* reduce AAgrammar14Grammar */
		    {
			ArrayList list = new13();
			push(goTo(0), list);
		    }
		    break;
                    case 14: /* reduce AAgrammar15Grammar */
		    {
			ArrayList list = new14();
			push(goTo(0), list);
		    }
		    break;
                    case 15: /* reduce AAgrammar16Grammar */
		    {
			ArrayList list = new15();
			push(goTo(0), list);
		    }
		    break;
                    case 16: /* reduce AAgrammar17Grammar */
		    {
			ArrayList list = new16();
			push(goTo(0), list);
		    }
		    break;
                    case 17: /* reduce AAgrammar18Grammar */
		    {
			ArrayList list = new17();
			push(goTo(0), list);
		    }
		    break;
                    case 18: /* reduce AAgrammar19Grammar */
		    {
			ArrayList list = new18();
			push(goTo(0), list);
		    }
		    break;
                    case 19: /* reduce AAgrammar20Grammar */
		    {
			ArrayList list = new19();
			push(goTo(0), list);
		    }
		    break;
                    case 20: /* reduce AAgrammar21Grammar */
		    {
			ArrayList list = new20();
			push(goTo(0), list);
		    }
		    break;
                    case 21: /* reduce AAgrammar22Grammar */
		    {
			ArrayList list = new21();
			push(goTo(0), list);
		    }
		    break;
                    case 22: /* reduce AAgrammar23Grammar */
		    {
			ArrayList list = new22();
			push(goTo(0), list);
		    }
		    break;
                    case 23: /* reduce AAgrammar24Grammar */
		    {
			ArrayList list = new23();
			push(goTo(0), list);
		    }
		    break;
                    case 24: /* reduce AAgrammar25Grammar */
		    {
			ArrayList list = new24();
			push(goTo(0), list);
		    }
		    break;
                    case 25: /* reduce AAgrammar26Grammar */
		    {
			ArrayList list = new25();
			push(goTo(0), list);
		    }
		    break;
                    case 26: /* reduce AAgrammar27Grammar */
		    {
			ArrayList list = new26();
			push(goTo(0), list);
		    }
		    break;
                    case 27: /* reduce AAgrammar28Grammar */
		    {
			ArrayList list = new27();
			push(goTo(0), list);
		    }
		    break;
                    case 28: /* reduce AAgrammar29Grammar */
		    {
			ArrayList list = new28();
			push(goTo(0), list);
		    }
		    break;
                    case 29: /* reduce AAgrammar30Grammar */
		    {
			ArrayList list = new29();
			push(goTo(0), list);
		    }
		    break;
                    case 30: /* reduce AAgrammar31Grammar */
		    {
			ArrayList list = new30();
			push(goTo(0), list);
		    }
		    break;
                    case 31: /* reduce AAgrammar32Grammar */
		    {
			ArrayList list = new31();
			push(goTo(0), list);
		    }
		    break;
                    case 32: /* reduce ALanguageName */
		    {
			ArrayList list = new32();
			push(goTo(1), list);
		    }
		    break;
                    case 33: /* reduce AAlexer1Lexer */
		    {
			ArrayList list = new33();
			push(goTo(2), list);
		    }
		    break;
                    case 34: /* reduce AAlexer2Lexer */
		    {
			ArrayList list = new34();
			push(goTo(2), list);
		    }
		    break;
                    case 35: /* reduce AAlexer3Lexer */
		    {
			ArrayList list = new35();
			push(goTo(2), list);
		    }
		    break;
                    case 36: /* reduce AAlexer4Lexer */
		    {
			ArrayList list = new36();
			push(goTo(2), list);
		    }
		    break;
                    case 37: /* reduce AAlexer5Lexer */
		    {
			ArrayList list = new37();
			push(goTo(2), list);
		    }
		    break;
                    case 38: /* reduce AAlexer6Lexer */
		    {
			ArrayList list = new38();
			push(goTo(2), list);
		    }
		    break;
                    case 39: /* reduce AAlexer7Lexer */
		    {
			ArrayList list = new39();
			push(goTo(2), list);
		    }
		    break;
                    case 40: /* reduce AAlexer8Lexer */
		    {
			ArrayList list = new40();
			push(goTo(2), list);
		    }
		    break;
                    case 41: /* reduce ANormalNamedExpression */
		    {
			ArrayList list = new41();
			push(goTo(3), list);
		    }
		    break;
                    case 42: /* reduce ASelectionNamedExpression */
		    {
			ArrayList list = new42();
			push(goTo(3), list);
		    }
		    break;
                    case 43: /* reduce ASelection */
		    {
			ArrayList list = new43();
			push(goTo(4), list);
		    }
		    break;
                    case 44: /* reduce ASelectionAdditionalIdentifier */
		    {
			ArrayList list = new44();
			push(goTo(5), list);
		    }
		    break;
                    case 45: /* reduce ASimpleExpression */
		    {
			ArrayList list = new45();
			push(goTo(6), list);
		    }
		    break;
                    case 46: /* reduce AOrExpression */
		    {
			ArrayList list = new46();
			push(goTo(6), list);
		    }
		    break;
                    case 47: /* reduce ASimpleTopExpression */
		    {
			ArrayList list = new47();
			push(goTo(7), list);
		    }
		    break;
                    case 48: /* reduce ALookTopExpression */
		    {
			ArrayList list = new48();
			push(goTo(7), list);
		    }
		    break;
                    case 49: /* reduce ALookNotTopExpression */
		    {
			ArrayList list = new49();
			push(goTo(7), list);
		    }
		    break;
                    case 50: /* reduce AShortestTopExpression */
		    {
			ArrayList list = new50();
			push(goTo(7), list);
		    }
		    break;
                    case 51: /* reduce ALongestTopExpression */
		    {
			ArrayList list = new51();
			push(goTo(7), list);
		    }
		    break;
                    case 52: /* reduce ASubtractionTopExpression */
		    {
			ArrayList list = new52();
			push(goTo(7), list);
		    }
		    break;
                    case 53: /* reduce ADifferenceTopExpression */
		    {
			ArrayList list = new53();
			push(goTo(7), list);
		    }
		    break;
                    case 54: /* reduce AAndTopExpression */
		    {
			ArrayList list = new54();
			push(goTo(7), list);
		    }
		    break;
                    case 55: /* reduce AIntervalTopExpression */
		    {
			ArrayList list = new55();
			push(goTo(7), list);
		    }
		    break;
                    case 56: /* reduce ASimpleLookExpression */
		    {
			ArrayList list = new56();
			push(goTo(8), list);
		    }
		    break;
                    case 57: /* reduce ACompleteLookExpression */
		    {
			ArrayList list = new57();
			push(goTo(8), list);
		    }
		    break;
                    case 58: /* reduce AEndLookExpression */
		    {
			ArrayList list = new58();
			push(goTo(8), list);
		    }
		    break;
                    case 59: /* reduce ASimpleConcatenation */
		    {
			ArrayList list = new59();
			push(goTo(9), list);
		    }
		    break;
                    case 60: /* reduce ACompleteConcatenation */
		    {
			ArrayList list = new60();
			push(goTo(9), list);
		    }
		    break;
                    case 61: /* reduce ASimpleUnaryExpression */
		    {
			ArrayList list = new61();
			push(goTo(10), list);
		    }
		    break;
                    case 62: /* reduce AZeroOrOneUnaryExpression */
		    {
			ArrayList list = new62();
			push(goTo(10), list);
		    }
		    break;
                    case 63: /* reduce AZeroOrMoreUnaryExpression */
		    {
			ArrayList list = new63();
			push(goTo(10), list);
		    }
		    break;
                    case 64: /* reduce ASeparatedZeroOrMoreUnaryExpression */
		    {
			ArrayList list = new64();
			push(goTo(10), list);
		    }
		    break;
                    case 65: /* reduce AOneOrMoreUnaryExpression */
		    {
			ArrayList list = new65();
			push(goTo(10), list);
		    }
		    break;
                    case 66: /* reduce ASeparatedOneOrMoreUnaryExpression */
		    {
			ArrayList list = new66();
			push(goTo(10), list);
		    }
		    break;
                    case 67: /* reduce ANumberExponentUnaryExpression */
		    {
			ArrayList list = new67();
			push(goTo(10), list);
		    }
		    break;
                    case 68: /* reduce ASeparatedNumberExponentUnaryExpression */
		    {
			ArrayList list = new68();
			push(goTo(10), list);
		    }
		    break;
                    case 69: /* reduce AIntervalExponentUnaryExpression */
		    {
			ArrayList list = new69();
			push(goTo(10), list);
		    }
		    break;
                    case 70: /* reduce ASeparatedIntervalExponentUnaryExpression */
		    {
			ArrayList list = new70();
			push(goTo(10), list);
		    }
		    break;
                    case 71: /* reduce AAtLeastUnaryExpression */
		    {
			ArrayList list = new71();
			push(goTo(10), list);
		    }
		    break;
                    case 72: /* reduce ASeparatedAtLeastUnaryExpression */
		    {
			ArrayList list = new72();
			push(goTo(10), list);
		    }
		    break;
                    case 73: /* reduce ANameTerm */
		    {
			ArrayList list = new73();
			push(goTo(11), list);
		    }
		    break;
                    case 74: /* reduce AStringTerm */
		    {
			ArrayList list = new74();
			push(goTo(11), list);
		    }
		    break;
                    case 75: /* reduce ACharTerm */
		    {
			ArrayList list = new75();
			push(goTo(11), list);
		    }
		    break;
                    case 76: /* reduce AEpsilonTerm */
		    {
			ArrayList list = new76();
			push(goTo(11), list);
		    }
		    break;
                    case 77: /* reduce ADecTerm */
		    {
			ArrayList list = new77();
			push(goTo(11), list);
		    }
		    break;
                    case 78: /* reduce AHexTerm */
		    {
			ArrayList list = new78();
			push(goTo(11), list);
		    }
		    break;
                    case 79: /* reduce AAnyTerm */
		    {
			ArrayList list = new79();
			push(goTo(11), list);
		    }
		    break;
                    case 80: /* reduce AParTerm */
		    {
			ArrayList list = new80();
			push(goTo(11), list);
		    }
		    break;
                    case 81: /* reduce ANameUnit */
		    {
			ArrayList list = new81();
			push(goTo(12), list);
		    }
		    break;
                    case 82: /* reduce AStringUnit */
		    {
			ArrayList list = new82();
			push(goTo(12), list);
		    }
		    break;
                    case 83: /* reduce ACharacterUnit */
		    {
			ArrayList list = new83();
			push(goTo(12), list);
		    }
		    break;
                    case 84: /* reduce AEpsilonUnit */
		    {
			ArrayList list = new84();
			push(goTo(12), list);
		    }
		    break;
                    case 85: /* reduce AAnyUnit */
		    {
			ArrayList list = new85();
			push(goTo(12), list);
		    }
		    break;
                    case 86: /* reduce ACharCharacter */
		    {
			ArrayList list = new86();
			push(goTo(13), list);
		    }
		    break;
                    case 87: /* reduce ADecCharacter */
		    {
			ArrayList list = new87();
			push(goTo(13), list);
		    }
		    break;
                    case 88: /* reduce AHexCharacter */
		    {
			ArrayList list = new88();
			push(goTo(13), list);
		    }
		    break;
                    case 89: /* reduce AZeroOrOneUnaryOperator */
		    {
			ArrayList list = new89();
			push(goTo(14), list);
		    }
		    break;
                    case 90: /* reduce AManyUnaryOperator */
		    {
			ArrayList list = new90();
			push(goTo(14), list);
		    }
		    break;
                    case 91: /* reduce AZeroOrMoreManyOperator */
		    {
			ArrayList list = new91();
			push(goTo(15), list);
		    }
		    break;
                    case 92: /* reduce AOneOrMoreManyOperator */
		    {
			ArrayList list = new92();
			push(goTo(15), list);
		    }
		    break;
                    case 93: /* reduce ANumberManyOperator */
		    {
			ArrayList list = new93();
			push(goTo(15), list);
		    }
		    break;
                    case 94: /* reduce AIntervalManyOperator */
		    {
			ArrayList list = new94();
			push(goTo(15), list);
		    }
		    break;
                    case 95: /* reduce AAtLeastManyOperator */
		    {
			ArrayList list = new95();
			push(goTo(15), list);
		    }
		    break;
                    case 96: /* reduce AAgroup1Group */
		    {
			ArrayList list = new96();
			push(goTo(16), list);
		    }
		    break;
                    case 97: /* reduce AAgroup2Group */
		    {
			ArrayList list = new97();
			push(goTo(16), list);
		    }
		    break;
                    case 98: /* reduce AAlexercontexts1LexerContexts */
		    {
			ArrayList list = new98();
			push(goTo(17), list);
		    }
		    break;
                    case 99: /* reduce AAlexercontexts2LexerContexts */
		    {
			ArrayList list = new99();
			push(goTo(17), list);
		    }
		    break;
                    case 100: /* reduce ALexerDefaultContext */
		    {
			ArrayList list = new100();
			push(goTo(18), list);
		    }
		    break;
                    case 101: /* reduce ALexerNamedContext */
		    {
			ArrayList list = new101();
			push(goTo(19), list);
		    }
		    break;
                    case 102: /* reduce AAlexercontextbody1LexerContextBody */
		    {
			ArrayList list = new102();
			push(goTo(20), list);
		    }
		    break;
                    case 103: /* reduce AAlexercontextbody2LexerContextBody */
		    {
			ArrayList list = new103();
			push(goTo(20), list);
		    }
		    break;
                    case 104: /* reduce AAlexercontextbody3LexerContextBody */
		    {
			ArrayList list = new104();
			push(goTo(20), list);
		    }
		    break;
                    case 105: /* reduce AAlexercontextbody4LexerContextBody */
		    {
			ArrayList list = new105();
			push(goTo(20), list);
		    }
		    break;
                    case 106: /* reduce AAlexercontextbody5LexerContextBody */
		    {
			ArrayList list = new106();
			push(goTo(20), list);
		    }
		    break;
                    case 107: /* reduce AAlexercontextbody6LexerContextBody */
		    {
			ArrayList list = new107();
			push(goTo(20), list);
		    }
		    break;
                    case 108: /* reduce AAlexercontextbody7LexerContextBody */
		    {
			ArrayList list = new108();
			push(goTo(20), list);
		    }
		    break;
                    case 109: /* reduce AAlexercontextbody8LexerContextBody */
		    {
			ArrayList list = new109();
			push(goTo(20), list);
		    }
		    break;
                    case 110: /* reduce AAtokens1Tokens */
		    {
			ArrayList list = new110();
			push(goTo(21), list);
		    }
		    break;
                    case 111: /* reduce AAtokens2Tokens */
		    {
			ArrayList list = new111();
			push(goTo(21), list);
		    }
		    break;
                    case 112: /* reduce AAignored1Ignored */
		    {
			ArrayList list = new112();
			push(goTo(22), list);
		    }
		    break;
                    case 113: /* reduce AAignored2Ignored */
		    {
			ArrayList list = new113();
			push(goTo(22), list);
		    }
		    break;
                    case 114: /* reduce AAunitlist1UnitList */
		    {
			ArrayList list = new114();
			push(goTo(23), list);
		    }
		    break;
                    case 115: /* reduce AAunitlist2UnitList */
		    {
			ArrayList list = new115();
			push(goTo(23), list);
		    }
		    break;
                    case 116: /* reduce AAdditionalUnit */
		    {
			ArrayList list = new116();
			push(goTo(24), list);
		    }
		    break;
                    case 117: /* reduce AAlexerpriorities1LexerPriorities */
		    {
			ArrayList list = new117();
			push(goTo(25), list);
		    }
		    break;
                    case 118: /* reduce AAlexerpriorities2LexerPriorities */
		    {
			ArrayList list = new118();
			push(goTo(25), list);
		    }
		    break;
                    case 119: /* reduce ALexerPriority */
		    {
			ArrayList list = new119();
			push(goTo(26), list);
		    }
		    break;
                    case 120: /* reduce AAlexerinvestigators1LexerInvestigators */
		    {
			ArrayList list = new120();
			push(goTo(27), list);
		    }
		    break;
                    case 121: /* reduce AAlexerinvestigators2LexerInvestigators */
		    {
			ArrayList list = new121();
			push(goTo(27), list);
		    }
		    break;
                    case 122: /* reduce ALexerInvestigator */
		    {
			ArrayList list = new122();
			push(goTo(28), list);
		    }
		    break;
                    case 123: /* reduce AAparser1Parser */
		    {
			ArrayList list = new123();
			push(goTo(29), list);
		    }
		    break;
                    case 124: /* reduce AAparser2Parser */
		    {
			ArrayList list = new124();
			push(goTo(29), list);
		    }
		    break;
                    case 125: /* reduce AAparser3Parser */
		    {
			ArrayList list = new125();
			push(goTo(29), list);
		    }
		    break;
                    case 126: /* reduce AAparser4Parser */
		    {
			ArrayList list = new126();
			push(goTo(29), list);
		    }
		    break;
                    case 127: /* reduce AAparser5Parser */
		    {
			ArrayList list = new127();
			push(goTo(29), list);
		    }
		    break;
                    case 128: /* reduce AAparser6Parser */
		    {
			ArrayList list = new128();
			push(goTo(29), list);
		    }
		    break;
                    case 129: /* reduce AAparser7Parser */
		    {
			ArrayList list = new129();
			push(goTo(29), list);
		    }
		    break;
                    case 130: /* reduce AAparser8Parser */
		    {
			ArrayList list = new130();
			push(goTo(29), list);
		    }
		    break;
                    case 131: /* reduce AAstart1Start */
		    {
			ArrayList list = new131();
			push(goTo(30), list);
		    }
		    break;
                    case 132: /* reduce AAstart2Start */
		    {
			ArrayList list = new132();
			push(goTo(30), list);
		    }
		    break;
                    case 133: /* reduce AArestartable1Restartable */
		    {
			ArrayList list = new133();
			push(goTo(31), list);
		    }
		    break;
                    case 134: /* reduce AArestartable2Restartable */
		    {
			ArrayList list = new134();
			push(goTo(31), list);
		    }
		    break;
                    case 135: /* reduce AAidentifierlist1IdentifierList */
		    {
			ArrayList list = new135();
			push(goTo(32), list);
		    }
		    break;
                    case 136: /* reduce AAidentifierlist2IdentifierList */
		    {
			ArrayList list = new136();
			push(goTo(32), list);
		    }
		    break;
                    case 137: /* reduce AAdditionalIdentifier */
		    {
			ArrayList list = new137();
			push(goTo(33), list);
		    }
		    break;
                    case 138: /* reduce AAparsercontexts1ParserContexts */
		    {
			ArrayList list = new138();
			push(goTo(34), list);
		    }
		    break;
                    case 139: /* reduce AAparsercontexts2ParserContexts */
		    {
			ArrayList list = new139();
			push(goTo(34), list);
		    }
		    break;
                    case 140: /* reduce AAparserdefaultcontext1ParserDefaultContext */
		    {
			ArrayList list = new140();
			push(goTo(35), list);
		    }
		    break;
                    case 141: /* reduce AAparserdefaultcontext2ParserDefaultContext */
		    {
			ArrayList list = new141();
			push(goTo(35), list);
		    }
		    break;
                    case 142: /* reduce AAparsernamedcontext1ParserNamedContext */
		    {
			ArrayList list = new142();
			push(goTo(36), list);
		    }
		    break;
                    case 143: /* reduce AAparsernamedcontext2ParserNamedContext */
		    {
			ArrayList list = new143();
			push(goTo(36), list);
		    }
		    break;
                    case 144: /* reduce AAnormalparserproduction1ParserProduction */
		    {
			ArrayList list = new144();
			push(goTo(37), list);
		    }
		    break;
                    case 145: /* reduce AAnormalparserproduction2ParserProduction */
		    {
			ArrayList list = new145();
			push(goTo(37), list);
		    }
		    break;
                    case 146: /* reduce AAnormalparserproduction3ParserProduction */
		    {
			ArrayList list = new146();
			push(goTo(37), list);
		    }
		    break;
                    case 147: /* reduce AAnormalparserproduction4ParserProduction */
		    {
			ArrayList list = new147();
			push(goTo(37), list);
		    }
		    break;
                    case 148: /* reduce AAnormalparserproduction5ParserProduction */
		    {
			ArrayList list = new148();
			push(goTo(37), list);
		    }
		    break;
                    case 149: /* reduce AAnormalparserproduction6ParserProduction */
		    {
			ArrayList list = new149();
			push(goTo(37), list);
		    }
		    break;
                    case 150: /* reduce AAnormalparserproduction7ParserProduction */
		    {
			ArrayList list = new150();
			push(goTo(37), list);
		    }
		    break;
                    case 151: /* reduce AAnormalparserproduction8ParserProduction */
		    {
			ArrayList list = new151();
			push(goTo(37), list);
		    }
		    break;
                    case 152: /* reduce ASelectionParserProduction */
		    {
			ArrayList list = new152();
			push(goTo(37), list);
		    }
		    break;
                    case 153: /* reduce ADanglingQualifier */
		    {
			ArrayList list = new153();
			push(goTo(38), list);
		    }
		    break;
                    case 154: /* reduce ATokenQualifier */
		    {
			ArrayList list = new154();
			push(goTo(38), list);
		    }
		    break;
                    case 155: /* reduce AParserProductionBody */
		    {
			ArrayList list = new155();
			push(goTo(39), list);
		    }
		    break;
                    case 156: /* reduce AAparseralternatives1ParserAlternatives */
		    {
			ArrayList list = new156();
			push(goTo(40), list);
		    }
		    break;
                    case 157: /* reduce AAparseralternatives2ParserAlternatives */
		    {
			ArrayList list = new157();
			push(goTo(40), list);
		    }
		    break;
                    case 158: /* reduce AAdditionalParserAlternative */
		    {
			ArrayList list = new158();
			push(goTo(41), list);
		    }
		    break;
                    case 159: /* reduce AAparseralternative1ParserAlternative */
		    {
			ArrayList list = new159();
			push(goTo(42), list);
		    }
		    break;
                    case 160: /* reduce AAparseralternative2ParserAlternative */
		    {
			ArrayList list = new160();
			push(goTo(42), list);
		    }
		    break;
                    case 161: /* reduce AAparseralternative3ParserAlternative */
		    {
			ArrayList list = new161();
			push(goTo(42), list);
		    }
		    break;
                    case 162: /* reduce AAparseralternative4ParserAlternative */
		    {
			ArrayList list = new162();
			push(goTo(42), list);
		    }
		    break;
                    case 163: /* reduce AAparseralternative5ParserAlternative */
		    {
			ArrayList list = new163();
			push(goTo(42), list);
		    }
		    break;
                    case 164: /* reduce AAparseralternative6ParserAlternative */
		    {
			ArrayList list = new164();
			push(goTo(42), list);
		    }
		    break;
                    case 165: /* reduce AAparseralternative7ParserAlternative */
		    {
			ArrayList list = new165();
			push(goTo(42), list);
		    }
		    break;
                    case 166: /* reduce AAparseralternative8ParserAlternative */
		    {
			ArrayList list = new166();
			push(goTo(42), list);
		    }
		    break;
                    case 167: /* reduce AAunitelement1Element */
		    {
			ArrayList list = new167();
			push(goTo(43), list);
		    }
		    break;
                    case 168: /* reduce AAunitelement2Element */
		    {
			ArrayList list = new168();
			push(goTo(43), list);
		    }
		    break;
                    case 169: /* reduce AAunitelement3Element */
		    {
			ArrayList list = new169();
			push(goTo(43), list);
		    }
		    break;
                    case 170: /* reduce AAunitelement4Element */
		    {
			ArrayList list = new170();
			push(goTo(43), list);
		    }
		    break;
                    case 171: /* reduce AAseparatedelement1Element */
		    {
			ArrayList list = new171();
			push(goTo(43), list);
		    }
		    break;
                    case 172: /* reduce AAseparatedelement2Element */
		    {
			ArrayList list = new172();
			push(goTo(43), list);
		    }
		    break;
                    case 173: /* reduce AAdanglingelement1DanglingElement */
		    {
			ArrayList list = new173();
			push(goTo(44), list);
		    }
		    break;
                    case 174: /* reduce AAdanglingelement2DanglingElement */
		    {
			ArrayList list = new174();
			push(goTo(44), list);
		    }
		    break;
                    case 175: /* reduce AAparserpriorities1ParserPriorities */
		    {
			ArrayList list = new175();
			push(goTo(45), list);
		    }
		    break;
                    case 176: /* reduce AAparserpriorities2ParserPriorities */
		    {
			ArrayList list = new176();
			push(goTo(45), list);
		    }
		    break;
                    case 177: /* reduce ALeftParserPriority */
		    {
			ArrayList list = new177();
			push(goTo(46), list);
		    }
		    break;
                    case 178: /* reduce ARightParserPriority */
		    {
			ArrayList list = new178();
			push(goTo(46), list);
		    }
		    break;
                    case 179: /* reduce AAparserinvestigator1ParserInvestigator */
		    {
			ArrayList list = new179();
			push(goTo(47), list);
		    }
		    break;
                    case 180: /* reduce AAparserinvestigator2ParserInvestigator */
		    {
			ArrayList list = new180();
			push(goTo(47), list);
		    }
		    break;
                    case 181: /* reduce AAinlined1Inlined */
		    {
			ArrayList list = new181();
			push(goTo(48), list);
		    }
		    break;
                    case 182: /* reduce AAinlined2Inlined */
		    {
			ArrayList list = new182();
			push(goTo(48), list);
		    }
		    break;
                    case 183: /* reduce AAtransformation1Transformation */
		    {
			ArrayList list = new183();
			push(goTo(49), list);
		    }
		    break;
                    case 184: /* reduce AAtransformation2Transformation */
		    {
			ArrayList list = new184();
			push(goTo(49), list);
		    }
		    break;
                    case 185: /* reduce AAtransformation3Transformation */
		    {
			ArrayList list = new185();
			push(goTo(49), list);
		    }
		    break;
                    case 186: /* reduce AAtransformation4Transformation */
		    {
			ArrayList list = new186();
			push(goTo(49), list);
		    }
		    break;
                    case 187: /* reduce AAproductiontransformations1ProductionTransformations */
		    {
			ArrayList list = new187();
			push(goTo(50), list);
		    }
		    break;
                    case 188: /* reduce AAproductiontransformations2ProductionTransformations */
		    {
			ArrayList list = new188();
			push(goTo(50), list);
		    }
		    break;
                    case 189: /* reduce AAproductiontransformation1ProductionTransformation */
		    {
			ArrayList list = new189();
			push(goTo(51), list);
		    }
		    break;
                    case 190: /* reduce AAproductiontransformation2ProductionTransformation */
		    {
			ArrayList list = new190();
			push(goTo(51), list);
		    }
		    break;
                    case 191: /* reduce AAalternativetransformations1AlternativeTransformations */
		    {
			ArrayList list = new191();
			push(goTo(52), list);
		    }
		    break;
                    case 192: /* reduce AAalternativetransformations2AlternativeTransformations */
		    {
			ArrayList list = new192();
			push(goTo(52), list);
		    }
		    break;
                    case 193: /* reduce AAalternativetransformation1AlternativeTransformation */
		    {
			ArrayList list = new193();
			push(goTo(53), list);
		    }
		    break;
                    case 194: /* reduce AAalternativetransformation2AlternativeTransformation */
		    {
			ArrayList list = new194();
			push(goTo(53), list);
		    }
		    break;
                    case 195: /* reduce AUnnamedAlternativeReference */
		    {
			ArrayList list = new195();
			push(goTo(54), list);
		    }
		    break;
                    case 196: /* reduce ANamedAlternativeReference */
		    {
			ArrayList list = new196();
			push(goTo(54), list);
		    }
		    break;
                    case 197: /* reduce ANullTransformationElement */
		    {
			ArrayList list = new197();
			push(goTo(55), list);
		    }
		    break;
                    case 198: /* reduce AReferenceTransformationElement */
		    {
			ArrayList list = new198();
			push(goTo(55), list);
		    }
		    break;
                    case 199: /* reduce AAnewtransformationelement1TransformationElement */
		    {
			ArrayList list = new199();
			push(goTo(55), list);
		    }
		    break;
                    case 200: /* reduce AAnewtransformationelement2TransformationElement */
		    {
			ArrayList list = new200();
			push(goTo(55), list);
		    }
		    break;
                    case 201: /* reduce AAlisttransformationelement1TransformationElement */
		    {
			ArrayList list = new201();
			push(goTo(55), list);
		    }
		    break;
                    case 202: /* reduce AAlisttransformationelement2TransformationElement */
		    {
			ArrayList list = new202();
			push(goTo(55), list);
		    }
		    break;
                    case 203: /* reduce AReferenceListElement */
		    {
			ArrayList list = new203();
			push(goTo(56), list);
		    }
		    break;
                    case 204: /* reduce AListReferenceListElement */
		    {
			ArrayList list = new204();
			push(goTo(56), list);
		    }
		    break;
                    case 205: /* reduce AAnewlistelement1ListElement */
		    {
			ArrayList list = new205();
			push(goTo(56), list);
		    }
		    break;
                    case 206: /* reduce AAnewlistelement2ListElement */
		    {
			ArrayList list = new206();
			push(goTo(56), list);
		    }
		    break;
                    case 207: /* reduce ANaturalElementReference */
		    {
			ArrayList list = new207();
			push(goTo(57), list);
		    }
		    break;
                    case 208: /* reduce ATransformedElementReference */
		    {
			ArrayList list = new208();
			push(goTo(57), list);
		    }
		    break;
                    case 209: /* reduce AAtree1Tree */
		    {
			ArrayList list = new209();
			push(goTo(58), list);
		    }
		    break;
                    case 210: /* reduce AAtree2Tree */
		    {
			ArrayList list = new210();
			push(goTo(58), list);
		    }
		    break;
                    case 211: /* reduce ATreeProduction */
		    {
			ArrayList list = new211();
			push(goTo(59), list);
		    }
		    break;
                    case 212: /* reduce AAtreealternatives1TreeAlternatives */
		    {
			ArrayList list = new212();
			push(goTo(60), list);
		    }
		    break;
                    case 213: /* reduce AAtreealternatives2TreeAlternatives */
		    {
			ArrayList list = new213();
			push(goTo(60), list);
		    }
		    break;
                    case 214: /* reduce AAdditionalTreeAlternative */
		    {
			ArrayList list = new214();
			push(goTo(61), list);
		    }
		    break;
                    case 215: /* reduce AAtreealternative1TreeAlternative */
		    {
			ArrayList list = new215();
			push(goTo(62), list);
		    }
		    break;
                    case 216: /* reduce AAtreealternative2TreeAlternative */
		    {
			ArrayList list = new216();
			push(goTo(62), list);
		    }
		    break;
                    case 217: /* reduce AAtreealternative3TreeAlternative */
		    {
			ArrayList list = new217();
			push(goTo(62), list);
		    }
		    break;
                    case 218: /* reduce AAtreealternative4TreeAlternative */
		    {
			ArrayList list = new218();
			push(goTo(62), list);
		    }
		    break;
                    case 219: /* reduce ATerminal$NamedExpression */
		    {
			ArrayList list = new219();
			push(goTo(63), list);
		    }
		    break;
                    case 220: /* reduce ANonTerminal$NamedExpression */
		    {
			ArrayList list = new220();
			push(goTo(63), list);
		    }
		    break;
                    case 221: /* reduce ATerminal$Group */
		    {
			ArrayList list = new221();
			push(goTo(64), list);
		    }
		    break;
                    case 222: /* reduce ANonTerminal$Group */
		    {
			ArrayList list = new222();
			push(goTo(64), list);
		    }
		    break;
                    case 223: /* reduce ATerminal$SelectionAdditionalIdentifier */
		    {
			ArrayList list = new223();
			push(goTo(65), list);
		    }
		    break;
                    case 224: /* reduce ANonTerminal$SelectionAdditionalIdentifier */
		    {
			ArrayList list = new224();
			push(goTo(65), list);
		    }
		    break;
                    case 225: /* reduce ATerminal$LexerNamedContext */
		    {
			ArrayList list = new225();
			push(goTo(66), list);
		    }
		    break;
                    case 226: /* reduce ANonTerminal$LexerNamedContext */
		    {
			ArrayList list = new226();
			push(goTo(66), list);
		    }
		    break;
                    case 227: /* reduce ATerminal$AdditionalUnit */
		    {
			ArrayList list = new227();
			push(goTo(67), list);
		    }
		    break;
                    case 228: /* reduce ANonTerminal$AdditionalUnit */
		    {
			ArrayList list = new228();
			push(goTo(67), list);
		    }
		    break;
                    case 229: /* reduce ATerminal$LexerPriority */
		    {
			ArrayList list = new229();
			push(goTo(68), list);
		    }
		    break;
                    case 230: /* reduce ANonTerminal$LexerPriority */
		    {
			ArrayList list = new230();
			push(goTo(68), list);
		    }
		    break;
                    case 231: /* reduce ATerminal$LexerInvestigator */
		    {
			ArrayList list = new231();
			push(goTo(69), list);
		    }
		    break;
                    case 232: /* reduce ANonTerminal$LexerInvestigator */
		    {
			ArrayList list = new232();
			push(goTo(69), list);
		    }
		    break;
                    case 233: /* reduce ATerminal$AdditionalIdentifier */
		    {
			ArrayList list = new233();
			push(goTo(70), list);
		    }
		    break;
                    case 234: /* reduce ANonTerminal$AdditionalIdentifier */
		    {
			ArrayList list = new234();
			push(goTo(70), list);
		    }
		    break;
                    case 235: /* reduce ATerminal$ParserNamedContext */
		    {
			ArrayList list = new235();
			push(goTo(71), list);
		    }
		    break;
                    case 236: /* reduce ANonTerminal$ParserNamedContext */
		    {
			ArrayList list = new236();
			push(goTo(71), list);
		    }
		    break;
                    case 237: /* reduce ATerminal$ParserProduction */
		    {
			ArrayList list = new237();
			push(goTo(72), list);
		    }
		    break;
                    case 238: /* reduce ANonTerminal$ParserProduction */
		    {
			ArrayList list = new238();
			push(goTo(72), list);
		    }
		    break;
                    case 239: /* reduce ATerminal$AdditionalParserAlternative */
		    {
			ArrayList list = new239();
			push(goTo(73), list);
		    }
		    break;
                    case 240: /* reduce ANonTerminal$AdditionalParserAlternative */
		    {
			ArrayList list = new240();
			push(goTo(73), list);
		    }
		    break;
                    case 241: /* reduce ATerminal$Element */
		    {
			ArrayList list = new241();
			push(goTo(74), list);
		    }
		    break;
                    case 242: /* reduce ANonTerminal$Element */
		    {
			ArrayList list = new242();
			push(goTo(74), list);
		    }
		    break;
                    case 243: /* reduce ATerminal$ParserPriority */
		    {
			ArrayList list = new243();
			push(goTo(75), list);
		    }
		    break;
                    case 244: /* reduce ANonTerminal$ParserPriority */
		    {
			ArrayList list = new244();
			push(goTo(75), list);
		    }
		    break;
                    case 245: /* reduce ATerminal$ProductionTransformation */
		    {
			ArrayList list = new245();
			push(goTo(76), list);
		    }
		    break;
                    case 246: /* reduce ANonTerminal$ProductionTransformation */
		    {
			ArrayList list = new246();
			push(goTo(76), list);
		    }
		    break;
                    case 247: /* reduce ATerminal$AlternativeTransformation */
		    {
			ArrayList list = new247();
			push(goTo(77), list);
		    }
		    break;
                    case 248: /* reduce ANonTerminal$AlternativeTransformation */
		    {
			ArrayList list = new248();
			push(goTo(77), list);
		    }
		    break;
                    case 249: /* reduce ATerminal$TransformationElement */
		    {
			ArrayList list = new249();
			push(goTo(78), list);
		    }
		    break;
                    case 250: /* reduce ANonTerminal$TransformationElement */
		    {
			ArrayList list = new250();
			push(goTo(78), list);
		    }
		    break;
                    case 251: /* reduce ATerminal$ListElement */
		    {
			ArrayList list = new251();
			push(goTo(79), list);
		    }
		    break;
                    case 252: /* reduce ANonTerminal$ListElement */
		    {
			ArrayList list = new252();
			push(goTo(79), list);
		    }
		    break;
                    case 253: /* reduce ATerminal$TreeProduction */
		    {
			ArrayList list = new253();
			push(goTo(80), list);
		    }
		    break;
                    case 254: /* reduce ANonTerminal$TreeProduction */
		    {
			ArrayList list = new254();
			push(goTo(80), list);
		    }
		    break;
                    case 255: /* reduce ATerminal$AdditionalTreeAlternative */
		    {
			ArrayList list = new255();
			push(goTo(81), list);
		    }
		    break;
                    case 256: /* reduce ANonTerminal$AdditionalTreeAlternative */
		    {
			ArrayList list = new256();
			push(goTo(81), list);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PGrammar node1 = (PGrammar) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AAgrammar1Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, null, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce AAgrammar2Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, null, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AAgrammar3Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        pparserNode5 = (PParser)nodeArrayList2.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, pparserNode5, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AAgrammar4Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList3.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AAgrammar5Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        ptransformationNode6 = (PTransformation)nodeArrayList2.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, null, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce AAgrammar6Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList3.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, null, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce AAgrammar7Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        pparserNode5 = (PParser)nodeArrayList2.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList3.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, pparserNode5, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce AAgrammar8Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList3.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce AAgrammar9Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        ptreeNode7 = (PTree)nodeArrayList2.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, null, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce AAgrammar10Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        ptreeNode7 = (PTree)nodeArrayList3.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, null, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce AAgrammar11Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        pparserNode5 = (PParser)nodeArrayList2.get(0);
        ptreeNode7 = (PTree)nodeArrayList3.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, pparserNode5, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce AAgrammar12Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList3.get(0);
        ptreeNode7 = (PTree)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce AAgrammar13Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        ptransformationNode6 = (PTransformation)nodeArrayList2.get(0);
        ptreeNode7 = (PTree)nodeArrayList3.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, null, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce AAgrammar14Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList3.get(0);
        ptreeNode7 = (PTree)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, null, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce AAgrammar15Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        pparserNode5 = (PParser)nodeArrayList2.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList3.get(0);
        ptreeNode7 = (PTree)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, pparserNode5, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce AAgrammar16Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList3.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList4.get(0);
        ptreeNode7 = (PTree)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce AAgrammar17Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, null, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce AAgrammar18Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, null, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce AAgrammar19Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        pparserNode5 = (PParser)nodeArrayList2.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, pparserNode5, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce AAgrammar20Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList3.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce AAgrammar21Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        ptransformationNode6 = (PTransformation)nodeArrayList2.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, null, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce AAgrammar22Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList3.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, null, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce AAgrammar23Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        pparserNode5 = (PParser)nodeArrayList2.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList3.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, pparserNode5, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AAgrammar24Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList3.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce AAgrammar25Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        ptreeNode7 = (PTree)nodeArrayList2.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, null, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce AAgrammar26Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        ptreeNode7 = (PTree)nodeArrayList3.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, null, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce AAgrammar27Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        pparserNode5 = (PParser)nodeArrayList2.get(0);
        ptreeNode7 = (PTree)nodeArrayList3.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, pparserNode5, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce AAgrammar28Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList3.get(0);
        ptreeNode7 = (PTree)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce AAgrammar29Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        ptransformationNode6 = (PTransformation)nodeArrayList2.get(0);
        ptreeNode7 = (PTree)nodeArrayList3.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, null, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce AAgrammar30Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList3.get(0);
        ptreeNode7 = (PTree)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, null, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce AAgrammar31Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        pparserNode5 = (PParser)nodeArrayList2.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList3.get(0);
        ptreeNode7 = (PTree)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, null, pparserNode5, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new31() /* reduce AAgrammar32Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TLanguageKeyword tlanguagekeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tlanguagekeywordNode2 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(1);
        plexerNode4 = (PLexer)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList3.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList4.get(0);
        ptreeNode7 = (PTree)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tlanguagekeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new32() /* reduce ALanguageName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TLanguageKeyword tlanguagekeywordNode1;
        TIdentifier tidentifierNode2;
        tlanguagekeywordNode1 = (TLanguageKeyword)nodeArrayList1.get(0);
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
	nodeList.add(tlanguagekeywordNode1);
	nodeList.add(tidentifierNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new33() /* reduce AAlexer1Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList2.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode3, listNode4, listNode6, listNode7);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new34() /* reduce AAlexer2Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode4, listNode5, listNode7, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new35() /* reduce AAlexer3Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode3, listNode5, listNode7, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new36() /* reduce AAlexer4Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode4, listNode6, listNode8, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new37() /* reduce AAlexer5Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList2.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList3.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode3, listNode4, listNode6, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new38() /* reduce AAlexer6Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList4.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode4, listNode5, listNode7, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new39() /* reduce AAlexer7Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList4.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode3, listNode5, listNode7, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new40() /* reduce AAlexer8Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList5.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode4, listNode6, listNode8, listNode10);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new41() /* reduce ANormalNamedExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PNamedExpression pnamedexpressionNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TAssign tassignNode3;
        PExpression pexpressionNode4;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tassignNode3 = (TAssign)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pnamedexpressionNode1 = new ANormalNamedExpression(tidentifierNode2, tassignNode3, pexpressionNode4);
        }
	nodeList.add(pnamedexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new42() /* reduce ASelectionNamedExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PNamedExpression pnamedexpressionNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TAssign tassignNode4;
        TIdentifier tidentifierNode5;
        TIdentifier tidentifierNode6;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        tassignNode4 = (TAssign)nodeArrayList2.get(0);
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);
        tidentifierNode6 = (TIdentifier)nodeArrayList5.get(0);

        pnamedexpressionNode1 = new ASelectionNamedExpression(listNode3, tassignNode4, tidentifierNode5, tidentifierNode6);
        }
	nodeList.add(pnamedexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new43() /* reduce ASelection */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        LinkedList listNode2 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode3.add(tidentifierNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new44() /* reduce ASelectionAdditionalIdentifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
	nodeList.add(tidentifierNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new45() /* reduce ASimpleExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        pexpressionNode1 = (PExpression)nodeArrayList1.get(0);
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new46() /* reduce AOrExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TBar tbarNode3;
        PExpression pexpressionNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tbarNode3 = (TBar)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pexpressionNode1 = new AOrExpression(pexpressionNode2, tbarNode3, pexpressionNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new47() /* reduce ASimpleTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        pexpressionNode1 = (PExpression)nodeArrayList1.get(0);
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new48() /* reduce ALookTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TLookKeyword tlookkeywordNode3;
        PExpression pexpressionNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tlookkeywordNode3 = (TLookKeyword)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pexpressionNode1 = new ALookExpression(pexpressionNode2, tlookkeywordNode3, pexpressionNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new49() /* reduce ALookNotTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TLookKeyword tlookkeywordNode3;
        TNotKeyword tnotkeywordNode4;
        PExpression pexpressionNode5;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tlookkeywordNode3 = (TLookKeyword)nodeArrayList2.get(0);
        tnotkeywordNode4 = (TNotKeyword)nodeArrayList3.get(0);
        pexpressionNode5 = (PExpression)nodeArrayList4.get(0);

        pexpressionNode1 = new ALookNotExpression(pexpressionNode2, tlookkeywordNode3, tnotkeywordNode4, pexpressionNode5);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new50() /* reduce AShortestTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        TShortestKeyword tshortestkeywordNode2;
        PExpression pexpressionNode3;
        tshortestkeywordNode2 = (TShortestKeyword)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);

        pexpressionNode1 = new AShortestExpression(tshortestkeywordNode2, pexpressionNode3);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new51() /* reduce ALongestTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        TLongestKeyword tlongestkeywordNode2;
        PExpression pexpressionNode3;
        tlongestkeywordNode2 = (TLongestKeyword)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);

        pexpressionNode1 = new ALongestExpression(tlongestkeywordNode2, pexpressionNode3);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new52() /* reduce ASubtractionTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TMinus tminusNode3;
        PExpression pexpressionNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tminusNode3 = (TMinus)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pexpressionNode1 = new ASubtractionExpression(pexpressionNode2, tminusNode3, pexpressionNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new53() /* reduce ADifferenceTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TDiffKeyword tdiffkeywordNode3;
        PExpression pexpressionNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tdiffkeywordNode3 = (TDiffKeyword)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pexpressionNode1 = new ADifferenceExpression(pexpressionNode2, tdiffkeywordNode3, pexpressionNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new54() /* reduce AAndTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TAndKeyword tandkeywordNode3;
        PExpression pexpressionNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tandkeywordNode3 = (TAndKeyword)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pexpressionNode1 = new AAndExpression(pexpressionNode2, tandkeywordNode3, pexpressionNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new55() /* reduce AIntervalTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PCharacter pcharacterNode2;
        TTwoDots ttwodotsNode3;
        PCharacter pcharacterNode4;
        pcharacterNode2 = (PCharacter)nodeArrayList1.get(0);
        ttwodotsNode3 = (TTwoDots)nodeArrayList2.get(0);
        pcharacterNode4 = (PCharacter)nodeArrayList3.get(0);

        pexpressionNode1 = new AIntervalExpression(pcharacterNode2, ttwodotsNode3, pcharacterNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new56() /* reduce ASimpleLookExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        pexpressionNode1 = (PExpression)nodeArrayList1.get(0);
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new57() /* reduce ACompleteLookExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        PExpression pexpressionNode3;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        {
            // Block
        TEndKeyword tendkeywordNode4;
        tendkeywordNode4 = (TEndKeyword)nodeArrayList2.get(0);

        pexpressionNode3 = new AEndExpression(tendkeywordNode4);
        }

        pexpressionNode1 = new AConcatenationExpression(pexpressionNode2, pexpressionNode3);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new58() /* reduce AEndLookExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        TEndKeyword tendkeywordNode2;
        tendkeywordNode2 = (TEndKeyword)nodeArrayList1.get(0);

        pexpressionNode1 = new AEndExpression(tendkeywordNode2);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new59() /* reduce ASimpleConcatenation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        pexpressionNode1 = (PExpression)nodeArrayList1.get(0);
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new60() /* reduce ACompleteConcatenation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        PExpression pexpressionNode3;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);

        pexpressionNode1 = new AConcatenationExpression(pexpressionNode2, pexpressionNode3);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new61() /* reduce ASimpleUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        pexpressionNode1 = (PExpression)nodeArrayList1.get(0);
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new62() /* reduce AZeroOrOneUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TQMark tqmarkNode3;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tqmarkNode3 = (TQMark)nodeArrayList2.get(0);

        pexpressionNode1 = new AZeroOrOneExpression(pexpressionNode2, tqmarkNode3);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new63() /* reduce AZeroOrMoreUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TStar tstarNode3;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tstarNode3 = (TStar)nodeArrayList2.get(0);

        pexpressionNode1 = new AZeroOrMoreExpression(pexpressionNode2, tstarNode3);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new64() /* reduce ASeparatedZeroOrMoreUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TSeparatorKeyword tseparatorkeywordNode3;
        PExpression pexpressionNode4;
        TStar tstarNode5;
        pexpressionNode2 = (PExpression)nodeArrayList2.get(0);
        tseparatorkeywordNode3 = (TSeparatorKeyword)nodeArrayList3.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList4.get(0);
        tstarNode5 = (TStar)nodeArrayList6.get(0);

        pexpressionNode1 = new ASeparatedZeroOrMoreExpression(pexpressionNode2, tseparatorkeywordNode3, pexpressionNode4, tstarNode5);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new65() /* reduce AOneOrMoreUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TPlus tplusNode3;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tplusNode3 = (TPlus)nodeArrayList2.get(0);

        pexpressionNode1 = new AOneOrMoreExpression(pexpressionNode2, tplusNode3);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new66() /* reduce ASeparatedOneOrMoreUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TSeparatorKeyword tseparatorkeywordNode3;
        PExpression pexpressionNode4;
        TPlus tplusNode5;
        pexpressionNode2 = (PExpression)nodeArrayList2.get(0);
        tseparatorkeywordNode3 = (TSeparatorKeyword)nodeArrayList3.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList4.get(0);
        tplusNode5 = (TPlus)nodeArrayList6.get(0);

        pexpressionNode1 = new ASeparatedOneOrMoreExpression(pexpressionNode2, tseparatorkeywordNode3, pexpressionNode4, tplusNode5);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new67() /* reduce ANumberExponentUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TCaret tcaretNode3;
        TNumber tnumberNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tcaretNode3 = (TCaret)nodeArrayList2.get(0);
        tnumberNode4 = (TNumber)nodeArrayList3.get(0);

        pexpressionNode1 = new ANumberExponentExpression(pexpressionNode2, tcaretNode3, tnumberNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new68() /* reduce ASeparatedNumberExponentUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TSeparatorKeyword tseparatorkeywordNode3;
        PExpression pexpressionNode4;
        TCaret tcaretNode5;
        TNumber tnumberNode6;
        pexpressionNode2 = (PExpression)nodeArrayList2.get(0);
        tseparatorkeywordNode3 = (TSeparatorKeyword)nodeArrayList3.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList4.get(0);
        tcaretNode5 = (TCaret)nodeArrayList6.get(0);
        tnumberNode6 = (TNumber)nodeArrayList7.get(0);

        pexpressionNode1 = new ASeparatedNumberExponentExpression(pexpressionNode2, tseparatorkeywordNode3, pexpressionNode4, tcaretNode5, tnumberNode6);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new69() /* reduce AIntervalExponentUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TCaret tcaretNode3;
        TNumber tnumberNode4;
        TTwoDots ttwodotsNode5;
        TNumber tnumberNode6;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tcaretNode3 = (TCaret)nodeArrayList2.get(0);
        tnumberNode4 = (TNumber)nodeArrayList4.get(0);
        ttwodotsNode5 = (TTwoDots)nodeArrayList5.get(0);
        tnumberNode6 = (TNumber)nodeArrayList6.get(0);

        pexpressionNode1 = new AIntervalExponentExpression(pexpressionNode2, tcaretNode3, tnumberNode4, ttwodotsNode5, tnumberNode6);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new70() /* reduce ASeparatedIntervalExponentUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TSeparatorKeyword tseparatorkeywordNode3;
        PExpression pexpressionNode4;
        TCaret tcaretNode5;
        TNumber tnumberNode6;
        TTwoDots ttwodotsNode7;
        TNumber tnumberNode8;
        pexpressionNode2 = (PExpression)nodeArrayList2.get(0);
        tseparatorkeywordNode3 = (TSeparatorKeyword)nodeArrayList3.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList4.get(0);
        tcaretNode5 = (TCaret)nodeArrayList6.get(0);
        tnumberNode6 = (TNumber)nodeArrayList8.get(0);
        ttwodotsNode7 = (TTwoDots)nodeArrayList9.get(0);
        tnumberNode8 = (TNumber)nodeArrayList10.get(0);

        pexpressionNode1 = new ASeparatedIntervalExponentExpression(pexpressionNode2, tseparatorkeywordNode3, pexpressionNode4, tcaretNode5, tnumberNode6, ttwodotsNode7, tnumberNode8);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new71() /* reduce AAtLeastUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TCaret tcaretNode3;
        TNumber tnumberNode4;
        TThreeDots tthreedotsNode5;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tcaretNode3 = (TCaret)nodeArrayList2.get(0);
        tnumberNode4 = (TNumber)nodeArrayList4.get(0);
        tthreedotsNode5 = (TThreeDots)nodeArrayList5.get(0);

        pexpressionNode1 = new AAtLeastExpression(pexpressionNode2, tcaretNode3, tnumberNode4, tthreedotsNode5);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new72() /* reduce ASeparatedAtLeastUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TSeparatorKeyword tseparatorkeywordNode3;
        PExpression pexpressionNode4;
        TCaret tcaretNode5;
        TNumber tnumberNode6;
        TThreeDots tthreedotsNode7;
        pexpressionNode2 = (PExpression)nodeArrayList2.get(0);
        tseparatorkeywordNode3 = (TSeparatorKeyword)nodeArrayList3.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList4.get(0);
        tcaretNode5 = (TCaret)nodeArrayList6.get(0);
        tnumberNode6 = (TNumber)nodeArrayList8.get(0);
        tthreedotsNode7 = (TThreeDots)nodeArrayList9.get(0);

        pexpressionNode1 = new ASeparatedAtLeastExpression(pexpressionNode2, tseparatorkeywordNode3, pexpressionNode4, tcaretNode5, tnumberNode6, tthreedotsNode7);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new73() /* reduce ANameTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pexpressionNode1 = new ANameExpression(tidentifierNode2);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new74() /* reduce AStringTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pexpressionNode1 = new AStringExpression(tstringNode2);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new75() /* reduce ACharTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        TChar tcharNode2;
        tcharNode2 = (TChar)nodeArrayList1.get(0);

        pexpressionNode1 = new ACharExpression(tcharNode2);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new76() /* reduce AEpsilonTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        TEpsilon tepsilonNode2;
        tepsilonNode2 = (TEpsilon)nodeArrayList1.get(0);

        pexpressionNode1 = new AEpsilonExpression(tepsilonNode2);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new77() /* reduce ADecTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        TDecChar tdeccharNode2;
        tdeccharNode2 = (TDecChar)nodeArrayList1.get(0);

        pexpressionNode1 = new ADecExpression(tdeccharNode2);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new78() /* reduce AHexTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        THexChar thexcharNode2;
        thexcharNode2 = (THexChar)nodeArrayList1.get(0);

        pexpressionNode1 = new AHexExpression(thexcharNode2);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new79() /* reduce AAnyTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        TAnyKeyword tanykeywordNode2;
        tanykeywordNode2 = (TAnyKeyword)nodeArrayList1.get(0);

        pexpressionNode1 = new AAnyExpression(tanykeywordNode2);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new80() /* reduce AParTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        pexpressionNode1 = (PExpression)nodeArrayList2.get(0);
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new81() /* reduce ANameUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnit punitNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        punitNode1 = new ANameUnit(tidentifierNode2);
        }
	nodeList.add(punitNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new82() /* reduce AStringUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnit punitNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        punitNode1 = new AStringUnit(tstringNode2);
        }
	nodeList.add(punitNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new83() /* reduce ACharacterUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnit punitNode1;
        {
            // Block
        PCharacter pcharacterNode2;
        pcharacterNode2 = (PCharacter)nodeArrayList1.get(0);

        punitNode1 = new ACharacterUnit(pcharacterNode2);
        }
	nodeList.add(punitNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new84() /* reduce AEpsilonUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnit punitNode1;
        {
            // Block
        TEpsilon tepsilonNode2;
        tepsilonNode2 = (TEpsilon)nodeArrayList1.get(0);

        punitNode1 = new AEpsilonUnit(tepsilonNode2);
        }
	nodeList.add(punitNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new85() /* reduce AAnyUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnit punitNode1;
        {
            // Block
        TAnyKeyword tanykeywordNode2;
        tanykeywordNode2 = (TAnyKeyword)nodeArrayList1.get(0);

        punitNode1 = new AAnyUnit(tanykeywordNode2);
        }
	nodeList.add(punitNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new86() /* reduce ACharCharacter */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharacter pcharacterNode1;
        {
            // Block
        TChar tcharNode2;
        tcharNode2 = (TChar)nodeArrayList1.get(0);

        pcharacterNode1 = new ACharCharacter(tcharNode2);
        }
	nodeList.add(pcharacterNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new87() /* reduce ADecCharacter */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharacter pcharacterNode1;
        {
            // Block
        TDecChar tdeccharNode2;
        tdeccharNode2 = (TDecChar)nodeArrayList1.get(0);

        pcharacterNode1 = new ADecCharacter(tdeccharNode2);
        }
	nodeList.add(pcharacterNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new88() /* reduce AHexCharacter */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharacter pcharacterNode1;
        {
            // Block
        THexChar thexcharNode2;
        thexcharNode2 = (THexChar)nodeArrayList1.get(0);

        pcharacterNode1 = new AHexCharacter(thexcharNode2);
        }
	nodeList.add(pcharacterNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new89() /* reduce AZeroOrOneUnaryOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnaryOperator punaryoperatorNode1;
        {
            // Block
        TQMark tqmarkNode2;
        tqmarkNode2 = (TQMark)nodeArrayList1.get(0);

        punaryoperatorNode1 = new AZeroOrOneUnaryOperator(tqmarkNode2);
        }
	nodeList.add(punaryoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new90() /* reduce AManyUnaryOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnaryOperator punaryoperatorNode1;
        {
            // Block
        PManyOperator pmanyoperatorNode2;
        pmanyoperatorNode2 = (PManyOperator)nodeArrayList1.get(0);

        punaryoperatorNode1 = new AManyUnaryOperator(pmanyoperatorNode2);
        }
	nodeList.add(punaryoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new91() /* reduce AZeroOrMoreManyOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PManyOperator pmanyoperatorNode1;
        {
            // Block
        TStar tstarNode2;
        tstarNode2 = (TStar)nodeArrayList1.get(0);

        pmanyoperatorNode1 = new AZeroOrMoreManyOperator(tstarNode2);
        }
	nodeList.add(pmanyoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new92() /* reduce AOneOrMoreManyOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PManyOperator pmanyoperatorNode1;
        {
            // Block
        TPlus tplusNode2;
        tplusNode2 = (TPlus)nodeArrayList1.get(0);

        pmanyoperatorNode1 = new AOneOrMoreManyOperator(tplusNode2);
        }
	nodeList.add(pmanyoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new93() /* reduce ANumberManyOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PManyOperator pmanyoperatorNode1;
        {
            // Block
        TCaret tcaretNode2;
        TNumber tnumberNode3;
        tcaretNode2 = (TCaret)nodeArrayList1.get(0);
        tnumberNode3 = (TNumber)nodeArrayList2.get(0);

        pmanyoperatorNode1 = new ANumberManyOperator(tcaretNode2, tnumberNode3);
        }
	nodeList.add(pmanyoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new94() /* reduce AIntervalManyOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PManyOperator pmanyoperatorNode1;
        {
            // Block
        TCaret tcaretNode2;
        TLPar tlparNode3;
        TNumber tnumberNode4;
        TTwoDots ttwodotsNode5;
        TNumber tnumberNode6;
        TRPar trparNode7;
        tcaretNode2 = (TCaret)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        tnumberNode4 = (TNumber)nodeArrayList3.get(0);
        ttwodotsNode5 = (TTwoDots)nodeArrayList4.get(0);
        tnumberNode6 = (TNumber)nodeArrayList5.get(0);
        trparNode7 = (TRPar)nodeArrayList6.get(0);

        pmanyoperatorNode1 = new AIntervalManyOperator(tcaretNode2, tlparNode3, tnumberNode4, ttwodotsNode5, tnumberNode6, trparNode7);
        }
	nodeList.add(pmanyoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new95() /* reduce AAtLeastManyOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PManyOperator pmanyoperatorNode1;
        {
            // Block
        TCaret tcaretNode2;
        TLPar tlparNode3;
        TNumber tnumberNode4;
        TThreeDots tthreedotsNode5;
        TRPar trparNode6;
        tcaretNode2 = (TCaret)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        tnumberNode4 = (TNumber)nodeArrayList3.get(0);
        tthreedotsNode5 = (TThreeDots)nodeArrayList4.get(0);
        trparNode6 = (TRPar)nodeArrayList5.get(0);

        pmanyoperatorNode1 = new AAtLeastManyOperator(tcaretNode2, tlparNode3, tnumberNode4, tthreedotsNode5, trparNode6);
        }
	nodeList.add(pmanyoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new96() /* reduce AAgroup1Group */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGroup pgroupNode1;
        {
            // Block
        TGroupKeyword tgroupkeywordNode2;
        TIdentifier tidentifierNode3;
        TColon tcolonNode4;
        LinkedList listNode5 = new LinkedList();
        tgroupkeywordNode2 = (TGroupKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tcolonNode4 = (TColon)nodeArrayList3.get(0);
        {
            // Block
        }

        pgroupNode1 = new AGroup(tgroupkeywordNode2, tidentifierNode3, tcolonNode4, listNode5);
        }
	nodeList.add(pgroupNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new97() /* reduce AAgroup2Group */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGroup pgroupNode1;
        {
            // Block
        TGroupKeyword tgroupkeywordNode2;
        TIdentifier tidentifierNode3;
        TColon tcolonNode4;
        LinkedList listNode6 = new LinkedList();
        tgroupkeywordNode2 = (TGroupKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tcolonNode4 = (TColon)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pgroupNode1 = new AGroup(tgroupkeywordNode2, tidentifierNode3, tcolonNode4, listNode6);
        }
	nodeList.add(pgroupNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new98() /* reduce AAlexercontexts1LexerContexts */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PLexerContext plexercontextNode1;
        plexercontextNode1 = (PLexerContext)nodeArrayList1.get(0);
	if(plexercontextNode1 != null)
	{
	  listNode2.add(plexercontextNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new99() /* reduce AAlexercontexts2LexerContexts */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PLexerContext plexercontextNode1;
        LinkedList listNode2 = new LinkedList();
        plexercontextNode1 = (PLexerContext)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(plexercontextNode1 != null)
	{
	  listNode3.add(plexercontextNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new100() /* reduce ALexerDefaultContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerContext plexercontextNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PTokens ptokensNode3;
        PIgnored pignoredNode4;
        LinkedList listNode6 = new LinkedList();
        ptokensNode3 = (PTokens)nodeArrayList1.get(0);
        pignoredNode4 = (PIgnored)nodeArrayList1.get(1);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList1.get(2);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        plexercontextNode1 = new ALexerContext(null, ptokensNode3, pignoredNode4, listNode6);
        }
	nodeList.add(plexercontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new101() /* reduce ALexerNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerContext plexercontextNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        PTokens ptokensNode3;
        PIgnored pignoredNode4;
        LinkedList listNode6 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        ptokensNode3 = (PTokens)nodeArrayList4.get(0);
        pignoredNode4 = (PIgnored)nodeArrayList4.get(1);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(2);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        plexercontextNode1 = new ALexerContext(tidentifierNode2, ptokensNode3, pignoredNode4, listNode6);
        }
	nodeList.add(plexercontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new102() /* reduce AAlexercontextbody1LexerContextBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") Object nullNode1 = null;
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        }
	nodeList.add(nullNode1);
	nodeList.add(nullNode2);
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new103() /* reduce AAlexercontextbody2LexerContextBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTokens ptokensNode1;
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode3 = new LinkedList();
        ptokensNode1 = (PTokens)nodeArrayList1.get(0);
        {
            // Block
        }
	nodeList.add(ptokensNode1);
	nodeList.add(nullNode2);
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new104() /* reduce AAlexercontextbody3LexerContextBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        @SuppressWarnings("unused") Object nullNode1 = null;
        PIgnored pignoredNode2;
        LinkedList listNode3 = new LinkedList();
        pignoredNode2 = (PIgnored)nodeArrayList1.get(0);
        {
            // Block
        }
	nodeList.add(nullNode1);
	nodeList.add(pignoredNode2);
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new105() /* reduce AAlexercontextbody4LexerContextBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTokens ptokensNode1;
        PIgnored pignoredNode2;
        LinkedList listNode3 = new LinkedList();
        ptokensNode1 = (PTokens)nodeArrayList1.get(0);
        pignoredNode2 = (PIgnored)nodeArrayList2.get(0);
        {
            // Block
        }
	nodeList.add(ptokensNode1);
	nodeList.add(pignoredNode2);
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new106() /* reduce AAlexercontextbody5LexerContextBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        @SuppressWarnings("unused") Object nullNode1 = null;
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(nullNode1);
	nodeList.add(nullNode2);
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new107() /* reduce AAlexercontextbody6LexerContextBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTokens ptokensNode1;
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode4 = new LinkedList();
        ptokensNode1 = (PTokens)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(ptokensNode1);
	nodeList.add(nullNode2);
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new108() /* reduce AAlexercontextbody7LexerContextBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        @SuppressWarnings("unused") Object nullNode1 = null;
        PIgnored pignoredNode2;
        LinkedList listNode4 = new LinkedList();
        pignoredNode2 = (PIgnored)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(nullNode1);
	nodeList.add(pignoredNode2);
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new109() /* reduce AAlexercontextbody8LexerContextBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTokens ptokensNode1;
        PIgnored pignoredNode2;
        LinkedList listNode4 = new LinkedList();
        ptokensNode1 = (PTokens)nodeArrayList1.get(0);
        pignoredNode2 = (PIgnored)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(ptokensNode1);
	nodeList.add(pignoredNode2);
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new110() /* reduce AAtokens1Tokens */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTokens ptokensNode1;
        {
            // Block
        TTokenKeyword ttokenkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        ttokenkeywordNode2 = (TTokenKeyword)nodeArrayList1.get(0);
        {
            // Block
        }

        ptokensNode1 = new ATokens(ttokenkeywordNode2, listNode3);
        }
	nodeList.add(ptokensNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new111() /* reduce AAtokens2Tokens */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTokens ptokensNode1;
        {
            // Block
        TTokenKeyword ttokenkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        ttokenkeywordNode2 = (TTokenKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ptokensNode1 = new ATokens(ttokenkeywordNode2, listNode4);
        }
	nodeList.add(ptokensNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new112() /* reduce AAignored1Ignored */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PIgnored pignoredNode1;
        {
            // Block
        TIgnoredKeyword tignoredkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        tignoredkeywordNode2 = (TIgnoredKeyword)nodeArrayList1.get(0);
        {
            // Block
        }

        pignoredNode1 = new AIgnored(tignoredkeywordNode2, listNode3);
        }
	nodeList.add(pignoredNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new113() /* reduce AAignored2Ignored */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PIgnored pignoredNode1;
        {
            // Block
        TIgnoredKeyword tignoredkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        tignoredkeywordNode2 = (TIgnoredKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pignoredNode1 = new AIgnored(tignoredkeywordNode2, listNode4);
        }
	nodeList.add(pignoredNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new114() /* reduce AAunitlist1UnitList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PUnit punitNode1;
        punitNode1 = (PUnit)nodeArrayList1.get(0);
	if(punitNode1 != null)
	{
	  listNode2.add(punitNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new115() /* reduce AAunitlist2UnitList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PUnit punitNode1;
        LinkedList listNode2 = new LinkedList();
        punitNode1 = (PUnit)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(punitNode1 != null)
	{
	  listNode3.add(punitNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new116() /* reduce AAdditionalUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnit punitNode1;
        punitNode1 = (PUnit)nodeArrayList2.get(0);
	nodeList.add(punitNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new117() /* reduce AAlexerpriorities1LexerPriorities */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new118() /* reduce AAlexerpriorities2LexerPriorities */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new119() /* reduce ALexerPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerPriority plexerpriorityNode1;
        {
            // Block
        PUnit punitNode2;
        TGt tgtNode3;
        PUnit punitNode4;
        punitNode2 = (PUnit)nodeArrayList1.get(0);
        tgtNode3 = (TGt)nodeArrayList2.get(0);
        punitNode4 = (PUnit)nodeArrayList3.get(0);

        plexerpriorityNode1 = new ALexerPriority(punitNode2, tgtNode3, punitNode4);
        }
	nodeList.add(plexerpriorityNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new120() /* reduce AAlexerinvestigators1LexerInvestigators */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new121() /* reduce AAlexerinvestigators2LexerInvestigators */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new122() /* reduce ALexerInvestigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerInvestigator plexerinvestigatorNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TIdentifier tidentifierNode3;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList3.get(0);

        plexerinvestigatorNode1 = new ALexerInvestigator(tidentifierNode2, tidentifierNode3);
        }
	nodeList.add(plexerinvestigatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new123() /* reduce AAparser1Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        @SuppressWarnings("unused") Object nullNode4 = null;
        LinkedList listNode6 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode7 = null;
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList2.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pparserNode1 = new AParser(tparserkeywordNode2, null, null, listNode6, null);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new124() /* reduce AAparser2Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        PStart pstartNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        LinkedList listNode6 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode7 = null;
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        pstartNode3 = (PStart)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pparserNode1 = new AParser(tparserkeywordNode2, pstartNode3, null, listNode6, null);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new125() /* reduce AAparser3Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PRestartable prestartableNode4;
        LinkedList listNode6 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode7 = null;
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        prestartableNode4 = (PRestartable)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pparserNode1 = new AParser(tparserkeywordNode2, null, prestartableNode4, listNode6, null);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new126() /* reduce AAparser4Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        PStart pstartNode3;
        PRestartable prestartableNode4;
        LinkedList listNode6 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode7 = null;
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        pstartNode3 = (PStart)nodeArrayList2.get(0);
        prestartableNode4 = (PRestartable)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pparserNode1 = new AParser(tparserkeywordNode2, pstartNode3, prestartableNode4, listNode6, null);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new127() /* reduce AAparser5Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        @SuppressWarnings("unused") Object nullNode4 = null;
        LinkedList listNode6 = new LinkedList();
        PInlined pinlinedNode7;
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList2.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        pinlinedNode7 = (PInlined)nodeArrayList3.get(0);

        pparserNode1 = new AParser(tparserkeywordNode2, null, null, listNode6, pinlinedNode7);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new128() /* reduce AAparser6Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        PStart pstartNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        LinkedList listNode6 = new LinkedList();
        PInlined pinlinedNode7;
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        pstartNode3 = (PStart)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        pinlinedNode7 = (PInlined)nodeArrayList4.get(0);

        pparserNode1 = new AParser(tparserkeywordNode2, pstartNode3, null, listNode6, pinlinedNode7);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new129() /* reduce AAparser7Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PRestartable prestartableNode4;
        LinkedList listNode6 = new LinkedList();
        PInlined pinlinedNode7;
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        prestartableNode4 = (PRestartable)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        pinlinedNode7 = (PInlined)nodeArrayList4.get(0);

        pparserNode1 = new AParser(tparserkeywordNode2, null, prestartableNode4, listNode6, pinlinedNode7);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new130() /* reduce AAparser8Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        PStart pstartNode3;
        PRestartable prestartableNode4;
        LinkedList listNode6 = new LinkedList();
        PInlined pinlinedNode7;
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        pstartNode3 = (PStart)nodeArrayList2.get(0);
        prestartableNode4 = (PRestartable)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        pinlinedNode7 = (PInlined)nodeArrayList5.get(0);

        pparserNode1 = new AParser(tparserkeywordNode2, pstartNode3, prestartableNode4, listNode6, pinlinedNode7);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new131() /* reduce AAstart1Start */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStart pstartNode1;
        {
            // Block
        TStartKeyword tstartkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        tstartkeywordNode2 = (TStartKeyword)nodeArrayList1.get(0);
        {
            // Block
        }

        pstartNode1 = new AStart(tstartkeywordNode2, listNode3);
        }
	nodeList.add(pstartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new132() /* reduce AAstart2Start */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStart pstartNode1;
        {
            // Block
        TStartKeyword tstartkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        tstartkeywordNode2 = (TStartKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pstartNode1 = new AStart(tstartkeywordNode2, listNode4);
        }
	nodeList.add(pstartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new133() /* reduce AArestartable1Restartable */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PRestartable prestartableNode1;
        {
            // Block
        TRestartableKeyword trestartablekeywordNode2;
        LinkedList listNode3 = new LinkedList();
        trestartablekeywordNode2 = (TRestartableKeyword)nodeArrayList1.get(0);
        {
            // Block
        }

        prestartableNode1 = new ARestartable(trestartablekeywordNode2, listNode3);
        }
	nodeList.add(prestartableNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new134() /* reduce AArestartable2Restartable */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PRestartable prestartableNode1;
        {
            // Block
        TRestartableKeyword trestartablekeywordNode2;
        LinkedList listNode4 = new LinkedList();
        trestartablekeywordNode2 = (TRestartableKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        prestartableNode1 = new ARestartable(trestartablekeywordNode2, listNode4);
        }
	nodeList.add(prestartableNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new135() /* reduce AAidentifierlist1IdentifierList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode2.add(tidentifierNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new136() /* reduce AAidentifierlist2IdentifierList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        LinkedList listNode2 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode3.add(tidentifierNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new137() /* reduce AAdditionalIdentifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
	nodeList.add(tidentifierNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new138() /* reduce AAparsercontexts1ParserContexts */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserContext pparsercontextNode1;
        pparsercontextNode1 = (PParserContext)nodeArrayList1.get(0);
	if(pparsercontextNode1 != null)
	{
	  listNode2.add(pparsercontextNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new139() /* reduce AAparsercontexts2ParserContexts */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PParserContext pparsercontextNode1;
        LinkedList listNode2 = new LinkedList();
        pparsercontextNode1 = (PParserContext)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(pparsercontextNode1 != null)
	{
	  listNode3.add(pparsercontextNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new140() /* reduce AAparserdefaultcontext1ParserDefaultContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        PParserContext pparsercontextNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        }

        pparsercontextNode1 = new AParserContext(null, listNode3);
        }
	nodeList.add(pparsercontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new141() /* reduce AAparserdefaultcontext2ParserDefaultContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserContext pparsercontextNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparsercontextNode1 = new AParserContext(null, listNode4);
        }
	nodeList.add(pparsercontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new142() /* reduce AAparsernamedcontext1ParserNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserContext pparsercontextNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode3 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        }

        pparsercontextNode1 = new AParserContext(tidentifierNode2, listNode3);
        }
	nodeList.add(pparsercontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new143() /* reduce AAparsernamedcontext2ParserNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserContext pparsercontextNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode4 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparsercontextNode1 = new AParserContext(tidentifierNode2, listNode4);
        }
	nodeList.add(pparsercontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new144() /* reduce AAnormalparserproduction1ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserProduction pparserproductionNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        TAssign tassignNode4;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode8 = null;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tassignNode4 = (TAssign)nodeArrayList1.get(1);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList1.get(2);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }

        pparserproductionNode1 = new ANormalParserProduction(null, tidentifierNode3, tassignNode4, listNode6, listNode7, null);
        }
	nodeList.add(pparserproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new145() /* reduce AAnormalparserproduction2ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserProduction pparserproductionNode1;
        {
            // Block
        PQualifier pqualifierNode2;
        TIdentifier tidentifierNode3;
        TAssign tassignNode4;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode8 = null;
        pqualifierNode2 = (PQualifier)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tassignNode4 = (TAssign)nodeArrayList2.get(1);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList2.get(2);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }

        pparserproductionNode1 = new ANormalParserProduction(pqualifierNode2, tidentifierNode3, tassignNode4, listNode6, listNode7, null);
        }
	nodeList.add(pparserproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new146() /* reduce AAnormalparserproduction3ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserProduction pparserproductionNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        TAssign tassignNode4;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode9 = null;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tassignNode4 = (TAssign)nodeArrayList1.get(1);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList1.get(2);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList2.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pparserproductionNode1 = new ANormalParserProduction(null, tidentifierNode3, tassignNode4, listNode6, listNode8, null);
        }
	nodeList.add(pparserproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new147() /* reduce AAnormalparserproduction4ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserProduction pparserproductionNode1;
        {
            // Block
        PQualifier pqualifierNode2;
        TIdentifier tidentifierNode3;
        TAssign tassignNode4;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode9 = null;
        pqualifierNode2 = (PQualifier)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tassignNode4 = (TAssign)nodeArrayList2.get(1);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList2.get(2);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList3.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pparserproductionNode1 = new ANormalParserProduction(pqualifierNode2, tidentifierNode3, tassignNode4, listNode6, listNode8, null);
        }
	nodeList.add(pparserproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new148() /* reduce AAnormalparserproduction5ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserProduction pparserproductionNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        TAssign tassignNode4;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        PParserInvestigator pparserinvestigatorNode8;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tassignNode4 = (TAssign)nodeArrayList1.get(1);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList1.get(2);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        pparserinvestigatorNode8 = (PParserInvestigator)nodeArrayList2.get(0);

        pparserproductionNode1 = new ANormalParserProduction(null, tidentifierNode3, tassignNode4, listNode6, listNode7, pparserinvestigatorNode8);
        }
	nodeList.add(pparserproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new149() /* reduce AAnormalparserproduction6ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserProduction pparserproductionNode1;
        {
            // Block
        PQualifier pqualifierNode2;
        TIdentifier tidentifierNode3;
        TAssign tassignNode4;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        PParserInvestigator pparserinvestigatorNode8;
        pqualifierNode2 = (PQualifier)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tassignNode4 = (TAssign)nodeArrayList2.get(1);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList2.get(2);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        pparserinvestigatorNode8 = (PParserInvestigator)nodeArrayList3.get(0);

        pparserproductionNode1 = new ANormalParserProduction(pqualifierNode2, tidentifierNode3, tassignNode4, listNode6, listNode7, pparserinvestigatorNode8);
        }
	nodeList.add(pparserproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new150() /* reduce AAnormalparserproduction7ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserProduction pparserproductionNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        TAssign tassignNode4;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        PParserInvestigator pparserinvestigatorNode9;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tassignNode4 = (TAssign)nodeArrayList1.get(1);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList1.get(2);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList2.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        pparserinvestigatorNode9 = (PParserInvestigator)nodeArrayList3.get(0);

        pparserproductionNode1 = new ANormalParserProduction(null, tidentifierNode3, tassignNode4, listNode6, listNode8, pparserinvestigatorNode9);
        }
	nodeList.add(pparserproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new151() /* reduce AAnormalparserproduction8ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserProduction pparserproductionNode1;
        {
            // Block
        PQualifier pqualifierNode2;
        TIdentifier tidentifierNode3;
        TAssign tassignNode4;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        PParserInvestigator pparserinvestigatorNode9;
        pqualifierNode2 = (PQualifier)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tassignNode4 = (TAssign)nodeArrayList2.get(1);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList2.get(2);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList3.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        pparserinvestigatorNode9 = (PParserInvestigator)nodeArrayList4.get(0);

        pparserproductionNode1 = new ANormalParserProduction(pqualifierNode2, tidentifierNode3, tassignNode4, listNode6, listNode8, pparserinvestigatorNode9);
        }
	nodeList.add(pparserproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new152() /* reduce ASelectionParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserProduction pparserproductionNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TAssign tassignNode4;
        TIdentifier tidentifierNode5;
        TIdentifier tidentifierNode6;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        tassignNode4 = (TAssign)nodeArrayList2.get(0);
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);
        tidentifierNode6 = (TIdentifier)nodeArrayList5.get(0);

        pparserproductionNode1 = new ASelectionParserProduction(listNode3, tassignNode4, tidentifierNode5, tidentifierNode6);
        }
	nodeList.add(pparserproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new153() /* reduce ADanglingQualifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PQualifier pqualifierNode1;
        {
            // Block
        TDanglingKeyword tdanglingkeywordNode2;
        tdanglingkeywordNode2 = (TDanglingKeyword)nodeArrayList1.get(0);

        pqualifierNode1 = new ADanglingQualifier(tdanglingkeywordNode2);
        }
	nodeList.add(pqualifierNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new154() /* reduce ATokenQualifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PQualifier pqualifierNode1;
        {
            // Block
        TTokenKeyword ttokenkeywordNode2;
        ttokenkeywordNode2 = (TTokenKeyword)nodeArrayList1.get(0);

        pqualifierNode1 = new ATokenQualifier(ttokenkeywordNode2);
        }
	nodeList.add(pqualifierNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new155() /* reduce AParserProductionBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TIdentifier tidentifierNode1;
        TAssign tassignNode2;
        LinkedList listNode4 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
        tassignNode2 = (TAssign)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
	nodeList.add(tidentifierNode1);
	nodeList.add(tassignNode2);
	nodeList.add(listNode4);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new156() /* reduce AAparseralternatives1ParserAlternatives */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserAlternative pparseralternativeNode1;
        pparseralternativeNode1 = (PParserAlternative)nodeArrayList1.get(0);
	if(pparseralternativeNode1 != null)
	{
	  listNode2.add(pparseralternativeNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new157() /* reduce AAparseralternatives2ParserAlternatives */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PParserAlternative pparseralternativeNode1;
        LinkedList listNode2 = new LinkedList();
        pparseralternativeNode1 = (PParserAlternative)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(pparseralternativeNode1 != null)
	{
	  listNode3.add(pparseralternativeNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new158() /* reduce AAdditionalParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        pparseralternativeNode1 = (PParserAlternative)nodeArrayList2.get(0);
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new159() /* reduce AAparseralternative1ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        PParserAlternative pparseralternativeNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode3 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode4 = null;
        {
            // Block
        }

        pparseralternativeNode1 = new AParserAlternative(null, listNode3, null);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new160() /* reduce AAparseralternative2ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        TAlternativeName talternativenameNode2;
        LinkedList listNode3 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode4 = null;
        talternativenameNode2 = (TAlternativeName)nodeArrayList1.get(0);
        {
            // Block
        }

        pparseralternativeNode1 = new AParserAlternative(talternativenameNode2, listNode3, null);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new161() /* reduce AAparseralternative3ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode4 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode5 = null;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparseralternativeNode1 = new AParserAlternative(null, listNode4, null);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new162() /* reduce AAparseralternative4ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        TAlternativeName talternativenameNode2;
        LinkedList listNode4 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode5 = null;
        talternativenameNode2 = (TAlternativeName)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparseralternativeNode1 = new AParserAlternative(talternativenameNode2, listNode4, null);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new163() /* reduce AAparseralternative5ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode3 = new LinkedList();
        PDanglingElement pdanglingelementNode4;
        {
            // Block
        }
        pdanglingelementNode4 = (PDanglingElement)nodeArrayList1.get(0);

        pparseralternativeNode1 = new AParserAlternative(null, listNode3, pdanglingelementNode4);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new164() /* reduce AAparseralternative6ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        TAlternativeName talternativenameNode2;
        LinkedList listNode3 = new LinkedList();
        PDanglingElement pdanglingelementNode4;
        talternativenameNode2 = (TAlternativeName)nodeArrayList1.get(0);
        {
            // Block
        }
        pdanglingelementNode4 = (PDanglingElement)nodeArrayList2.get(0);

        pparseralternativeNode1 = new AParserAlternative(talternativenameNode2, listNode3, pdanglingelementNode4);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new165() /* reduce AAparseralternative7ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode4 = new LinkedList();
        PDanglingElement pdanglingelementNode5;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        pdanglingelementNode5 = (PDanglingElement)nodeArrayList2.get(0);

        pparseralternativeNode1 = new AParserAlternative(null, listNode4, pdanglingelementNode5);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new166() /* reduce AAparseralternative8ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        TAlternativeName talternativenameNode2;
        LinkedList listNode4 = new LinkedList();
        PDanglingElement pdanglingelementNode5;
        talternativenameNode2 = (TAlternativeName)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        pdanglingelementNode5 = (PDanglingElement)nodeArrayList3.get(0);

        pparseralternativeNode1 = new AParserAlternative(talternativenameNode2, listNode4, pdanglingelementNode5);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new167() /* reduce AAunitelement1Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PUnit punitNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        punitNode3 = (PUnit)nodeArrayList1.get(0);

        pelementNode1 = new AUnitElement(null, punitNode3, null);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new168() /* reduce AAunitelement2Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        TElementName telementnameNode2;
        PUnit punitNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        telementnameNode2 = (TElementName)nodeArrayList1.get(0);
        punitNode3 = (PUnit)nodeArrayList2.get(0);

        pelementNode1 = new AUnitElement(telementnameNode2, punitNode3, null);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new169() /* reduce AAunitelement3Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PUnit punitNode3;
        PUnaryOperator punaryoperatorNode4;
        punitNode3 = (PUnit)nodeArrayList1.get(0);
        punaryoperatorNode4 = (PUnaryOperator)nodeArrayList2.get(0);

        pelementNode1 = new AUnitElement(null, punitNode3, punaryoperatorNode4);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new170() /* reduce AAunitelement4Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        TElementName telementnameNode2;
        PUnit punitNode3;
        PUnaryOperator punaryoperatorNode4;
        telementnameNode2 = (TElementName)nodeArrayList1.get(0);
        punitNode3 = (PUnit)nodeArrayList2.get(0);
        punaryoperatorNode4 = (PUnaryOperator)nodeArrayList3.get(0);

        pelementNode1 = new AUnitElement(telementnameNode2, punitNode3, punaryoperatorNode4);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new171() /* reduce AAseparatedelement1Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PUnit punitNode3;
        TSeparatorKeyword tseparatorkeywordNode4;
        PUnit punitNode5;
        PManyOperator pmanyoperatorNode6;
        punitNode3 = (PUnit)nodeArrayList2.get(0);
        tseparatorkeywordNode4 = (TSeparatorKeyword)nodeArrayList3.get(0);
        punitNode5 = (PUnit)nodeArrayList4.get(0);
        pmanyoperatorNode6 = (PManyOperator)nodeArrayList6.get(0);

        pelementNode1 = new ASeparatedElement(null, punitNode3, tseparatorkeywordNode4, punitNode5, pmanyoperatorNode6);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new172() /* reduce AAseparatedelement2Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        TElementName telementnameNode2;
        PUnit punitNode3;
        TSeparatorKeyword tseparatorkeywordNode4;
        PUnit punitNode5;
        PManyOperator pmanyoperatorNode6;
        telementnameNode2 = (TElementName)nodeArrayList1.get(0);
        punitNode3 = (PUnit)nodeArrayList3.get(0);
        tseparatorkeywordNode4 = (TSeparatorKeyword)nodeArrayList4.get(0);
        punitNode5 = (PUnit)nodeArrayList5.get(0);
        pmanyoperatorNode6 = (PManyOperator)nodeArrayList7.get(0);

        pelementNode1 = new ASeparatedElement(telementnameNode2, punitNode3, tseparatorkeywordNode4, punitNode5, pmanyoperatorNode6);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new173() /* reduce AAdanglingelement1DanglingElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDanglingElement pdanglingelementNode1;
        {
            // Block
        TDanglingKeyword tdanglingkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TIdentifier tidentifierNode4;
        TQMark tqmarkNode5;
        tdanglingkeywordNode2 = (TDanglingKeyword)nodeArrayList1.get(0);
        tidentifierNode4 = (TIdentifier)nodeArrayList2.get(0);
        tqmarkNode5 = (TQMark)nodeArrayList3.get(0);

        pdanglingelementNode1 = new ADanglingElement(tdanglingkeywordNode2, null, tidentifierNode4, tqmarkNode5);
        }
	nodeList.add(pdanglingelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new174() /* reduce AAdanglingelement2DanglingElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDanglingElement pdanglingelementNode1;
        {
            // Block
        TDanglingKeyword tdanglingkeywordNode2;
        TElementName telementnameNode3;
        TIdentifier tidentifierNode4;
        TQMark tqmarkNode5;
        tdanglingkeywordNode2 = (TDanglingKeyword)nodeArrayList1.get(0);
        telementnameNode3 = (TElementName)nodeArrayList2.get(0);
        tidentifierNode4 = (TIdentifier)nodeArrayList3.get(0);
        tqmarkNode5 = (TQMark)nodeArrayList4.get(0);

        pdanglingelementNode1 = new ADanglingElement(tdanglingkeywordNode2, telementnameNode3, tidentifierNode4, tqmarkNode5);
        }
	nodeList.add(pdanglingelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new175() /* reduce AAparserpriorities1ParserPriorities */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new176() /* reduce AAparserpriorities2ParserPriorities */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new177() /* reduce ALeftParserPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserPriority pparserpriorityNode1;
        {
            // Block
        TLeftKeyword tleftkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        tleftkeywordNode2 = (TLeftKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparserpriorityNode1 = new ALeftParserPriority(tleftkeywordNode2, listNode4);
        }
	nodeList.add(pparserpriorityNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new178() /* reduce ARightParserPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserPriority pparserpriorityNode1;
        {
            // Block
        TRightKeyword trightkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        trightkeywordNode2 = (TRightKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparserpriorityNode1 = new ARightParserPriority(trightkeywordNode2, listNode4);
        }
	nodeList.add(pparserpriorityNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new179() /* reduce AAparserinvestigator1ParserInvestigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserInvestigator pparserinvestigatorNode1;
        {
            // Block
        TInvestigatorKeyword tinvestigatorkeywordNode2;
        TIdentifier tidentifierNode3;
        LinkedList listNode4 = new LinkedList();
        tinvestigatorkeywordNode2 = (TInvestigatorKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        }

        pparserinvestigatorNode1 = new AParserInvestigator(tinvestigatorkeywordNode2, tidentifierNode3, listNode4);
        }
	nodeList.add(pparserinvestigatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new180() /* reduce AAparserinvestigator2ParserInvestigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserInvestigator pparserinvestigatorNode1;
        {
            // Block
        TInvestigatorKeyword tinvestigatorkeywordNode2;
        TIdentifier tidentifierNode3;
        LinkedList listNode5 = new LinkedList();
        tinvestigatorkeywordNode2 = (TInvestigatorKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pparserinvestigatorNode1 = new AParserInvestigator(tinvestigatorkeywordNode2, tidentifierNode3, listNode5);
        }
	nodeList.add(pparserinvestigatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new181() /* reduce AAinlined1Inlined */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PInlined pinlinedNode1;
        {
            // Block
        TInlinedKeyword tinlinedkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        tinlinedkeywordNode2 = (TInlinedKeyword)nodeArrayList1.get(0);
        {
            // Block
        }

        pinlinedNode1 = new AInlined(tinlinedkeywordNode2, listNode3);
        }
	nodeList.add(pinlinedNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new182() /* reduce AAinlined2Inlined */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PInlined pinlinedNode1;
        {
            // Block
        TInlinedKeyword tinlinedkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        tinlinedkeywordNode2 = (TInlinedKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pinlinedNode1 = new AInlined(tinlinedkeywordNode2, listNode4);
        }
	nodeList.add(pinlinedNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new183() /* reduce AAtransformation1Transformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformation ptransformationNode1;
        {
            // Block
        TTransformationKeyword ttransformationkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        @SuppressWarnings("unused") Object nullNode4 = null;
        ttransformationkeywordNode2 = (TTransformationKeyword)nodeArrayList1.get(0);

        ptransformationNode1 = new ATransformation(ttransformationkeywordNode2, null, null);
        }
	nodeList.add(ptransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new184() /* reduce AAtransformation2Transformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformation ptransformationNode1;
        {
            // Block
        TTransformationKeyword ttransformationkeywordNode2;
        PProductionTransformations pproductiontransformationsNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        ttransformationkeywordNode2 = (TTransformationKeyword)nodeArrayList1.get(0);
        pproductiontransformationsNode3 = (PProductionTransformations)nodeArrayList2.get(0);

        ptransformationNode1 = new ATransformation(ttransformationkeywordNode2, pproductiontransformationsNode3, null);
        }
	nodeList.add(ptransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new185() /* reduce AAtransformation3Transformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformation ptransformationNode1;
        {
            // Block
        TTransformationKeyword ttransformationkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PAlternativeTransformations palternativetransformationsNode4;
        ttransformationkeywordNode2 = (TTransformationKeyword)nodeArrayList1.get(0);
        palternativetransformationsNode4 = (PAlternativeTransformations)nodeArrayList2.get(0);

        ptransformationNode1 = new ATransformation(ttransformationkeywordNode2, null, palternativetransformationsNode4);
        }
	nodeList.add(ptransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new186() /* reduce AAtransformation4Transformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformation ptransformationNode1;
        {
            // Block
        TTransformationKeyword ttransformationkeywordNode2;
        PProductionTransformations pproductiontransformationsNode3;
        PAlternativeTransformations palternativetransformationsNode4;
        ttransformationkeywordNode2 = (TTransformationKeyword)nodeArrayList1.get(0);
        pproductiontransformationsNode3 = (PProductionTransformations)nodeArrayList2.get(0);
        palternativetransformationsNode4 = (PAlternativeTransformations)nodeArrayList3.get(0);

        ptransformationNode1 = new ATransformation(ttransformationkeywordNode2, pproductiontransformationsNode3, palternativetransformationsNode4);
        }
	nodeList.add(ptransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new187() /* reduce AAproductiontransformations1ProductionTransformations */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProductionTransformations pproductiontransformationsNode1;
        {
            // Block
        TProductionKeyword tproductionkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        tproductionkeywordNode2 = (TProductionKeyword)nodeArrayList1.get(0);
        {
            // Block
        }

        pproductiontransformationsNode1 = new AProductionTransformations(tproductionkeywordNode2, listNode3);
        }
	nodeList.add(pproductiontransformationsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new188() /* reduce AAproductiontransformations2ProductionTransformations */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProductionTransformations pproductiontransformationsNode1;
        {
            // Block
        TProductionKeyword tproductionkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        tproductionkeywordNode2 = (TProductionKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pproductiontransformationsNode1 = new AProductionTransformations(tproductionkeywordNode2, listNode4);
        }
	nodeList.add(pproductiontransformationsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new189() /* reduce AAproductiontransformation1ProductionTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProductionTransformation pproductiontransformationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TArrow tarrowNode3;
        LinkedList listNode4 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tarrowNode3 = (TArrow)nodeArrayList2.get(0);
        {
            // Block
        }

        pproductiontransformationNode1 = new AProductionTransformation(tidentifierNode2, tarrowNode3, listNode4);
        }
	nodeList.add(pproductiontransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new190() /* reduce AAproductiontransformation2ProductionTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProductionTransformation pproductiontransformationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TArrow tarrowNode3;
        LinkedList listNode5 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tarrowNode3 = (TArrow)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pproductiontransformationNode1 = new AProductionTransformation(tidentifierNode2, tarrowNode3, listNode5);
        }
	nodeList.add(pproductiontransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new191() /* reduce AAalternativetransformations1AlternativeTransformations */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternativeTransformations palternativetransformationsNode1;
        {
            // Block
        TAlternativeKeyword talternativekeywordNode2;
        LinkedList listNode3 = new LinkedList();
        talternativekeywordNode2 = (TAlternativeKeyword)nodeArrayList1.get(0);
        {
            // Block
        }

        palternativetransformationsNode1 = new AAlternativeTransformations(talternativekeywordNode2, listNode3);
        }
	nodeList.add(palternativetransformationsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new192() /* reduce AAalternativetransformations2AlternativeTransformations */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternativeTransformations palternativetransformationsNode1;
        {
            // Block
        TAlternativeKeyword talternativekeywordNode2;
        LinkedList listNode4 = new LinkedList();
        talternativekeywordNode2 = (TAlternativeKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        palternativetransformationsNode1 = new AAlternativeTransformations(talternativekeywordNode2, listNode4);
        }
	nodeList.add(palternativetransformationsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new193() /* reduce AAalternativetransformation1AlternativeTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternativeTransformation palternativetransformationNode1;
        {
            // Block
        PAlternativeReference palternativereferenceNode2;
        TArrow tarrowNode3;
        LinkedList listNode4 = new LinkedList();
        palternativereferenceNode2 = (PAlternativeReference)nodeArrayList1.get(0);
        tarrowNode3 = (TArrow)nodeArrayList2.get(0);
        {
            // Block
        }

        palternativetransformationNode1 = new AAlternativeTransformation(palternativereferenceNode2, tarrowNode3, listNode4);
        }
	nodeList.add(palternativetransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new194() /* reduce AAalternativetransformation2AlternativeTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternativeTransformation palternativetransformationNode1;
        {
            // Block
        PAlternativeReference palternativereferenceNode2;
        TArrow tarrowNode3;
        LinkedList listNode5 = new LinkedList();
        palternativereferenceNode2 = (PAlternativeReference)nodeArrayList1.get(0);
        tarrowNode3 = (TArrow)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        palternativetransformationNode1 = new AAlternativeTransformation(palternativereferenceNode2, tarrowNode3, listNode5);
        }
	nodeList.add(palternativetransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new195() /* reduce AUnnamedAlternativeReference */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternativeReference palternativereferenceNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        palternativereferenceNode1 = new AUnnamedAlternativeReference(tidentifierNode2);
        }
	nodeList.add(palternativereferenceNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new196() /* reduce ANamedAlternativeReference */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternativeReference palternativereferenceNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TDot tdotNode3;
        TIdentifier tidentifierNode4;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);
        tidentifierNode4 = (TIdentifier)nodeArrayList3.get(0);

        palternativereferenceNode1 = new ANamedAlternativeReference(tidentifierNode2, tdotNode3, tidentifierNode4);
        }
	nodeList.add(palternativereferenceNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new197() /* reduce ANullTransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformationElement ptransformationelementNode1;
        {
            // Block
        TNullKeyword tnullkeywordNode2;
        tnullkeywordNode2 = (TNullKeyword)nodeArrayList1.get(0);

        ptransformationelementNode1 = new ANullTransformationElement(tnullkeywordNode2);
        }
	nodeList.add(ptransformationelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new198() /* reduce AReferenceTransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformationElement ptransformationelementNode1;
        {
            // Block
        PElementReference pelementreferenceNode2;
        pelementreferenceNode2 = (PElementReference)nodeArrayList1.get(0);

        ptransformationelementNode1 = new AReferenceTransformationElement(pelementreferenceNode2);
        }
	nodeList.add(ptransformationelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new199() /* reduce AAnewtransformationelement1TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformationElement ptransformationelementNode1;
        {
            // Block
        TNewKeyword tnewkeywordNode2;
        PAlternativeReference palternativereferenceNode3;
        TLPar tlparNode4;
        LinkedList listNode5 = new LinkedList();
        TRPar trparNode6;
        tnewkeywordNode2 = (TNewKeyword)nodeArrayList1.get(0);
        palternativereferenceNode3 = (PAlternativeReference)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        {
            // Block
        }
        trparNode6 = (TRPar)nodeArrayList4.get(0);

        ptransformationelementNode1 = new ANewTransformationElement(tnewkeywordNode2, palternativereferenceNode3, tlparNode4, listNode5, trparNode6);
        }
	nodeList.add(ptransformationelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new200() /* reduce AAnewtransformationelement2TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformationElement ptransformationelementNode1;
        {
            // Block
        TNewKeyword tnewkeywordNode2;
        PAlternativeReference palternativereferenceNode3;
        TLPar tlparNode4;
        LinkedList listNode6 = new LinkedList();
        TRPar trparNode7;
        tnewkeywordNode2 = (TNewKeyword)nodeArrayList1.get(0);
        palternativereferenceNode3 = (PAlternativeReference)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        trparNode7 = (TRPar)nodeArrayList5.get(0);

        ptransformationelementNode1 = new ANewTransformationElement(tnewkeywordNode2, palternativereferenceNode3, tlparNode4, listNode6, trparNode7);
        }
	nodeList.add(ptransformationelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new201() /* reduce AAlisttransformationelement1TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformationElement ptransformationelementNode1;
        {
            // Block
        TLPar tlparNode2;
        LinkedList listNode3 = new LinkedList();
        TRPar trparNode4;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        }
        trparNode4 = (TRPar)nodeArrayList2.get(0);

        ptransformationelementNode1 = new AListTransformationElement(tlparNode2, listNode3, trparNode4);
        }
	nodeList.add(ptransformationelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new202() /* reduce AAlisttransformationelement2TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformationElement ptransformationelementNode1;
        {
            // Block
        TLPar tlparNode2;
        LinkedList listNode4 = new LinkedList();
        TRPar trparNode5;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        trparNode5 = (TRPar)nodeArrayList3.get(0);

        ptransformationelementNode1 = new AListTransformationElement(tlparNode2, listNode4, trparNode5);
        }
	nodeList.add(ptransformationelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new203() /* reduce AReferenceListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        PElementReference pelementreferenceNode2;
        pelementreferenceNode2 = (PElementReference)nodeArrayList1.get(0);

        plistelementNode1 = new AReferenceListElement(pelementreferenceNode2);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new204() /* reduce AListReferenceListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        PElementReference pelementreferenceNode2;
        TThreeDots tthreedotsNode3;
        pelementreferenceNode2 = (PElementReference)nodeArrayList1.get(0);
        tthreedotsNode3 = (TThreeDots)nodeArrayList2.get(0);

        plistelementNode1 = new AListReferenceListElement(pelementreferenceNode2, tthreedotsNode3);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new205() /* reduce AAnewlistelement1ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        TNewKeyword tnewkeywordNode2;
        PAlternativeReference palternativereferenceNode3;
        TLPar tlparNode4;
        LinkedList listNode5 = new LinkedList();
        TRPar trparNode6;
        tnewkeywordNode2 = (TNewKeyword)nodeArrayList1.get(0);
        palternativereferenceNode3 = (PAlternativeReference)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        {
            // Block
        }
        trparNode6 = (TRPar)nodeArrayList4.get(0);

        plistelementNode1 = new ANewListElement(tnewkeywordNode2, palternativereferenceNode3, tlparNode4, listNode5, trparNode6);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new206() /* reduce AAnewlistelement2ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        TNewKeyword tnewkeywordNode2;
        PAlternativeReference palternativereferenceNode3;
        TLPar tlparNode4;
        LinkedList listNode6 = new LinkedList();
        TRPar trparNode7;
        tnewkeywordNode2 = (TNewKeyword)nodeArrayList1.get(0);
        palternativereferenceNode3 = (PAlternativeReference)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        trparNode7 = (TRPar)nodeArrayList5.get(0);

        plistelementNode1 = new ANewListElement(tnewkeywordNode2, palternativereferenceNode3, tlparNode4, listNode6, trparNode7);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new207() /* reduce ANaturalElementReference */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElementReference pelementreferenceNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pelementreferenceNode1 = new ANaturalElementReference(tidentifierNode2);
        }
	nodeList.add(pelementreferenceNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new208() /* reduce ATransformedElementReference */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElementReference pelementreferenceNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TDot tdotNode3;
        TIdentifier tidentifierNode4;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);
        tidentifierNode4 = (TIdentifier)nodeArrayList3.get(0);

        pelementreferenceNode1 = new ATransformedElementReference(tidentifierNode2, tdotNode3, tidentifierNode4);
        }
	nodeList.add(pelementreferenceNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new209() /* reduce AAtree1Tree */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTree ptreeNode1;
        {
            // Block
        TTreeKeyword ttreekeywordNode2;
        LinkedList listNode3 = new LinkedList();
        ttreekeywordNode2 = (TTreeKeyword)nodeArrayList1.get(0);
        {
            // Block
        }

        ptreeNode1 = new ATree(ttreekeywordNode2, listNode3);
        }
	nodeList.add(ptreeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new210() /* reduce AAtree2Tree */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTree ptreeNode1;
        {
            // Block
        TTreeKeyword ttreekeywordNode2;
        LinkedList listNode4 = new LinkedList();
        ttreekeywordNode2 = (TTreeKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ptreeNode1 = new ATree(ttreekeywordNode2, listNode4);
        }
	nodeList.add(ptreeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new211() /* reduce ATreeProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTreeProduction ptreeproductionNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TAssign tassignNode3;
        LinkedList listNode5 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tassignNode3 = (TAssign)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        ptreeproductionNode1 = new ATreeProduction(tidentifierNode2, tassignNode3, listNode5);
        }
	nodeList.add(ptreeproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new212() /* reduce AAtreealternatives1TreeAlternatives */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTreeAlternative ptreealternativeNode1;
        ptreealternativeNode1 = (PTreeAlternative)nodeArrayList1.get(0);
	if(ptreealternativeNode1 != null)
	{
	  listNode2.add(ptreealternativeNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new213() /* reduce AAtreealternatives2TreeAlternatives */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PTreeAlternative ptreealternativeNode1;
        LinkedList listNode2 = new LinkedList();
        ptreealternativeNode1 = (PTreeAlternative)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(ptreealternativeNode1 != null)
	{
	  listNode3.add(ptreealternativeNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new214() /* reduce AAdditionalTreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTreeAlternative ptreealternativeNode1;
        ptreealternativeNode1 = (PTreeAlternative)nodeArrayList2.get(0);
	nodeList.add(ptreealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new215() /* reduce AAtreealternative1TreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        PTreeAlternative ptreealternativeNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        }

        ptreealternativeNode1 = new ATreeAlternative(null, listNode3);
        }
	nodeList.add(ptreealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new216() /* reduce AAtreealternative2TreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTreeAlternative ptreealternativeNode1;
        {
            // Block
        TAlternativeName talternativenameNode2;
        LinkedList listNode3 = new LinkedList();
        talternativenameNode2 = (TAlternativeName)nodeArrayList1.get(0);
        {
            // Block
        }

        ptreealternativeNode1 = new ATreeAlternative(talternativenameNode2, listNode3);
        }
	nodeList.add(ptreealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new217() /* reduce AAtreealternative3TreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTreeAlternative ptreealternativeNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ptreealternativeNode1 = new ATreeAlternative(null, listNode4);
        }
	nodeList.add(ptreealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new218() /* reduce AAtreealternative4TreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTreeAlternative ptreealternativeNode1;
        {
            // Block
        TAlternativeName talternativenameNode2;
        LinkedList listNode4 = new LinkedList();
        talternativenameNode2 = (TAlternativeName)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ptreealternativeNode1 = new ATreeAlternative(talternativenameNode2, listNode4);
        }
	nodeList.add(ptreealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new219() /* reduce ATerminal$NamedExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PNamedExpression pnamedexpressionNode1;
        pnamedexpressionNode1 = (PNamedExpression)nodeArrayList1.get(0);
	if(pnamedexpressionNode1 != null)
	{
	  listNode2.add(pnamedexpressionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new220() /* reduce ANonTerminal$NamedExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PNamedExpression pnamedexpressionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pnamedexpressionNode2 = (PNamedExpression)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pnamedexpressionNode2 != null)
	{
	  listNode3.add(pnamedexpressionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new221() /* reduce ATerminal$Group */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PGroup pgroupNode1;
        pgroupNode1 = (PGroup)nodeArrayList1.get(0);
	if(pgroupNode1 != null)
	{
	  listNode2.add(pgroupNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new222() /* reduce ANonTerminal$Group */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PGroup pgroupNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pgroupNode2 = (PGroup)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pgroupNode2 != null)
	{
	  listNode3.add(pgroupNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new223() /* reduce ATerminal$SelectionAdditionalIdentifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode2.add(tidentifierNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new224() /* reduce ANonTerminal$SelectionAdditionalIdentifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        TIdentifier tidentifierNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(tidentifierNode2 != null)
	{
	  listNode3.add(tidentifierNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new225() /* reduce ATerminal$LexerNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PLexerContext plexercontextNode1;
        plexercontextNode1 = (PLexerContext)nodeArrayList1.get(0);
	if(plexercontextNode1 != null)
	{
	  listNode2.add(plexercontextNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new226() /* reduce ANonTerminal$LexerNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PLexerContext plexercontextNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plexercontextNode2 = (PLexerContext)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plexercontextNode2 != null)
	{
	  listNode3.add(plexercontextNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new227() /* reduce ATerminal$AdditionalUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PUnit punitNode1;
        punitNode1 = (PUnit)nodeArrayList1.get(0);
	if(punitNode1 != null)
	{
	  listNode2.add(punitNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new228() /* reduce ANonTerminal$AdditionalUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PUnit punitNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        punitNode2 = (PUnit)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(punitNode2 != null)
	{
	  listNode3.add(punitNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new229() /* reduce ATerminal$LexerPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PLexerPriority plexerpriorityNode1;
        plexerpriorityNode1 = (PLexerPriority)nodeArrayList1.get(0);
	if(plexerpriorityNode1 != null)
	{
	  listNode2.add(plexerpriorityNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new230() /* reduce ANonTerminal$LexerPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PLexerPriority plexerpriorityNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plexerpriorityNode2 = (PLexerPriority)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plexerpriorityNode2 != null)
	{
	  listNode3.add(plexerpriorityNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new231() /* reduce ATerminal$LexerInvestigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PLexerInvestigator plexerinvestigatorNode1;
        plexerinvestigatorNode1 = (PLexerInvestigator)nodeArrayList1.get(0);
	if(plexerinvestigatorNode1 != null)
	{
	  listNode2.add(plexerinvestigatorNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new232() /* reduce ANonTerminal$LexerInvestigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PLexerInvestigator plexerinvestigatorNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plexerinvestigatorNode2 = (PLexerInvestigator)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plexerinvestigatorNode2 != null)
	{
	  listNode3.add(plexerinvestigatorNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new233() /* reduce ATerminal$AdditionalIdentifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode2.add(tidentifierNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new234() /* reduce ANonTerminal$AdditionalIdentifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        TIdentifier tidentifierNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(tidentifierNode2 != null)
	{
	  listNode3.add(tidentifierNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new235() /* reduce ATerminal$ParserNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserContext pparsercontextNode1;
        pparsercontextNode1 = (PParserContext)nodeArrayList1.get(0);
	if(pparsercontextNode1 != null)
	{
	  listNode2.add(pparsercontextNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new236() /* reduce ANonTerminal$ParserNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParserContext pparsercontextNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparsercontextNode2 = (PParserContext)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparsercontextNode2 != null)
	{
	  listNode3.add(pparsercontextNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new237() /* reduce ATerminal$ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserProduction pparserproductionNode1;
        pparserproductionNode1 = (PParserProduction)nodeArrayList1.get(0);
	if(pparserproductionNode1 != null)
	{
	  listNode2.add(pparserproductionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new238() /* reduce ANonTerminal$ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParserProduction pparserproductionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparserproductionNode2 = (PParserProduction)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparserproductionNode2 != null)
	{
	  listNode3.add(pparserproductionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new239() /* reduce ATerminal$AdditionalParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserAlternative pparseralternativeNode1;
        pparseralternativeNode1 = (PParserAlternative)nodeArrayList1.get(0);
	if(pparseralternativeNode1 != null)
	{
	  listNode2.add(pparseralternativeNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new240() /* reduce ANonTerminal$AdditionalParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParserAlternative pparseralternativeNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparseralternativeNode2 = (PParserAlternative)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparseralternativeNode2 != null)
	{
	  listNode3.add(pparseralternativeNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new241() /* reduce ATerminal$Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PElement pelementNode1;
        pelementNode1 = (PElement)nodeArrayList1.get(0);
	if(pelementNode1 != null)
	{
	  listNode2.add(pelementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new242() /* reduce ANonTerminal$Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PElement pelementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pelementNode2 = (PElement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pelementNode2 != null)
	{
	  listNode3.add(pelementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new243() /* reduce ATerminal$ParserPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserPriority pparserpriorityNode1;
        pparserpriorityNode1 = (PParserPriority)nodeArrayList1.get(0);
	if(pparserpriorityNode1 != null)
	{
	  listNode2.add(pparserpriorityNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new244() /* reduce ANonTerminal$ParserPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParserPriority pparserpriorityNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparserpriorityNode2 = (PParserPriority)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparserpriorityNode2 != null)
	{
	  listNode3.add(pparserpriorityNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new245() /* reduce ATerminal$ProductionTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PProductionTransformation pproductiontransformationNode1;
        pproductiontransformationNode1 = (PProductionTransformation)nodeArrayList1.get(0);
	if(pproductiontransformationNode1 != null)
	{
	  listNode2.add(pproductiontransformationNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new246() /* reduce ANonTerminal$ProductionTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PProductionTransformation pproductiontransformationNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pproductiontransformationNode2 = (PProductionTransformation)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pproductiontransformationNode2 != null)
	{
	  listNode3.add(pproductiontransformationNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new247() /* reduce ATerminal$AlternativeTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAlternativeTransformation palternativetransformationNode1;
        palternativetransformationNode1 = (PAlternativeTransformation)nodeArrayList1.get(0);
	if(palternativetransformationNode1 != null)
	{
	  listNode2.add(palternativetransformationNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new248() /* reduce ANonTerminal$AlternativeTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PAlternativeTransformation palternativetransformationNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        palternativetransformationNode2 = (PAlternativeTransformation)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(palternativetransformationNode2 != null)
	{
	  listNode3.add(palternativetransformationNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new249() /* reduce ATerminal$TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTransformationElement ptransformationelementNode1;
        ptransformationelementNode1 = (PTransformationElement)nodeArrayList1.get(0);
	if(ptransformationelementNode1 != null)
	{
	  listNode2.add(ptransformationelementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new250() /* reduce ANonTerminal$TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PTransformationElement ptransformationelementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptransformationelementNode2 = (PTransformationElement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptransformationelementNode2 != null)
	{
	  listNode3.add(ptransformationelementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new251() /* reduce ATerminal$ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PListElement plistelementNode1;
        plistelementNode1 = (PListElement)nodeArrayList1.get(0);
	if(plistelementNode1 != null)
	{
	  listNode2.add(plistelementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new252() /* reduce ANonTerminal$ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PListElement plistelementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plistelementNode2 = (PListElement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plistelementNode2 != null)
	{
	  listNode3.add(plistelementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new253() /* reduce ATerminal$TreeProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTreeProduction ptreeproductionNode1;
        ptreeproductionNode1 = (PTreeProduction)nodeArrayList1.get(0);
	if(ptreeproductionNode1 != null)
	{
	  listNode2.add(ptreeproductionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new254() /* reduce ANonTerminal$TreeProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PTreeProduction ptreeproductionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptreeproductionNode2 = (PTreeProduction)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptreeproductionNode2 != null)
	{
	  listNode3.add(ptreeproductionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new255() /* reduce ATerminal$AdditionalTreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTreeAlternative ptreealternativeNode1;
        ptreealternativeNode1 = (PTreeAlternative)nodeArrayList1.get(0);
	if(ptreealternativeNode1 != null)
	{
	  listNode2.add(ptreealternativeNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new256() /* reduce ANonTerminal$AdditionalTreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PTreeAlternative ptreealternativeNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptreealternativeNode2 = (PTreeAlternative)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptreealternativeNode2 != null)
	{
	  listNode3.add(ptreealternativeNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {11, SHIFT, 1}, },
			{{-1, ERROR, 1}, {30, SHIFT, 4}, },
			{{-1, ERROR, 2}, {65, ACCEPT, -1}, },
			{{-1, REDUCE, 0}, {13, SHIFT, 5}, {19, SHIFT, 6}, {28, SHIFT, 7}, {29, SHIFT, 8}, {56, SHIFT, 9}, },
			{{-1, ERROR, 4}, {52, SHIFT, 14}, },
			{{-1, REDUCE, 102}, {7, SHIFT, 15}, {8, SHIFT, 16}, {20, SHIFT, 17}, {27, SHIFT, 18}, {30, SHIFT, 19}, {39, SHIFT, 20}, },
			{{-1, REDUCE, 140}, {4, SHIFT, 32}, {22, SHIFT, 33}, {26, SHIFT, 34}, {27, SHIFT, 35}, {30, SHIFT, 36}, {39, SHIFT, 20}, },
			{{-1, REDUCE, 183}, {0, SHIFT, 46}, {21, SHIFT, 47}, },
			{{-1, REDUCE, 209}, {30, SHIFT, 50}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 1}, {19, SHIFT, 6}, {28, SHIFT, 7}, {29, SHIFT, 8}, {56, SHIFT, 53}, },
			{{-1, REDUCE, 2}, {28, SHIFT, 7}, {29, SHIFT, 8}, {56, SHIFT, 57}, },
			{{-1, REDUCE, 4}, {29, SHIFT, 8}, {56, SHIFT, 60}, },
			{{-1, REDUCE, 8}, {56, SHIFT, 62}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 15}, {30, SHIFT, 63}, },
			{{-1, ERROR, 16}, {2, SHIFT, 64}, {30, SHIFT, 65}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {52, SHIFT, 71}, },
			{{-1, REDUCE, 117}, {2, SHIFT, 64}, {30, SHIFT, 65}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, },
			{{-1, ERROR, 18}, {2, SHIFT, 64}, {30, SHIFT, 65}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {52, SHIFT, 78}, },
			{{-1, ERROR, 19}, {41, SHIFT, 80}, },
			{{-1, ERROR, 20}, {30, SHIFT, 81}, },
			{{-1, REDUCE, 219}, },
			{{-1, ERROR, 22}, {41, SHIFT, 82}, },
			{{-1, REDUCE, 221}, },
			{{-1, REDUCE, 33}, {10, SHIFT, 83}, },
			{{-1, REDUCE, 98}, {3, SHIFT, 85}, },
			{{-1, REDUCE, 100}, },
			{{-1, REDUCE, 103}, {8, SHIFT, 16}, {20, SHIFT, 17}, },
			{{-1, REDUCE, 104}, {20, SHIFT, 17}, },
			{{-1, REDUCE, 106}, },
			{{-1, REDUCE, 102}, {7, SHIFT, 15}, {8, SHIFT, 16}, {20, SHIFT, 17}, {27, SHIFT, 18}, {30, SHIFT, 19}, {39, SHIFT, 20}, },
			{{-1, REDUCE, 102}, {7, SHIFT, 15}, {8, SHIFT, 16}, {20, SHIFT, 17}, {27, SHIFT, 18}, },
			{{-1, REDUCE, 153}, },
			{{-1, ERROR, 33}, {30, SHIFT, 96}, {52, SHIFT, 97}, },
			{{-1, ERROR, 34}, {30, SHIFT, 96}, {52, SHIFT, 99}, },
			{{-1, REDUCE, 154}, },
			{{-1, ERROR, 36}, {41, SHIFT, 101}, },
			{{-1, ERROR, 37}, {41, SHIFT, 102}, },
			{{-1, REDUCE, 140}, {4, SHIFT, 32}, {22, SHIFT, 33}, {27, SHIFT, 35}, {30, SHIFT, 36}, {39, SHIFT, 20}, },
			{{-1, REDUCE, 140}, {4, SHIFT, 32}, {27, SHIFT, 35}, {30, SHIFT, 36}, {39, SHIFT, 20}, },
			{{-1, REDUCE, 123}, {9, SHIFT, 106}, },
			{{-1, REDUCE, 138}, {3, SHIFT, 108}, },
			{{-1, REDUCE, 237}, },
			{{-1, ERROR, 43}, {30, SHIFT, 36}, },
			{{-1, REDUCE, 144}, {10, SHIFT, 112}, {20, SHIFT, 113}, },
			{{-1, REDUCE, 141}, {4, SHIFT, 32}, {27, SHIFT, 35}, {30, SHIFT, 36}, {39, SHIFT, 20}, },
			{{-1, REDUCE, 191}, {30, SHIFT, 117}, },
			{{-1, REDUCE, 187}, {30, SHIFT, 121}, },
			{{-1, REDUCE, 184}, {0, SHIFT, 46}, },
			{{-1, REDUCE, 185}, },
			{{-1, ERROR, 50}, {41, SHIFT, 125}, },
			{{-1, REDUCE, 253}, },
			{{-1, REDUCE, 210}, {30, SHIFT, 50}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 3}, {28, SHIFT, 7}, {29, SHIFT, 8}, {56, SHIFT, 127}, },
			{{-1, REDUCE, 5}, {29, SHIFT, 8}, {56, SHIFT, 130}, },
			{{-1, REDUCE, 9}, {56, SHIFT, 132}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 6}, {29, SHIFT, 8}, {56, SHIFT, 133}, },
			{{-1, REDUCE, 10}, {56, SHIFT, 135}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 12}, {56, SHIFT, 136}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 63}, {45, SHIFT, 137}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 86}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 87}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 112}, },
			{{-1, REDUCE, 114}, {46, SHIFT, 138}, },
			{{-1, REDUCE, 83}, },
			{{-1, ERROR, 74}, {52, SHIFT, 141}, },
			{{-1, ERROR, 75}, {48, SHIFT, 142}, },
			{{-1, REDUCE, 229}, },
			{{-1, REDUCE, 118}, {2, SHIFT, 64}, {30, SHIFT, 65}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, },
			{{-1, REDUCE, 110}, },
			{{-1, ERROR, 79}, {52, SHIFT, 144}, },
			{{-1, ERROR, 80}, {2, SHIFT, 145}, {14, SHIFT, 146}, {25, SHIFT, 147}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 150}, {35, SHIFT, 151}, {37, SHIFT, 152}, {38, SHIFT, 153}, {39, SHIFT, 154}, },
			{{-1, ERROR, 81}, {43, SHIFT, 161}, },
			{{-1, ERROR, 82}, {30, SHIFT, 164}, },
			{{-1, REDUCE, 120}, {30, SHIFT, 165}, },
			{{-1, REDUCE, 37}, },
			{{-1, ERROR, 85}, {30, SHIFT, 168}, },
			{{-1, REDUCE, 225}, },
			{{-1, REDUCE, 99}, {3, SHIFT, 85}, },
			{{-1, REDUCE, 105}, {20, SHIFT, 17}, },
			{{-1, REDUCE, 107}, },
			{{-1, REDUCE, 108}, },
			{{-1, REDUCE, 220}, },
			{{-1, REDUCE, 34}, {10, SHIFT, 83}, },
			{{-1, REDUCE, 102}, {7, SHIFT, 15}, {8, SHIFT, 16}, {20, SHIFT, 17}, {27, SHIFT, 18}, },
			{{-1, REDUCE, 222}, },
			{{-1, REDUCE, 35}, {10, SHIFT, 83}, },
			{{-1, REDUCE, 135}, {46, SHIFT, 174}, },
			{{-1, REDUCE, 133}, },
			{{-1, ERROR, 98}, {52, SHIFT, 177}, },
			{{-1, REDUCE, 131}, },
			{{-1, ERROR, 100}, {52, SHIFT, 178}, },
			{{-1, REDUCE, 159}, {2, SHIFT, 64}, {4, SHIFT, 179}, {30, SHIFT, 65}, {31, SHIFT, 180}, {32, SHIFT, 181}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {39, SHIFT, 182}, },
			{{-1, ERROR, 102}, {30, SHIFT, 189}, },
			{{-1, REDUCE, 140}, {4, SHIFT, 32}, {27, SHIFT, 35}, {30, SHIFT, 36}, {39, SHIFT, 20}, },
			{{-1, REDUCE, 124}, {9, SHIFT, 106}, },
			{{-1, REDUCE, 125}, {9, SHIFT, 106}, },
			{{-1, ERROR, 106}, {30, SHIFT, 96}, {52, SHIFT, 193}, },
			{{-1, REDUCE, 127}, },
			{{-1, ERROR, 108}, {30, SHIFT, 195}, },
			{{-1, REDUCE, 235}, },
			{{-1, REDUCE, 139}, {3, SHIFT, 108}, },
			{{-1, REDUCE, 145}, {10, SHIFT, 112}, {20, SHIFT, 113}, },
			{{-1, ERROR, 112}, {30, SHIFT, 199}, },
			{{-1, REDUCE, 175}, {12, SHIFT, 200}, {23, SHIFT, 201}, },
			{{-1, REDUCE, 146}, {10, SHIFT, 112}, },
			{{-1, REDUCE, 148}, },
			{{-1, REDUCE, 238}, },
			{{-1, REDUCE, 195}, {47, SHIFT, 205}, },
			{{-1, REDUCE, 247}, },
			{{-1, ERROR, 119}, {42, SHIFT, 206}, },
			{{-1, REDUCE, 192}, {30, SHIFT, 117}, },
			{{-1, ERROR, 121}, {42, SHIFT, 208}, },
			{{-1, REDUCE, 245}, },
			{{-1, REDUCE, 188}, {30, SHIFT, 121}, },
			{{-1, REDUCE, 186}, },
			{{-1, REDUCE, 215}, {2, SHIFT, 64}, {30, SHIFT, 65}, {31, SHIFT, 210}, {32, SHIFT, 181}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {39, SHIFT, 182}, },
			{{-1, REDUCE, 254}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 7}, {29, SHIFT, 8}, {56, SHIFT, 214}, },
			{{-1, REDUCE, 11}, {56, SHIFT, 216}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 13}, {56, SHIFT, 217}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 14}, {56, SHIFT, 218}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 137}, {2, SHIFT, 64}, {30, SHIFT, 65}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {52, SHIFT, 219}, },
			{{-1, ERROR, 138}, {2, SHIFT, 64}, {30, SHIFT, 65}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, },
			{{-1, REDUCE, 227}, },
			{{-1, REDUCE, 115}, {46, SHIFT, 138}, },
			{{-1, REDUCE, 113}, },
			{{-1, ERROR, 142}, {2, SHIFT, 64}, {30, SHIFT, 65}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, },
			{{-1, REDUCE, 230}, },
			{{-1, REDUCE, 111}, },
			{{-1, REDUCE, 79}, },
			{{-1, ERROR, 146}, {2, SHIFT, 145}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, ERROR, 147}, {2, SHIFT, 145}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 75}, {55, REDUCE, 86}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 77}, {55, REDUCE, 87}, },
			{{-1, REDUCE, 78}, {55, REDUCE, 88}, },
			{{-1, ERROR, 154}, {2, SHIFT, 145}, {14, SHIFT, 146}, {25, SHIFT, 147}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 150}, {35, SHIFT, 151}, {37, SHIFT, 152}, {38, SHIFT, 153}, {39, SHIFT, 154}, },
			{{-1, ERROR, 155}, {43, SHIFT, 231}, {52, SHIFT, 232}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 47}, {1, SHIFT, 233}, {2, SHIFT, 145}, {5, SHIFT, 234}, {15, SHIFT, 235}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, {49, SHIFT, 236}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 61}, {44, SHIFT, 238}, {50, SHIFT, 239}, {51, SHIFT, 240}, {53, SHIFT, 241}, },
			{{-1, ERROR, 160}, {55, SHIFT, 242}, },
			{{-1, ERROR, 161}, {30, SHIFT, 243}, },
			{{-1, REDUCE, 223}, },
			{{-1, ERROR, 163}, {40, SHIFT, 244}, {43, SHIFT, 161}, },
			{{-1, ERROR, 164}, {39, SHIFT, 246}, },
			{{-1, ERROR, 165}, {39, SHIFT, 247}, },
			{{-1, REDUCE, 231}, },
			{{-1, REDUCE, 121}, {30, SHIFT, 165}, },
			{{-1, ERROR, 168}, {45, SHIFT, 249}, },
			{{-1, REDUCE, 226}, },
			{{-1, REDUCE, 109}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 36}, {10, SHIFT, 83}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 174}, {30, SHIFT, 251}, },
			{{-1, REDUCE, 233}, },
			{{-1, REDUCE, 136}, {46, SHIFT, 174}, },
			{{-1, REDUCE, 134}, },
			{{-1, REDUCE, 132}, },
			{{-1, ERROR, 179}, {30, SHIFT, 253}, {32, SHIFT, 254}, },
			{{-1, REDUCE, 160}, {2, SHIFT, 64}, {4, SHIFT, 179}, {30, SHIFT, 65}, {32, SHIFT, 181}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {39, SHIFT, 182}, },
			{{-1, ERROR, 181}, {2, SHIFT, 64}, {30, SHIFT, 65}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {39, SHIFT, 257}, },
			{{-1, ERROR, 182}, {2, SHIFT, 64}, {30, SHIFT, 65}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, },
			{{-1, REDUCE, 167}, {44, SHIFT, 260}, {50, SHIFT, 261}, {51, SHIFT, 262}, {53, SHIFT, 263}, },
			{{-1, ERROR, 184}, {52, SHIFT, 266}, },
			{{-1, REDUCE, 156}, {43, SHIFT, 267}, },
			{{-1, REDUCE, 241}, },
			{{-1, REDUCE, 163}, },
			{{-1, REDUCE, 161}, {2, SHIFT, 64}, {4, SHIFT, 179}, {30, SHIFT, 65}, {32, SHIFT, 181}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {39, SHIFT, 182}, },
			{{-1, ERROR, 189}, {39, SHIFT, 272}, },
			{{-1, REDUCE, 126}, {9, SHIFT, 106}, },
			{{-1, REDUCE, 128}, },
			{{-1, REDUCE, 129}, },
			{{-1, REDUCE, 181}, },
			{{-1, ERROR, 194}, {52, SHIFT, 274}, },
			{{-1, ERROR, 195}, {45, SHIFT, 275}, },
			{{-1, REDUCE, 236}, },
			{{-1, REDUCE, 147}, {10, SHIFT, 112}, },
			{{-1, REDUCE, 149}, },
			{{-1, ERROR, 199}, {39, SHIFT, 277}, },
			{{-1, ERROR, 200}, {30, SHIFT, 96}, },
			{{-1, ERROR, 201}, {30, SHIFT, 96}, },
			{{-1, REDUCE, 243}, },
			{{-1, REDUCE, 176}, {12, SHIFT, 200}, {23, SHIFT, 201}, },
			{{-1, REDUCE, 150}, },
			{{-1, ERROR, 205}, {30, SHIFT, 281}, },
			{{-1, ERROR, 206}, {17, SHIFT, 282}, {18, SHIFT, 283}, {30, SHIFT, 284}, {39, SHIFT, 285}, {52, SHIFT, 286}, },
			{{-1, REDUCE, 248}, },
			{{-1, ERROR, 208}, {2, SHIFT, 64}, {30, SHIFT, 65}, {32, SHIFT, 181}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {39, SHIFT, 182}, {52, SHIFT, 290}, },
			{{-1, REDUCE, 246}, },
			{{-1, REDUCE, 216}, {2, SHIFT, 64}, {30, SHIFT, 65}, {32, SHIFT, 181}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {39, SHIFT, 182}, },
			{{-1, ERROR, 211}, {52, SHIFT, 293}, },
			{{-1, REDUCE, 212}, {43, SHIFT, 294}, },
			{{-1, REDUCE, 217}, {2, SHIFT, 64}, {30, SHIFT, 65}, {32, SHIFT, 181}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {39, SHIFT, 182}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 15}, {56, SHIFT, 297}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 96}, },
			{{-1, ERROR, 220}, {52, SHIFT, 298}, },
			{{-1, REDUCE, 116}, },
			{{-1, REDUCE, 228}, },
			{{-1, ERROR, 223}, {52, SHIFT, 299}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 51}, {2, SHIFT, 145}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, REDUCE, 50}, {2, SHIFT, 145}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, ERROR, 229}, {40, SHIFT, 300}, {43, SHIFT, 231}, },
			{{-1, REDUCE, 47}, {1, SHIFT, 233}, {2, SHIFT, 145}, {5, SHIFT, 234}, {15, SHIFT, 235}, {24, SHIFT, 301}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, {49, SHIFT, 236}, },
			{{-1, ERROR, 231}, {2, SHIFT, 145}, {14, SHIFT, 146}, {25, SHIFT, 147}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 150}, {35, SHIFT, 151}, {37, SHIFT, 152}, {38, SHIFT, 153}, {39, SHIFT, 154}, },
			{{-1, REDUCE, 41}, },
			{{-1, ERROR, 233}, {2, SHIFT, 145}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, ERROR, 234}, {2, SHIFT, 145}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, ERROR, 235}, {2, SHIFT, 145}, {6, SHIFT, 305}, {16, SHIFT, 306}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, ERROR, 236}, {2, SHIFT, 145}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, REDUCE, 60}, },
			{{-1, ERROR, 238}, {36, SHIFT, 310}, {39, SHIFT, 311}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 63}, },
			{{-1, ERROR, 242}, {34, SHIFT, 67}, {37, SHIFT, 69}, {38, SHIFT, 70}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 224}, },
			{{-1, ERROR, 246}, {30, SHIFT, 313}, },
			{{-1, ERROR, 247}, {30, SHIFT, 314}, },
			{{-1, REDUCE, 232}, },
			{{-1, REDUCE, 102}, {8, SHIFT, 16}, {20, SHIFT, 17}, {27, SHIFT, 18}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 137}, },
			{{-1, REDUCE, 234}, },
			{{-1, ERROR, 253}, {51, SHIFT, 316}, },
			{{-1, ERROR, 254}, {30, SHIFT, 317}, },
			{{-1, REDUCE, 164}, },
			{{-1, REDUCE, 162}, {2, SHIFT, 64}, {4, SHIFT, 179}, {30, SHIFT, 65}, {32, SHIFT, 181}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {39, SHIFT, 182}, },
			{{-1, ERROR, 257}, {2, SHIFT, 64}, {30, SHIFT, 65}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, },
			{{-1, REDUCE, 168}, {44, SHIFT, 260}, {50, SHIFT, 261}, {51, SHIFT, 262}, {53, SHIFT, 263}, },
			{{-1, ERROR, 259}, {24, SHIFT, 321}, },
			{{-1, ERROR, 260}, {36, SHIFT, 322}, {39, SHIFT, 323}, },
			{{-1, REDUCE, 92}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 169}, },
			{{-1, REDUCE, 90}, },
			{{-1, REDUCE, 155}, },
			{{-1, REDUCE, 159}, {2, SHIFT, 64}, {4, SHIFT, 179}, {30, SHIFT, 65}, {31, SHIFT, 180}, {32, SHIFT, 181}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {39, SHIFT, 182}, },
			{{-1, REDUCE, 239}, },
			{{-1, REDUCE, 157}, {43, SHIFT, 267}, },
			{{-1, REDUCE, 242}, },
			{{-1, REDUCE, 165}, },
			{{-1, ERROR, 272}, {30, SHIFT, 326}, },
			{{-1, REDUCE, 130}, },
			{{-1, REDUCE, 182}, },
			{{-1, REDUCE, 142}, {4, SHIFT, 32}, {27, SHIFT, 35}, {30, SHIFT, 36}, {39, SHIFT, 20}, },
			{{-1, REDUCE, 151}, },
			{{-1, ERROR, 277}, {30, SHIFT, 96}, {40, SHIFT, 328}, },
			{{-1, ERROR, 278}, {52, SHIFT, 330}, },
			{{-1, ERROR, 279}, {52, SHIFT, 331}, },
			{{-1, REDUCE, 244}, },
			{{-1, REDUCE, 196}, },
			{{-1, ERROR, 282}, {30, SHIFT, 117}, },
			{{-1, REDUCE, 197}, },
			{{-1, REDUCE, 207}, {47, SHIFT, 333}, },
			{{-1, ERROR, 285}, {17, SHIFT, 334}, {30, SHIFT, 284}, {40, SHIFT, 335}, },
			{{-1, REDUCE, 193}, },
			{{-1, REDUCE, 249}, },
			{{-1, REDUCE, 198}, },
			{{-1, ERROR, 289}, {17, SHIFT, 282}, {18, SHIFT, 283}, {30, SHIFT, 284}, {39, SHIFT, 285}, {52, SHIFT, 339}, },
			{{-1, REDUCE, 189}, },
			{{-1, ERROR, 291}, {2, SHIFT, 64}, {30, SHIFT, 65}, {32, SHIFT, 181}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {39, SHIFT, 182}, {52, SHIFT, 341}, },
			{{-1, REDUCE, 218}, {2, SHIFT, 64}, {30, SHIFT, 65}, {32, SHIFT, 181}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {39, SHIFT, 182}, },
			{{-1, REDUCE, 211}, },
			{{-1, REDUCE, 215}, {2, SHIFT, 64}, {30, SHIFT, 65}, {31, SHIFT, 210}, {32, SHIFT, 181}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, {39, SHIFT, 182}, },
			{{-1, REDUCE, 255}, },
			{{-1, REDUCE, 213}, {43, SHIFT, 294}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 97}, },
			{{-1, REDUCE, 119}, },
			{{-1, REDUCE, 80}, },
			{{-1, ERROR, 301}, {2, SHIFT, 145}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 54}, {2, SHIFT, 145}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, REDUCE, 53}, {2, SHIFT, 145}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, REDUCE, 58}, },
			{{-1, ERROR, 306}, {2, SHIFT, 145}, {6, SHIFT, 305}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 56}, {2, SHIFT, 145}, {6, SHIFT, 346}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, REDUCE, 52}, {2, SHIFT, 145}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, },
			{{-1, REDUCE, 67}, },
			{{-1, ERROR, 311}, {36, SHIFT, 347}, },
			{{-1, REDUCE, 55}, },
			{{-1, ERROR, 313}, {40, SHIFT, 348}, },
			{{-1, ERROR, 314}, {40, SHIFT, 349}, },
			{{-1, REDUCE, 101}, },
			{{-1, REDUCE, 173}, },
			{{-1, ERROR, 317}, {51, SHIFT, 350}, },
			{{-1, REDUCE, 166}, },
			{{-1, ERROR, 319}, {24, SHIFT, 351}, },
			{{-1, REDUCE, 170}, },
			{{-1, ERROR, 321}, {2, SHIFT, 64}, {30, SHIFT, 65}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, },
			{{-1, REDUCE, 93}, },
			{{-1, ERROR, 323}, {36, SHIFT, 353}, },
			{{-1, REDUCE, 158}, },
			{{-1, REDUCE, 240}, },
			{{-1, ERROR, 326}, {40, SHIFT, 354}, },
			{{-1, REDUCE, 143}, {4, SHIFT, 32}, {27, SHIFT, 35}, {30, SHIFT, 36}, {39, SHIFT, 20}, },
			{{-1, ERROR, 328}, {52, SHIFT, 355}, },
			{{-1, ERROR, 329}, {40, SHIFT, 356}, },
			{{-1, REDUCE, 177}, },
			{{-1, REDUCE, 178}, },
			{{-1, ERROR, 332}, {39, SHIFT, 357}, },
			{{-1, ERROR, 333}, {30, SHIFT, 358}, },
			{{-1, ERROR, 334}, {30, SHIFT, 117}, },
			{{-1, REDUCE, 201}, },
			{{-1, REDUCE, 251}, },
			{{-1, REDUCE, 203}, {54, SHIFT, 360}, },
			{{-1, ERROR, 338}, {17, SHIFT, 334}, {30, SHIFT, 284}, {40, SHIFT, 361}, },
			{{-1, REDUCE, 194}, },
			{{-1, REDUCE, 250}, },
			{{-1, REDUCE, 190}, },
			{{-1, REDUCE, 214}, },
			{{-1, REDUCE, 256}, },
			{{-1, ERROR, 344}, {2, SHIFT, 145}, {30, SHIFT, 148}, {33, SHIFT, 149}, {34, SHIFT, 224}, {35, SHIFT, 151}, {37, SHIFT, 225}, {38, SHIFT, 226}, {39, SHIFT, 154}, {40, SHIFT, 363}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 57}, },
			{{-1, ERROR, 347}, {54, SHIFT, 364}, {55, SHIFT, 365}, },
			{{-1, ERROR, 348}, {52, SHIFT, 366}, },
			{{-1, ERROR, 349}, {52, SHIFT, 367}, },
			{{-1, REDUCE, 174}, },
			{{-1, ERROR, 351}, {2, SHIFT, 64}, {30, SHIFT, 65}, {33, SHIFT, 66}, {34, SHIFT, 67}, {35, SHIFT, 68}, {37, SHIFT, 69}, {38, SHIFT, 70}, },
			{{-1, ERROR, 352}, {40, SHIFT, 369}, },
			{{-1, ERROR, 353}, {54, SHIFT, 370}, {55, SHIFT, 371}, },
			{{-1, REDUCE, 152}, },
			{{-1, REDUCE, 179}, },
			{{-1, ERROR, 356}, {52, SHIFT, 372}, },
			{{-1, ERROR, 357}, {17, SHIFT, 282}, {18, SHIFT, 283}, {30, SHIFT, 284}, {39, SHIFT, 285}, {40, SHIFT, 373}, },
			{{-1, REDUCE, 208}, },
			{{-1, ERROR, 359}, {39, SHIFT, 375}, },
			{{-1, REDUCE, 204}, },
			{{-1, REDUCE, 202}, },
			{{-1, REDUCE, 252}, },
			{{-1, ERROR, 363}, {44, SHIFT, 376}, {50, SHIFT, 377}, {53, SHIFT, 378}, },
			{{-1, ERROR, 364}, {40, SHIFT, 379}, },
			{{-1, ERROR, 365}, {36, SHIFT, 380}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 122}, },
			{{-1, ERROR, 368}, {40, SHIFT, 381}, },
			{{-1, ERROR, 369}, {44, SHIFT, 260}, {50, SHIFT, 261}, {53, SHIFT, 263}, },
			{{-1, ERROR, 370}, {40, SHIFT, 383}, },
			{{-1, ERROR, 371}, {36, SHIFT, 384}, },
			{{-1, REDUCE, 180}, },
			{{-1, REDUCE, 199}, },
			{{-1, ERROR, 374}, {17, SHIFT, 282}, {18, SHIFT, 283}, {30, SHIFT, 284}, {39, SHIFT, 285}, {40, SHIFT, 385}, },
			{{-1, ERROR, 375}, {17, SHIFT, 282}, {18, SHIFT, 283}, {30, SHIFT, 284}, {39, SHIFT, 285}, {40, SHIFT, 386}, },
			{{-1, ERROR, 376}, {36, SHIFT, 388}, {39, SHIFT, 389}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 71}, },
			{{-1, ERROR, 380}, {40, SHIFT, 390}, },
			{{-1, ERROR, 381}, {44, SHIFT, 260}, {50, SHIFT, 261}, {53, SHIFT, 263}, },
			{{-1, REDUCE, 171}, },
			{{-1, REDUCE, 95}, },
			{{-1, ERROR, 384}, {40, SHIFT, 392}, },
			{{-1, REDUCE, 200}, },
			{{-1, REDUCE, 205}, },
			{{-1, ERROR, 387}, {17, SHIFT, 282}, {18, SHIFT, 283}, {30, SHIFT, 284}, {39, SHIFT, 285}, {40, SHIFT, 393}, },
			{{-1, REDUCE, 68}, },
			{{-1, ERROR, 389}, {36, SHIFT, 394}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 172}, },
			{{-1, REDUCE, 94}, },
			{{-1, REDUCE, 206}, },
			{{-1, ERROR, 394}, {54, SHIFT, 395}, {55, SHIFT, 396}, },
			{{-1, ERROR, 395}, {40, SHIFT, 397}, },
			{{-1, ERROR, 396}, {36, SHIFT, 398}, },
			{{-1, REDUCE, 72}, },
			{{-1, ERROR, 398}, {40, SHIFT, 399}, },
			{{-1, REDUCE, 70}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 3}, },
			{{-1, 10}, },
			{{-1, 21}, {30, 91}, },
			{{-1, 37}, {5, 22}, {30, 22}, },
			{{-1, 162}, {163, 245}, },
			{{-1, 155}, {154, 229}, },
			{{-1, 156}, {231, 302}, },
			{{-1, 307}, {306, 345}, },
			{{-1, 157}, {146, 227}, {147, 228}, {154, 230}, {233, 303}, {234, 304}, {235, 308}, {236, 309}, {301, 344}, {306, 308}, },
			{{-1, 158}, {157, 237}, {227, 237}, {228, 237}, {230, 237}, {303, 237}, {304, 237}, {308, 237}, {309, 237}, {344, 237}, },
			{{-1, 159}, },
			{{-1, 183}, {16, 72}, {17, 75}, {18, 72}, {77, 75}, {137, 72}, {138, 221}, {142, 223}, {181, 258}, {182, 259}, {257, 319}, {321, 352}, {351, 368}, },
			{{-1, 73}, {80, 160}, {154, 160}, {231, 160}, {242, 312}, },
			{{-1, 264}, {258, 320}, },
			{{-1, 265}, {369, 382}, {381, 391}, },
			{{-1, 23}, {31, 94}, {93, 94}, },
			{{-1, 24}, {30, 92}, {31, 95}, {93, 172}, },
			{{-1, 25}, },
			{{-1, 86}, {87, 169}, },
			{{-1, 26}, {249, 315}, },
			{{-1, 27}, },
			{{-1, 28}, {27, 88}, },
			{{-1, 74}, {18, 79}, {137, 220}, },
			{{-1, 139}, {140, 222}, },
			{{-1, 29}, {27, 89}, {28, 90}, {88, 170}, },
			{{-1, 76}, {77, 143}, },
			{{-1, 84}, {92, 171}, {95, 173}, {172, 250}, },
			{{-1, 166}, {167, 248}, },
			{{-1, 11}, {10, 54}, },
			{{-1, 38}, },
			{{-1, 39}, {38, 103}, },
			{{-1, 98}, {34, 100}, {106, 194}, {200, 278}, {201, 279}, {277, 329}, },
			{{-1, 175}, {176, 252}, },
			{{-1, 40}, {38, 104}, {39, 105}, {103, 190}, },
			{{-1, 41}, },
			{{-1, 109}, {110, 196}, },
			{{-1, 42}, {45, 116}, {327, 116}, },
			{{-1, 43}, },
			{{-1, 44}, {43, 111}, },
			{{-1, 184}, },
			{{-1, 268}, {269, 325}, },
			{{-1, 185}, {267, 324}, },
			{{-1, 186}, {188, 270}, {213, 270}, {256, 270}, {291, 270}, {292, 270}, },
			{{-1, 187}, {180, 255}, {188, 271}, {256, 318}, },
			{{-1, 114}, {111, 197}, },
			{{-1, 202}, {203, 280}, },
			{{-1, 115}, {111, 198}, {114, 204}, {197, 276}, },
			{{-1, 107}, {104, 191}, {105, 192}, {190, 273}, },
			{{-1, 12}, {10, 55}, {11, 58}, {54, 128}, },
			{{-1, 48}, },
			{{-1, 122}, {123, 209}, },
			{{-1, 49}, {48, 124}, },
			{{-1, 118}, {120, 207}, },
			{{-1, 119}, {282, 332}, {334, 359}, },
			{{-1, 287}, {289, 340}, {374, 340}, {387, 340}, },
			{{-1, 336}, {338, 362}, },
			{{-1, 288}, {285, 337}, {338, 337}, },
			{{-1, 13}, {10, 56}, {11, 59}, {12, 61}, {54, 129}, {55, 131}, {58, 134}, {128, 215}, },
			{{-1, 51}, {52, 126}, },
			{{-1, 211}, },
			{{-1, 295}, {296, 343}, },
			{{-1, 212}, {294, 342}, },
			{{-1, 30}, },
			{{-1, 31}, {30, 93}, },
			{{-1, 163}, },
			{{-1, 87}, },
			{{-1, 140}, },
			{{-1, 77}, },
			{{-1, 167}, },
			{{-1, 176}, },
			{{-1, 110}, },
			{{-1, 45}, {275, 327}, },
			{{-1, 269}, },
			{{-1, 188}, {125, 213}, {180, 256}, {208, 291}, {210, 292}, {294, 213}, },
			{{-1, 203}, },
			{{-1, 123}, },
			{{-1, 120}, },
			{{-1, 289}, {357, 374}, {375, 387}, },
			{{-1, 338}, },
			{{-1, 52}, },
			{{-1, 296}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'Language'",
			"expecting: identifier",
			"expecting: EOF",
			"expecting: 'Lexer', 'Parser', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: ';'",
			"expecting: 'Context', 'Group', 'Ignored', 'Investigator', 'Parser', 'Priority', 'Token', 'Transformation', 'Tree', identifier, '(', ctrl z, EOF",
			"expecting: 'Context', 'Dangling', 'Inlined', 'Restartable', 'Start', 'Token', 'Transformation', 'Tree', identifier, '(', ctrl z, EOF",
			"expecting: 'Alternative', 'Production', 'Tree', ctrl z, EOF",
			"expecting: identifier, ctrl z, EOF",
			"expecting: 'Parser', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Tree', ctrl z, EOF",
			"expecting: ctrl z, EOF",
			"expecting: 'Any', identifier, epsilon, char, string, dec char, hex char, ';'",
			"expecting: 'Any', 'Context', 'Investigator', 'Parser', 'Transformation', 'Tree', identifier, epsilon, char, string, dec char, hex char, ctrl z, EOF",
			"expecting: '='",
			"expecting: 'Context', 'Group', 'Ignored', 'Investigator', 'Parser', 'Priority', 'Token', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Investigator', 'Parser', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Context', 'Investigator', 'Parser', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Context', 'Ignored', 'Investigator', 'Parser', 'Priority', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Context', 'Investigator', 'Parser', 'Priority', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: identifier, ';'",
			"expecting: 'Context', 'Dangling', 'Inlined', 'Restartable', 'Token', 'Transformation', 'Tree', identifier, '(', ctrl z, EOF",
			"expecting: 'Context', 'Dangling', 'Inlined', 'Token', 'Transformation', 'Tree', identifier, '(', ctrl z, EOF",
			"expecting: 'Inlined', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Context', 'Inlined', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Context', 'Dangling', 'Inlined', 'Investigator', 'Priority', 'Token', 'Transformation', 'Tree', identifier, '(', ctrl z, EOF",
			"expecting: 'Tree', identifier, ctrl z, EOF",
			"expecting: 'Alternative', 'Tree', identifier, ctrl z, EOF",
			"expecting: 'Alternative', 'Tree', ctrl z, EOF",
			"expecting: ':'",
			"expecting: 'Any', 'Dangling', 'Separator', identifier, element name, epsilon, char, string, dec char, hex char, '(', ')', '|', '^', ',', '>', '+', '?', ';', '*'",
			"expecting: ',', ';'",
			"expecting: '>'",
			"expecting: 'Any', 'Longest', 'Shortest', identifier, epsilon, char, string, dec char, hex char, '('",
			"expecting: '|'",
			"expecting: 'Parser', 'Transformation', 'Tree', identifier, ctrl z, EOF",
			"expecting: ')', ',', ';'",
			"expecting: 'Any', 'Dangling', identifier, alternative name, element name, epsilon, char, string, dec char, hex char, '(', '|', ';'",
			"expecting: 'Context', 'Dangling', 'Inlined', 'Investigator', 'Left', 'Right', 'Token', 'Transformation', 'Tree', identifier, '(', ctrl z, EOF",
			"expecting: 'Context', 'Dangling', 'Inlined', 'Investigator', 'Token', 'Transformation', 'Tree', identifier, '(', ctrl z, EOF",
			"expecting: '(', '->', '.'",
			"expecting: '->'",
			"expecting: 'Any', identifier, alternative name, element name, epsilon, char, string, dec char, hex char, '(', '|', ';'",
			"expecting: 'Any', identifier, epsilon, char, string, dec char, hex char",
			"expecting: 'And', 'Any', 'Diff', 'End', 'Look', 'Separator', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', '^', '-', '+', '?', ';', '*'",
			"expecting: 'Any', identifier, epsilon, char, string, dec char, hex char, '('",
			"expecting: 'And', 'Any', 'Diff', 'Look', 'Separator', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', '^', '-', '+', '?', ';', '*', '..'",
			"expecting: '|', ';'",
			"expecting: ')', '|', ';'",
			"expecting: 'And', 'Any', 'Diff', 'Look', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', '-', ';'",
			"expecting: 'And', 'Any', 'Diff', 'End', 'Look', 'Separator', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', '-', ';'",
			"expecting: '..'",
			"expecting: ')', '|'",
			"expecting: '('",
			"expecting: identifier, element name",
			"expecting: 'Any', 'Dangling', identifier, element name, epsilon, char, string, dec char, hex char, '(', '|', ';'",
			"expecting: 'Any', 'Dangling', identifier, element name, epsilon, char, string, dec char, hex char, '(', '|', '^', '+', '?', ';', '*'",
			"expecting: 'New', 'Null', identifier, '(', ';'",
			"expecting: 'Any', identifier, element name, epsilon, char, string, dec char, hex char, '(', ';'",
			"expecting: 'Any', identifier, element name, epsilon, char, string, dec char, hex char, '(', '|', ';'",
			"expecting: 'Any', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', ';'",
			"expecting: 'And', 'Any', 'Diff', 'Look', 'Separator', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', '-'",
			"expecting: 'Any', 'End', 'Not', identifier, epsilon, char, string, dec char, hex char, '('",
			"expecting: number, '('",
			"expecting: char, dec char, hex char",
			"expecting: 'Context', 'Ignored', 'Investigator', 'Parser', 'Priority', 'Token', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: '?'",
			"expecting: 'Separator'",
			"expecting: identifier, ')'",
			"expecting: '(', '->'",
			"expecting: 'New', 'Null', identifier, '(', ')', ';'",
			"expecting: 'New', 'Null', identifier, '(', ')', '.', ';', '...'",
			"expecting: 'New', identifier, ')'",
			"expecting: 'Any', 'End', identifier, epsilon, char, string, dec char, hex char, '('",
			"expecting: 'Any', 'End', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', ';'",
			"expecting: number",
			"expecting: ')'",
			"expecting: 'New', identifier, ')', '...'",
			"expecting: 'Any', identifier, epsilon, char, string, dec char, hex char, '(', ')'",
			"expecting: '...', '..'",
			"expecting: 'New', 'Null', identifier, '(', ')'",
			"expecting: 'New', 'Null', identifier, '(', ')', ';', '...'",
			"expecting: '^', '+', '*'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 6, 7, 8, 2, 9, 10, 11, 12, 3, 1, 13, 14, 13, 15, 1, 5, 15, 16, 17, 18, 18, 19, 20, 18, 5, 16, 1, 21, 21, 1, 15, 15, 22, 23, 24, 25, 23, 1, 26, 23, 27, 28, 29, 11, 15, 8, 8, 2, 10, 11, 12, 2, 11, 12, 2, 12, 2, 30, 31, 31, 31, 31, 31, 31, 31, 20, 32, 31, 4, 33, 14, 14, 19, 4, 34, 35, 1, 36, 9, 1, 18, 18, 20, 18, 18, 5, 17, 16, 16, 17, 37, 23, 4, 22, 4, 38, 1, 23, 24, 24, 21, 10, 1, 25, 25, 26, 1, 39, 40, 23, 23, 41, 27, 42, 27, 42, 28, 28, 11, 43, 8, 2, 11, 12, 2, 12, 2, 2, 12, 2, 2, 13, 44, 32, 32, 20, 44, 14, 19, 45, 46, 46, 45, 45, 47, 45, 47, 47, 34, 48, 49, 50, 51, 45, 52, 1, 53, 53, 54, 54, 36, 36, 30, 18, 18, 9, 17, 9, 1, 37, 37, 23, 22, 55, 56, 46, 44, 57, 4, 48, 56, 48, 56, 54, 24, 10, 10, 10, 4, 30, 25, 40, 23, 54, 1, 1, 39, 39, 23, 1, 58, 27, 59, 28, 60, 4, 48, 60, 2, 12, 2, 2, 2, 16, 4, 32, 32, 4, 45, 45, 45, 61, 61, 53, 62, 34, 5, 46, 46, 63, 46, 51, 64, 51, 51, 51, 65, 53, 15, 53, 1, 1, 36, 66, 9, 37, 37, 67, 1, 48, 56, 44, 57, 68, 64, 56, 56, 56, 56, 56, 26, 38, 48, 48, 56, 48, 1, 10, 10, 23, 23, 69, 4, 4, 39, 70, 1, 71, 72, 73, 27, 71, 71, 58, 28, 59, 60, 8, 43, 48, 48, 2, 16, 14, 45, 46, 49, 61, 61, 49, 74, 49, 75, 61, 51, 76, 49, 77, 77, 18, 48, 67, 48, 68, 56, 44, 56, 76, 48, 48, 77, 23, 4, 77, 39, 39, 54, 1, 1, 71, 73, 78, 73, 27, 71, 28, 48, 48, 79, 49, 49, 80, 4, 4, 48, 44, 77, 80, 23, 23, 4, 81, 82, 54, 73, 71, 73, 83, 77, 76, 5, 36, 77, 83, 77, 76, 23, 71, 81, 81, 64, 51, 51, 51, 77, 83, 56, 56, 77, 71, 73, 81, 51, 76, 51, 56, 56, 73, 80, 77, 76, 51, 77, 51, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
