/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.syntax3.lexer;

import java.io.*;
import org.sablecc.sablecc.syntax3.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 63:
                        {
                            @SuppressWarnings("hiding") Token token = new63(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 64:
                        {
                            @SuppressWarnings("hiding") Token token = new64(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 65:
                        {
                            @SuppressWarnings("hiding") Token token = new65(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 66:
                        {
                            @SuppressWarnings("hiding") Token token = new66(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 67:
                        {
                            @SuppressWarnings("hiding") Token token = new67(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAlternativeKeyword(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAndKeyword(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnyKeyword(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TContextKeyword(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDanglingKeyword(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiffKeyword(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEndKeyword(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGroupKeyword(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgnoredKeyword(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInlinedKeyword(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInvestigatorKeyword(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLanguageKeyword(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLeftKeyword(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLexerKeyword(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLongestKeyword(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLookKeyword(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNotKeyword(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNewKeyword(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNullKeyword(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParserKeyword(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPriorityKeyword(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProductionKeyword(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRestartableKeyword(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRightKeyword(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSeparatorKeyword(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShortestKeyword(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStartKeyword(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTokenKeyword(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTransformationKeyword(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTreeKeyword(line, pos); }
    Token new30(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }
    Token new31(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAlternativeName(text, line, pos); }
    Token new32(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElementName(text, line, pos); }
    Token new33(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEpsilon(text, line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TChar(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(text, line, pos); }
    Token new36(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new37(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDecChar(text, line, pos); }
    Token new38(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THexChar(text, line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssign(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TArrow(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBar(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaret(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TQMark(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThreeDots(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTwoDots(line, pos); }
    Token new56(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new57(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLineComment(text, line, pos); }
    Token new58(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLongComment(text, line, pos); }
    Token new59(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCtrlZ(text, line, pos); }
    Token new60(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInvalidKeyword(text, line, pos); }
    Token new61(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInvalidNumber(text, line, pos); }
    Token new62(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInvalidNormalIdentifier(text, line, pos); }
    Token new63(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInvalidRichIdentifier(text, line, pos); }
    Token new64(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInvalidString(text, line, pos); }
    Token new65(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInvalidHexChar(text, line, pos); }
    Token new66(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInvalidDecChar(text, line, pos); }
    Token new67(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInvalidCharacter(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{0, 8, 1}, {9, 13, 2}, {14, 25, 1}, {26, 26, 3}, {27, 31, 1}, {32, 32, 2}, {33, 34, 1}, {35, 35, 4}, {36, 38, 1}, {39, 39, 5}, {40, 40, 6}, {41, 41, 7}, {42, 42, 8}, {43, 43, 9}, {44, 44, 10}, {45, 45, 11}, {46, 46, 12}, {47, 47, 13}, {48, 57, 14}, {58, 58, 15}, {59, 59, 16}, {60, 60, 17}, {61, 61, 18}, {62, 62, 19}, {63, 63, 20}, {64, 64, 1}, {65, 65, 21}, {66, 66, 22}, {67, 67, 23}, {68, 68, 24}, {69, 69, 25}, {70, 70, 22}, {71, 71, 26}, {72, 72, 22}, {73, 73, 27}, {74, 75, 22}, {76, 76, 28}, {77, 77, 22}, {78, 78, 29}, {79, 79, 22}, {80, 80, 30}, {81, 81, 22}, {82, 82, 31}, {83, 83, 32}, {84, 84, 33}, {85, 90, 22}, {91, 91, 34}, {92, 93, 1}, {94, 94, 35}, {95, 95, 36}, {96, 96, 1}, {97, 122, 37}, {123, 123, 38}, {124, 124, 39}, {125, 65535, 1}, },
            {},
            {{9, 13, 40}, {32, 32, 40}, },
            {},
            {{43, 43, 41}, {45, 45, 41}, {48, 57, 42}, {65, 87, 43}, {88, 88, 44}, {89, 90, 43}, {95, 95, 43}, {97, 119, 43}, {120, 120, 44}, {121, 122, 43}, },
            {{9, 9, 45}, {32, 38, 45}, {39, 39, 46}, {40, 91, 45}, {92, 92, 47}, {93, 126, 45}, },
            {},
            {},
            {},
            {},
            {},
            {{62, 62, 48}, },
            {{46, 46, 49}, },
            {{42, 42, 50}, {47, 47, 51}, },
            {{48, 57, 52}, {65, 90, 53}, {95, 95, 53}, {97, 122, 53}, },
            {},
            {},
            {{48, 57, 54}, {65, 90, 55}, {95, 95, 54}, {97, 122, 55}, },
            {},
            {},
            {},
            {{48, 57, 56}, {65, 90, 56}, {95, 95, 56}, {97, 107, 56}, {108, 108, 57}, {109, 109, 56}, {110, 110, 58}, {111, 122, 56}, },
            {{48, 95, -23}, {97, 122, 56}, },
            {{48, 95, -23}, {97, 110, 56}, {111, 111, 59}, {112, 122, 56}, },
            {{48, 95, -23}, {97, 97, 60}, {98, 104, 56}, {105, 105, 61}, {106, 122, 56}, },
            {{48, 95, -23}, {97, 109, 56}, {110, 110, 62}, {111, 122, 56}, },
            {{48, 95, -23}, {97, 113, 56}, {114, 114, 63}, {115, 122, 56}, },
            {{48, 95, -23}, {97, 102, 56}, {103, 103, 64}, {104, 109, 56}, {110, 110, 65}, {111, 122, 56}, },
            {{48, 95, -23}, {97, 97, 66}, {98, 100, 56}, {101, 101, 67}, {102, 110, 56}, {111, 111, 68}, {112, 122, 56}, },
            {{48, 95, -23}, {97, 100, 56}, {101, 101, 69}, {102, 110, 56}, {111, 111, 70}, {112, 116, 56}, {117, 117, 71}, {118, 122, 56}, },
            {{48, 95, -23}, {97, 97, 72}, {98, 113, 56}, {114, 114, 73}, {115, 122, 56}, },
            {{48, 100, -31}, {101, 101, 74}, {102, 104, 56}, {105, 105, 75}, {106, 122, 56}, },
            {{48, 100, -31}, {101, 101, 76}, {102, 103, 56}, {104, 104, 77}, {105, 115, 56}, {116, 116, 78}, {117, 122, 56}, },
            {{48, 110, -25}, {111, 111, 79}, {112, 113, 56}, {114, 114, 80}, {115, 122, 56}, },
            {{60, 60, 81}, {97, 122, 82}, },
            {},
            {{48, 57, 83}, {65, 90, 83}, {95, 95, 83}, {97, 122, 83}, },
            {{48, 57, 84}, {65, 90, 83}, {95, 95, 85}, {97, 122, 86}, },
            {{60, 60, 87}, {97, 122, 88}, },
            {},
            {{9, 32, -4}, },
            {{48, 57, 42}, {65, 90, 43}, {95, 95, 43}, {97, 122, 43}, },
            {{48, 122, -43}, },
            {{48, 57, 43}, {65, 122, -43}, },
            {{43, 43, 89}, {45, 45, 89}, {48, 57, 90}, {65, 70, 90}, {71, 90, 91}, {95, 95, 91}, {97, 102, 90}, {103, 122, 91}, },
            {{9, 9, 92}, {32, 38, 92}, {39, 39, 93}, {40, 91, 92}, {92, 92, 94}, {93, 126, 92}, },
            {},
            {{39, 39, 95}, {92, 92, 95}, },
            {},
            {{46, 46, 96}, },
            {{9, 13, 97}, {32, 41, 97}, {42, 42, 98}, {43, 126, 97}, },
            {{9, 9, 99}, {10, 12, 100}, {13, 13, 101}, {32, 126, 99}, },
            {{48, 122, -16}, },
            {{48, 57, 53}, {65, 122, -16}, },
            {{48, 57, 54}, {65, 90, 54}, {95, 95, 54}, {97, 122, 54}, },
            {{48, 57, 102}, {62, 62, 103}, {65, 90, 102}, {95, 95, 54}, {97, 122, 102}, },
            {{48, 122, -24}, },
            {{48, 95, -23}, {97, 115, 56}, {116, 116, 104}, {117, 122, 56}, },
            {{48, 95, -23}, {97, 99, 56}, {100, 100, 105}, {101, 120, 56}, {121, 121, 106}, {122, 122, 56}, },
            {{48, 109, -27}, {110, 110, 107}, {111, 122, 56}, },
            {{48, 109, -27}, {110, 110, 108}, {111, 122, 56}, },
            {{48, 95, -23}, {97, 101, 56}, {102, 102, 109}, {103, 122, 56}, },
            {{48, 99, -60}, {100, 100, 110}, {101, 122, 56}, },
            {{48, 110, -25}, {111, 111, 111}, {112, 122, 56}, },
            {{48, 109, -27}, {110, 110, 112}, {111, 122, 56}, },
            {{48, 107, -23}, {108, 108, 113}, {109, 117, 56}, {118, 118, 114}, {119, 122, 56}, },
            {{48, 109, -27}, {110, 110, 115}, {111, 122, 56}, },
            {{48, 101, -63}, {102, 102, 116}, {103, 119, 56}, {120, 120, 117}, {121, 122, 56}, },
            {{48, 109, -27}, {110, 110, 118}, {111, 111, 119}, {112, 122, 56}, },
            {{48, 95, -23}, {97, 118, 56}, {119, 119, 120}, {120, 122, 56}, },
            {{48, 115, -59}, {116, 116, 121}, {117, 122, 56}, },
            {{48, 107, -23}, {108, 108, 122}, {109, 122, 56}, },
            {{48, 113, -28}, {114, 114, 123}, {115, 122, 56}, },
            {{48, 95, -23}, {97, 104, 56}, {105, 105, 124}, {106, 110, 56}, {111, 111, 125}, {112, 122, 56}, },
            {{48, 95, -23}, {97, 114, 56}, {115, 115, 126}, {116, 122, 56}, },
            {{48, 102, -29}, {103, 103, 127}, {104, 122, 56}, },
            {{48, 95, -23}, {97, 111, 56}, {112, 112, 128}, {113, 122, 56}, },
            {{48, 110, -25}, {111, 111, 129}, {112, 122, 56}, },
            {{48, 95, -23}, {97, 97, 130}, {98, 122, 56}, },
            {{48, 95, -23}, {97, 106, 56}, {107, 107, 131}, {108, 122, 56}, },
            {{48, 95, -23}, {97, 97, 132}, {98, 100, 56}, {101, 101, 133}, {102, 122, 56}, },
            {{65, 90, 134}, {97, 122, 134}, },
            {{48, 57, 135}, {58, 58, 136}, {95, 95, 137}, {97, 122, 138}, },
            {{48, 122, -38}, },
            {{48, 122, -39}, },
            {{48, 95, -38}, {97, 122, 139}, },
            {{48, 122, -39}, },
            {{65, 90, 140}, {97, 122, 140}, },
            {{48, 57, 141}, {58, 58, 142}, {95, 95, 143}, {97, 122, 144}, },
            {{48, 57, 145}, {65, 70, 145}, {71, 90, 146}, {95, 95, 146}, {97, 102, 145}, {103, 122, 146}, },
            {{48, 122, -46}, },
            {{48, 57, 91}, {65, 90, 91}, {95, 95, 91}, {97, 122, 91}, },
            {{9, 38, -47}, {39, 39, 147}, {40, 126, -47}, },
            {},
            {{39, 39, 148}, {92, 92, 148}, },
            {{9, 126, -47}, },
            {},
            {{9, 126, -52}, },
            {{9, 13, 149}, {32, 41, 149}, {42, 42, 98}, {43, 46, 149}, {47, 47, 150}, {48, 126, 149}, },
            {{9, 126, -53}, },
            {},
            {{10, 10, 151}, },
            {{48, 122, -57}, },
            {},
            {{48, 100, -31}, {101, 101, 152}, {102, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 115, -59}, {116, 116, 153}, {117, 122, 56}, },
            {{48, 102, -29}, {103, 103, 154}, {104, 122, 56}, },
            {{48, 101, -63}, {102, 102, 155}, {103, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 95, -23}, {97, 116, 56}, {117, 117, 156}, {118, 122, 56}, },
            {{48, 110, -25}, {111, 111, 157}, {112, 122, 56}, },
            {{48, 104, -75}, {105, 105, 158}, {106, 122, 56}, },
            {{48, 100, -31}, {101, 101, 159}, {102, 122, 56}, },
            {{48, 102, -29}, {103, 103, 160}, {104, 122, 56}, },
            {{48, 115, -59}, {116, 116, 161}, {117, 122, 56}, },
            {{48, 100, -31}, {101, 101, 162}, {102, 122, 56}, },
            {{48, 102, -29}, {103, 103, 163}, {104, 122, 56}, },
            {{48, 106, -81}, {107, 107, 164}, {108, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 107, -23}, {108, 108, 165}, {109, 122, 56}, },
            {{48, 114, -76}, {115, 115, 166}, {116, 122, 56}, },
            {{48, 110, -25}, {111, 111, 167}, {112, 122, 56}, },
            {{48, 99, -60}, {100, 100, 168}, {101, 122, 56}, },
            {{48, 115, -59}, {116, 116, 169}, {117, 122, 56}, },
            {{48, 95, -23}, {97, 103, 56}, {104, 104, 170}, {105, 122, 56}, },
            {{48, 95, -23}, {97, 97, 171}, {98, 122, 56}, },
            {{48, 113, -28}, {114, 114, 172}, {115, 122, 56}, },
            {{48, 113, -28}, {114, 114, 173}, {115, 122, 56}, },
            {{48, 100, -31}, {101, 101, 174}, {102, 122, 56}, },
            {{48, 109, -27}, {110, 110, 175}, {111, 122, 56}, },
            {{48, 100, -31}, {101, 101, 176}, {102, 122, 56}, },
            {{48, 57, 177}, {62, 62, 178}, {65, 90, 177}, {97, 122, 177}, },
            {{48, 122, -84}, },
            {{93, 93, 179}, },
            {{97, 122, 180}, },
            {{48, 122, -84}, },
            {{48, 57, 181}, {65, 95, -39}, {97, 122, 182}, },
            {{48, 57, 183}, {62, 62, 184}, {65, 90, 183}, {97, 122, 183}, },
            {{48, 122, -90}, },
            {{125, 125, 185}, },
            {{97, 122, 186}, },
            {{48, 122, -90}, },
            {{48, 122, -91}, },
            {{48, 57, 146}, {65, 90, 146}, {95, 95, 146}, {97, 122, 146}, },
            {},
            {{9, 126, -94}, },
            {{9, 13, 187}, {32, 41, 187}, {42, 42, 98}, {43, 126, 187}, },
            {},
            {},
            {{48, 113, -28}, {114, 114, 188}, {115, 122, 56}, },
            {{48, 100, -31}, {101, 101, 189}, {102, 122, 56}, },
            {{48, 107, -23}, {108, 108, 190}, {109, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 111, -78}, {112, 112, 191}, {113, 122, 56}, },
            {{48, 113, -28}, {114, 114, 192}, {115, 122, 56}, },
            {{48, 109, -27}, {110, 110, 193}, {111, 122, 56}, },
            {{48, 114, -76}, {115, 115, 194}, {116, 122, 56}, },
            {{48, 116, -113}, {117, 117, 195}, {118, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 113, -28}, {114, 114, 196}, {115, 122, 56}, },
            {{48, 100, -31}, {101, 101, 197}, {102, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 100, -31}, {101, 101, 198}, {102, 122, 56}, },
            {{48, 113, -28}, {114, 114, 199}, {115, 122, 56}, },
            {{48, 116, -113}, {117, 117, 200}, {118, 122, 56}, },
            {{48, 95, -23}, {97, 97, 201}, {98, 122, 56}, },
            {{48, 115, -59}, {116, 116, 202}, {117, 122, 56}, },
            {{48, 113, -28}, {114, 114, 203}, {115, 122, 56}, },
            {{48, 115, -59}, {116, 116, 204}, {117, 122, 56}, },
            {{48, 115, -59}, {116, 116, 205}, {117, 122, 56}, },
            {{48, 109, -27}, {110, 110, 206}, {111, 122, 56}, },
            {{48, 114, -76}, {115, 115, 207}, {116, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 122, -136}, },
            {{58, 58, 136}, },
            {},
            {{48, 57, 208}, {58, 95, -84}, {97, 122, 209}, },
            {{48, 122, -141}, },
            {{48, 122, -141}, },
            {{48, 122, -142}, },
            {{58, 58, 142}, },
            {},
            {{48, 57, 210}, {58, 95, -90}, {97, 122, 211}, },
            {{9, 126, -151}, },
            {{48, 109, -27}, {110, 110, 212}, {111, 122, 56}, },
            {{48, 95, -23}, {97, 119, 56}, {120, 120, 213}, {121, 122, 56}, },
            {{48, 104, -75}, {105, 105, 214}, {106, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 100, -31}, {101, 101, 215}, {102, 122, 56}, },
            {{48, 100, -31}, {101, 101, 216}, {102, 122, 56}, },
            {{48, 115, -59}, {116, 116, 217}, {117, 122, 56}, },
            {{48, 95, -23}, {97, 97, 218}, {98, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 114, -76}, {115, 115, 219}, {116, 122, 56}, },
            {{48, 113, -28}, {114, 114, 220}, {115, 122, 56}, },
            {{48, 104, -75}, {105, 105, 221}, {106, 122, 56}, },
            {{48, 95, -23}, {97, 98, 56}, {99, 99, 222}, {100, 122, 56}, },
            {{48, 113, -28}, {114, 114, 223}, {115, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 95, -23}, {97, 97, 224}, {98, 122, 56}, },
            {{48, 100, -31}, {101, 101, 225}, {102, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 101, -63}, {102, 102, 226}, {103, 122, 56}, },
            {{48, 122, -182}, },
            {{48, 122, -182}, },
            {{48, 122, -188}, },
            {{48, 122, -188}, },
            {{48, 95, -23}, {97, 97, 227}, {98, 122, 56}, },
            {{48, 115, -59}, {116, 116, 228}, {117, 122, 56}, },
            {{48, 109, -27}, {110, 110, 229}, {111, 122, 56}, },
            {{48, 99, -60}, {100, 100, 230}, {101, 122, 56}, },
            {{48, 99, -60}, {100, 100, 231}, {101, 122, 56}, },
            {{48, 104, -75}, {105, 105, 232}, {106, 122, 56}, },
            {{48, 102, -29}, {103, 103, 233}, {104, 122, 56}, },
            {{48, 115, -59}, {116, 116, 234}, {117, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 115, -59}, {116, 116, 235}, {117, 122, 56}, },
            {{48, 115, -59}, {116, 116, 236}, {117, 122, 56}, },
            {{48, 115, -59}, {116, 116, 237}, {117, 122, 56}, },
            {{48, 115, -59}, {116, 116, 238}, {117, 122, 56}, },
            {{48, 114, -76}, {115, 115, 239}, {116, 122, 56}, },
            {{48, 110, -25}, {111, 111, 240}, {112, 122, 56}, },
            {{48, 115, -59}, {116, 116, 241}, {117, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 102, -29}, {103, 103, 242}, {104, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 102, -29}, {103, 103, 243}, {104, 122, 56}, },
            {{48, 100, -31}, {101, 101, 244}, {102, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 95, -23}, {97, 120, 56}, {121, 121, 245}, {122, 122, 56}, },
            {{48, 104, -75}, {105, 105, 246}, {106, 122, 56}, },
            {{48, 95, -23}, {97, 97, 247}, {98, 122, 56}, },
            {{48, 110, -25}, {111, 111, 248}, {112, 122, 56}, },
            {{48, 115, -59}, {116, 116, 249}, {117, 122, 56}, },
            {{48, 113, -28}, {114, 114, 250}, {115, 122, 56}, },
            {{48, 104, -75}, {105, 105, 251}, {106, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 95, -23}, {97, 97, 252}, {98, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 110, -25}, {111, 111, 253}, {112, 122, 56}, },
            {{48, 95, -23}, {97, 97, 56}, {98, 98, 254}, {99, 122, 56}, },
            {{48, 113, -28}, {114, 114, 255}, {115, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 95, -23}, {97, 108, 56}, {109, 109, 256}, {110, 122, 56}, },
            {{48, 95, -23}, {97, 117, 56}, {118, 118, 257}, {119, 122, 56}, },
            {{48, 115, -59}, {116, 116, 258}, {117, 122, 56}, },
            {{48, 109, -27}, {110, 110, 259}, {111, 122, 56}, },
            {{48, 107, -23}, {108, 108, 260}, {109, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 95, -23}, {97, 97, 261}, {98, 122, 56}, },
            {{48, 100, -31}, {101, 101, 262}, {102, 122, 56}, },
            {{48, 110, -25}, {111, 111, 263}, {112, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 100, -31}, {101, 101, 264}, {102, 122, 56}, },
            {{48, 115, -59}, {116, 116, 265}, {117, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 113, -28}, {114, 114, 266}, {115, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 104, -75}, {105, 105, 267}, {106, 122, 56}, },
            {{48, 122, -24}, },
            {{48, 110, -25}, {111, 111, 268}, {112, 122, 56}, },
            {{48, 109, -27}, {110, 110, 269}, {111, 122, 56}, },
            {{48, 122, -24}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 67, 56, 59, 66, 64, 39, 40, 53, 50, 46, 49, 47, 67, 36, 45, 52, 63, 41, 48, 51, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 67, 44, 62, 30, 67, 43, 56, 66, 37, 66, 65, 64, 33, -1, 42, 55, -1, 57, 36, 61, 63, 63, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, -1, -1, 62, 30, 62, 30, -1, -1, 65, 38, 65, 64, 34, -1, 64, 54, -1, -1, 57, 57, 57, 63, 30, 60, 1, 2, 60, 60, 60, 6, 60, 60, 60, 60, 60, 60, 60, 60, 60, 17, 16, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, -1, 38, 65, 35, 64, -1, 58, 57, 60, 60, 60, 5, 60, 60, 60, 60, 60, 12, 60, 60, 15, 18, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 29, -1, -1, 32, -1, 30, 30, -1, -1, 31, -1, -1, 60, 60, 60, 7, 60, 60, 60, 60, 13, 60, 60, 60, 60, 60, 23, 60, 60, 26, 27, 60, -1, -1, -1, -1, 60, 60, 60, 60, 60, 60, 60, 60, 19, 60, 60, 60, 60, 60, 60, 60, 3, 60, 8, 9, 60, 60, 14, 60, 60, 60, 60, 60, 60, 60, 4, 60, 11, 20, 60, 60, 60, 25, 60, 60, 60, 60, 60, 24, 60, 60, 60, 21, 60, 60, 0, 60, 22, 60, 10, 60, 60, 28, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
