/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.syntax3.node;

import org.sablecc.sablecc.syntax3.analysis.*;

@SuppressWarnings("nls")
public final class AUnitElement extends PElement
{
    private TElementName _elementName_;
    private PUnit _unit_;
    private PUnaryOperator _unaryOperator_;

    public AUnitElement()
    {
        // Constructor
    }

    public AUnitElement(
        @SuppressWarnings("hiding") TElementName _elementName_,
        @SuppressWarnings("hiding") PUnit _unit_,
        @SuppressWarnings("hiding") PUnaryOperator _unaryOperator_)
    {
        // Constructor
        setElementName(_elementName_);

        setUnit(_unit_);

        setUnaryOperator(_unaryOperator_);

    }

    @Override
    public Object clone()
    {
        return new AUnitElement(
            cloneNode(this._elementName_),
            cloneNode(this._unit_),
            cloneNode(this._unaryOperator_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUnitElement(this);
    }

    public TElementName getElementName()
    {
        return this._elementName_;
    }

    public void setElementName(TElementName node)
    {
        if(this._elementName_ != null)
        {
            this._elementName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elementName_ = node;
    }

    public PUnit getUnit()
    {
        return this._unit_;
    }

    public void setUnit(PUnit node)
    {
        if(this._unit_ != null)
        {
            this._unit_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._unit_ = node;
    }

    public PUnaryOperator getUnaryOperator()
    {
        return this._unaryOperator_;
    }

    public void setUnaryOperator(PUnaryOperator node)
    {
        if(this._unaryOperator_ != null)
        {
            this._unaryOperator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._unaryOperator_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._elementName_)
            + toString(this._unit_)
            + toString(this._unaryOperator_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._elementName_ == child)
        {
            this._elementName_ = null;
            return;
        }

        if(this._unit_ == child)
        {
            this._unit_ = null;
            return;
        }

        if(this._unaryOperator_ == child)
        {
            this._unaryOperator_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._elementName_ == oldChild)
        {
            setElementName((TElementName) newChild);
            return;
        }

        if(this._unit_ == oldChild)
        {
            setUnit((PUnit) newChild);
            return;
        }

        if(this._unaryOperator_ == oldChild)
        {
            setUnaryOperator((PUnaryOperator) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
