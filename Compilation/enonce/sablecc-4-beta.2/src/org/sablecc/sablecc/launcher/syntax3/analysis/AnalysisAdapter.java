/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.launcher.syntax3.analysis;

import java.util.*;
import org.sablecc.sablecc.launcher.syntax3.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAShortOptionsArgument(AShortOptionsArgument node)
    {
        defaultCase(node);
    }

    public void caseALongOptionArgument(ALongOptionArgument node)
    {
        defaultCase(node);
    }

    public void caseAPlainArgument(APlainArgument node)
    {
        defaultCase(node);
    }

    public void caseAShortOption(AShortOption node)
    {
        defaultCase(node);
    }

    public void caseALongOption(ALongOption node)
    {
        defaultCase(node);
    }

    public void caseAOperand(AOperand node)
    {
        defaultCase(node);
    }

    public void caseTHyphen(THyphen node)
    {
        defaultCase(node);
    }

    public void caseTDoubleHyphen(TDoubleHyphen node)
    {
        defaultCase(node);
    }

    public void caseTText(TText node)
    {
        defaultCase(node);
    }

    public void caseTShortName(TShortName node)
    {
        defaultCase(node);
    }

    public void caseTLongName(TLongName node)
    {
        defaultCase(node);
    }

    public void caseTAssign(TAssign node)
    {
        defaultCase(node);
    }

    public void caseTOperandText(TOperandText node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
