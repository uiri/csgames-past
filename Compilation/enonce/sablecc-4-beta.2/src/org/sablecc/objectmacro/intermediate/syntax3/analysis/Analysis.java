/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.objectmacro.intermediate.syntax3.analysis;

import org.sablecc.objectmacro.intermediate.syntax3.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAIntermediateRepresentation(AIntermediateRepresentation node);
    void caseAText(AText node);
    void caseAMacro(AMacro node);
    void caseAParamRef(AParamRef node);
    void caseAExpandedMacro(AExpandedMacro node);
    void caseAStringTextPart(AStringTextPart node);
    void caseAEolTextPart(AEolTextPart node);
    void caseAParamInsertTextPart(AParamInsertTextPart node);
    void caseATextInsertTextPart(ATextInsertTextPart node);
    void caseAStringMacroPart(AStringMacroPart node);
    void caseAEolMacroPart(AEolMacroPart node);
    void caseAParamInsertMacroPart(AParamInsertMacroPart node);
    void caseATextInsertMacroPart(ATextInsertMacroPart node);
    void caseAExpandInsertMacroPart(AExpandInsertMacroPart node);
    void caseAExpandInsert(AExpandInsert node);
    void caseATextInsert(ATextInsert node);
    void caseAInlineTextValue(AInlineTextValue node);
    void caseAParamInsertValue(AParamInsertValue node);
    void caseATextInsertValue(ATextInsertValue node);
    void caseAStringInlineText(AStringInlineText node);
    void caseAEolInlineText(AEolInlineText node);
    void caseATrueBoolean(ATrueBoolean node);
    void caseAFalseBoolean(AFalseBoolean node);

    void caseTAfterLastKeyword(TAfterLastKeyword node);
    void caseTAfterManyKeyword(TAfterManyKeyword node);
    void caseTAfterOneKeyword(TAfterOneKeyword node);
    void caseTAncestorRefKeyword(TAncestorRefKeyword node);
    void caseTArgKeyword(TArgKeyword node);
    void caseTBeforeFirstKeyword(TBeforeFirstKeyword node);
    void caseTBeforeManyKeyword(TBeforeManyKeyword node);
    void caseTBeforeOneKeyword(TBeforeOneKeyword node);
    void caseTContextNameKeyword(TContextNameKeyword node);
    void caseTEolKeyword(TEolKeyword node);
    void caseTExpandKeyword(TExpandKeyword node);
    void caseTExpandInsertKeyword(TExpandInsertKeyword node);
    void caseTExpandedMacroKeyword(TExpandedMacroKeyword node);
    void caseTFalseKeyword(TFalseKeyword node);
    void caseTIsPublicKeyword(TIsPublicKeyword node);
    void caseTMacroKeyword(TMacroKeyword node);
    void caseTNameKeyword(TNameKeyword node);
    void caseTNoneKeyword(TNoneKeyword node);
    void caseTParamKeyword(TParamKeyword node);
    void caseTParamInsertKeyword(TParamInsertKeyword node);
    void caseTParamRefKeyword(TParamRefKeyword node);
    void caseTSelfRefKeyword(TSelfRefKeyword node);
    void caseTSeparatorKeyword(TSeparatorKeyword node);
    void caseTTextKeyword(TTextKeyword node);
    void caseTTextInsertKeyword(TTextInsertKeyword node);
    void caseTTrueKeyword(TTrueKeyword node);
    void caseTAssign(TAssign node);
    void caseTComma(TComma node);
    void caseTSemicolon(TSemicolon node);
    void caseTLBrace(TLBrace node);
    void caseTRBrace(TRBrace node);
    void caseTString(TString node);
    void caseTBlank(TBlank node);
    void caseTInvalidCharacter(TInvalidCharacter node);
    void caseEOF(EOF node);
}
