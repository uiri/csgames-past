/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.objectmacro.syntax3.parser;

import org.sablecc.objectmacro.syntax3.lexer.*;
import org.sablecc.objectmacro.syntax3.node.*;
import org.sablecc.objectmacro.syntax3.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AAsourcefile1SourceFile */
		    {
			ArrayList list = new0();
			push(goTo(0), list);
		    }
		    break;
                    case 1: /* reduce AAsourcefile2SourceFile */
		    {
			ArrayList list = new1();
			push(goTo(0), list);
		    }
		    break;
                    case 2: /* reduce AAsourcefile3SourceFile */
		    {
			ArrayList list = new2();
			push(goTo(0), list);
		    }
		    break;
                    case 3: /* reduce AAsourcefile4SourceFile */
		    {
			ArrayList list = new3();
			push(goTo(0), list);
		    }
		    break;
                    case 4: /* reduce AShortCommentSourceFilePart */
		    {
			ArrayList list = new4();
			push(goTo(1), list);
		    }
		    break;
                    case 5: /* reduce ALongCommentSourceFilePart */
		    {
			ArrayList list = new5();
			push(goTo(1), list);
		    }
		    break;
                    case 6: /* reduce AMacroSourceFilePart */
		    {
			ArrayList list = new6();
			push(goTo(1), list);
		    }
		    break;
                    case 7: /* reduce ATextBlockSourceFilePart */
		    {
			ArrayList list = new7();
			push(goTo(1), list);
		    }
		    break;
                    case 8: /* reduce AAshortcomment1ShortComment */
		    {
			ArrayList list = new8();
			push(goTo(2), list);
		    }
		    break;
                    case 9: /* reduce AAshortcomment2ShortComment */
		    {
			ArrayList list = new9();
			push(goTo(2), list);
		    }
		    break;
                    case 10: /* reduce AAlongcomment1LongComment */
		    {
			ArrayList list = new10();
			push(goTo(3), list);
		    }
		    break;
                    case 11: /* reduce AAlongcomment2LongComment */
		    {
			ArrayList list = new11();
			push(goTo(3), list);
		    }
		    break;
                    case 12: /* reduce ATextLongCommentPart */
		    {
			ArrayList list = new12();
			push(goTo(4), list);
		    }
		    break;
                    case 13: /* reduce ANestedCommentLongCommentPart */
		    {
			ArrayList list = new13();
			push(goTo(4), list);
		    }
		    break;
                    case 14: /* reduce AMacro */
		    {
			ArrayList list = new14();
			push(goTo(5), list);
		    }
		    break;
                    case 15: /* reduce AAmacrohead1MacroHead */
		    {
			ArrayList list = new15();
			push(goTo(6), list);
		    }
		    break;
                    case 16: /* reduce AAmacrohead2MacroHead */
		    {
			ArrayList list = new16();
			push(goTo(6), list);
		    }
		    break;
                    case 17: /* reduce AAmacrobody1MacroBody */
		    {
			ArrayList list = new17();
			push(goTo(7), list);
		    }
		    break;
                    case 18: /* reduce AAmacrobody2MacroBody */
		    {
			ArrayList list = new18();
			push(goTo(7), list);
		    }
		    break;
                    case 19: /* reduce AShortCommentMacroBodyPart */
		    {
			ArrayList list = new19();
			push(goTo(8), list);
		    }
		    break;
                    case 20: /* reduce ALongCommentMacroBodyPart */
		    {
			ArrayList list = new20();
			push(goTo(8), list);
		    }
		    break;
                    case 21: /* reduce ANoEolMacroBodyPart */
		    {
			ArrayList list = new21();
			push(goTo(8), list);
		    }
		    break;
                    case 22: /* reduce ATextMacroBodyPart */
		    {
			ArrayList list = new22();
			push(goTo(8), list);
		    }
		    break;
                    case 23: /* reduce AEolMacroBodyPart */
		    {
			ArrayList list = new23();
			push(goTo(8), list);
		    }
		    break;
                    case 24: /* reduce AEscapeMacroBodyPart */
		    {
			ArrayList list = new24();
			push(goTo(8), list);
		    }
		    break;
                    case 25: /* reduce AVarMacroBodyPart */
		    {
			ArrayList list = new25();
			push(goTo(8), list);
		    }
		    break;
                    case 26: /* reduce AExpandMacroBodyPart */
		    {
			ArrayList list = new26();
			push(goTo(8), list);
		    }
		    break;
                    case 27: /* reduce AMacroMacroBodyPart */
		    {
			ArrayList list = new27();
			push(goTo(8), list);
		    }
		    break;
                    case 28: /* reduce ATextInsertMacroBodyPart */
		    {
			ArrayList list = new28();
			push(goTo(8), list);
		    }
		    break;
                    case 29: /* reduce ATextBlockMacroBodyPart */
		    {
			ArrayList list = new29();
			push(goTo(8), list);
		    }
		    break;
                    case 30: /* reduce AMacroTail */
		    {
			ArrayList list = new30();
			push(goTo(9), list);
		    }
		    break;
                    case 31: /* reduce ATextBlock */
		    {
			ArrayList list = new31();
			push(goTo(10), list);
		    }
		    break;
                    case 32: /* reduce AAtextblockhead1TextBlockHead */
		    {
			ArrayList list = new32();
			push(goTo(11), list);
		    }
		    break;
                    case 33: /* reduce AAtextblockhead2TextBlockHead */
		    {
			ArrayList list = new33();
			push(goTo(11), list);
		    }
		    break;
                    case 34: /* reduce AAtextblockbody1TextBlockBody */
		    {
			ArrayList list = new34();
			push(goTo(12), list);
		    }
		    break;
                    case 35: /* reduce AAtextblockbody2TextBlockBody */
		    {
			ArrayList list = new35();
			push(goTo(12), list);
		    }
		    break;
                    case 36: /* reduce AShortCommentTextBlockBodyPart */
		    {
			ArrayList list = new36();
			push(goTo(13), list);
		    }
		    break;
                    case 37: /* reduce ALongCommentTextBlockBodyPart */
		    {
			ArrayList list = new37();
			push(goTo(13), list);
		    }
		    break;
                    case 38: /* reduce ANoEolTextBlockBodyPart */
		    {
			ArrayList list = new38();
			push(goTo(13), list);
		    }
		    break;
                    case 39: /* reduce ATextTextBlockBodyPart */
		    {
			ArrayList list = new39();
			push(goTo(13), list);
		    }
		    break;
                    case 40: /* reduce AEolTextBlockBodyPart */
		    {
			ArrayList list = new40();
			push(goTo(13), list);
		    }
		    break;
                    case 41: /* reduce AEscapeTextBlockBodyPart */
		    {
			ArrayList list = new41();
			push(goTo(13), list);
		    }
		    break;
                    case 42: /* reduce AVarTextBlockBodyPart */
		    {
			ArrayList list = new42();
			push(goTo(13), list);
		    }
		    break;
                    case 43: /* reduce ATextInsertTextBlockBodyPart */
		    {
			ArrayList list = new43();
			push(goTo(13), list);
		    }
		    break;
                    case 44: /* reduce ATextBlockTextBlockBodyPart */
		    {
			ArrayList list = new44();
			push(goTo(13), list);
		    }
		    break;
                    case 45: /* reduce ATextBlockTail */
		    {
			ArrayList list = new45();
			push(goTo(14), list);
		    }
		    break;
                    case 46: /* reduce AAparamlist1ParamList */
		    {
			ArrayList list = new46();
			push(goTo(15), list);
		    }
		    break;
                    case 47: /* reduce AAparamlist2ParamList */
		    {
			ArrayList list = new47();
			push(goTo(15), list);
		    }
		    break;
                    case 48: /* reduce AAdditionalParam */
		    {
			ArrayList list = new48();
			push(goTo(16), list);
		    }
		    break;
                    case 49: /* reduce AParam */
		    {
			ArrayList list = new49();
			push(goTo(17), list);
		    }
		    break;
                    case 50: /* reduce AAexpand1$Amacroreferencelist11Expand */
		    {
			ArrayList list = new50();
			push(goTo(18), list);
		    }
		    break;
                    case 51: /* reduce AAexpand1$Amacroreferencelist21Expand */
		    {
			ArrayList list = new51();
			push(goTo(18), list);
		    }
		    break;
                    case 52: /* reduce AAexpand2$Amacroreferencelist11Expand */
		    {
			ArrayList list = new52();
			push(goTo(18), list);
		    }
		    break;
                    case 53: /* reduce AAexpand2$Amacroreferencelist21Expand */
		    {
			ArrayList list = new53();
			push(goTo(18), list);
		    }
		    break;
                    case 54: /* reduce AAdditionalMacroReference */
		    {
			ArrayList list = new54();
			push(goTo(19), list);
		    }
		    break;
                    case 55: /* reduce AOption */
		    {
			ArrayList list = new55();
			push(goTo(20), list);
		    }
		    break;
                    case 56: /* reduce AMacroReference */
		    {
			ArrayList list = new56();
			push(goTo(21), list);
		    }
		    break;
                    case 57: /* reduce ATextInsert */
		    {
			ArrayList list = new57();
			push(goTo(22), list);
		    }
		    break;
                    case 58: /* reduce AAtextblockreference1TextBlockReference */
		    {
			ArrayList list = new58();
			push(goTo(23), list);
		    }
		    break;
                    case 59: /* reduce AAtextblockreference2TextBlockReference */
		    {
			ArrayList list = new59();
			push(goTo(23), list);
		    }
		    break;
                    case 60: /* reduce AAarglist1ArgList */
		    {
			ArrayList list = new60();
			push(goTo(24), list);
		    }
		    break;
                    case 61: /* reduce AAarglist2ArgList */
		    {
			ArrayList list = new61();
			push(goTo(24), list);
		    }
		    break;
                    case 62: /* reduce AAdditionalStaticValue */
		    {
			ArrayList list = new62();
			push(goTo(25), list);
		    }
		    break;
                    case 63: /* reduce ATextBlockReferenceStaticValue */
		    {
			ArrayList list = new63();
			push(goTo(26), list);
		    }
		    break;
                    case 64: /* reduce AVarStaticValue */
		    {
			ArrayList list = new64();
			push(goTo(26), list);
		    }
		    break;
                    case 65: /* reduce AStringStaticValue */
		    {
			ArrayList list = new65();
			push(goTo(26), list);
		    }
		    break;
                    case 66: /* reduce AAstring1String */
		    {
			ArrayList list = new66();
			push(goTo(27), list);
		    }
		    break;
                    case 67: /* reduce AAstring2String */
		    {
			ArrayList list = new67();
			push(goTo(27), list);
		    }
		    break;
                    case 68: /* reduce ATextStringPart */
		    {
			ArrayList list = new68();
			push(goTo(28), list);
		    }
		    break;
                    case 69: /* reduce AEscapeStringPart */
		    {
			ArrayList list = new69();
			push(goTo(28), list);
		    }
		    break;
                    case 70: /* reduce ATerminal$SourceFilePart */
		    {
			ArrayList list = new70();
			push(goTo(29), list);
		    }
		    break;
                    case 71: /* reduce ANonTerminal$SourceFilePart */
		    {
			ArrayList list = new71();
			push(goTo(29), list);
		    }
		    break;
                    case 72: /* reduce ATerminal$LongCommentPart */
		    {
			ArrayList list = new72();
			push(goTo(30), list);
		    }
		    break;
                    case 73: /* reduce ANonTerminal$LongCommentPart */
		    {
			ArrayList list = new73();
			push(goTo(30), list);
		    }
		    break;
                    case 74: /* reduce ATerminal$MacroBodyPart */
		    {
			ArrayList list = new74();
			push(goTo(31), list);
		    }
		    break;
                    case 75: /* reduce ANonTerminal$MacroBodyPart */
		    {
			ArrayList list = new75();
			push(goTo(31), list);
		    }
		    break;
                    case 76: /* reduce ATerminal$TextBlockBodyPart */
		    {
			ArrayList list = new76();
			push(goTo(32), list);
		    }
		    break;
                    case 77: /* reduce ANonTerminal$TextBlockBodyPart */
		    {
			ArrayList list = new77();
			push(goTo(32), list);
		    }
		    break;
                    case 78: /* reduce ATerminal$AdditionalParam */
		    {
			ArrayList list = new78();
			push(goTo(33), list);
		    }
		    break;
                    case 79: /* reduce ANonTerminal$AdditionalParam */
		    {
			ArrayList list = new79();
			push(goTo(33), list);
		    }
		    break;
                    case 80: /* reduce ATerminal$Option */
		    {
			ArrayList list = new80();
			push(goTo(34), list);
		    }
		    break;
                    case 81: /* reduce ANonTerminal$Option */
		    {
			ArrayList list = new81();
			push(goTo(34), list);
		    }
		    break;
                    case 82: /* reduce ATerminal$AdditionalMacroReference */
		    {
			ArrayList list = new82();
			push(goTo(35), list);
		    }
		    break;
                    case 83: /* reduce ANonTerminal$AdditionalMacroReference */
		    {
			ArrayList list = new83();
			push(goTo(35), list);
		    }
		    break;
                    case 84: /* reduce ATerminal$AdditionalStaticValue */
		    {
			ArrayList list = new84();
			push(goTo(36), list);
		    }
		    break;
                    case 85: /* reduce ANonTerminal$AdditionalStaticValue */
		    {
			ArrayList list = new85();
			push(goTo(36), list);
		    }
		    break;
                    case 86: /* reduce ATerminal$StringPart */
		    {
			ArrayList list = new86();
			push(goTo(37), list);
		    }
		    break;
                    case 87: /* reduce ANonTerminal$StringPart */
		    {
			ArrayList list = new87();
			push(goTo(37), list);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PSourceFile node1 = (PSourceFile) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AAsourcefile1SourceFile */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        PSourceFile psourcefileNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        psourcefileNode1 = new ASourceFile(listNode2);
        }
	nodeList.add(psourcefileNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce AAsourcefile2SourceFile */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSourceFile psourcefileNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        psourcefileNode1 = new ASourceFile(listNode3);
        }
	nodeList.add(psourcefileNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AAsourcefile3SourceFile */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSourceFile psourcefileNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        psourcefileNode1 = new ASourceFile(listNode2);
        }
	nodeList.add(psourcefileNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AAsourcefile4SourceFile */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSourceFile psourcefileNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        psourcefileNode1 = new ASourceFile(listNode3);
        }
	nodeList.add(psourcefileNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AShortCommentSourceFilePart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        @SuppressWarnings("unused") Object nullNode1 = null;
	nodeList.add(nullNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce ALongCommentSourceFilePart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        @SuppressWarnings("unused") Object nullNode1 = null;
	nodeList.add(nullNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce AMacroSourceFilePart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSourceFilePart psourcefilepartNode1;
        {
            // Block
        PMacro pmacroNode2;
        pmacroNode2 = (PMacro)nodeArrayList1.get(0);

        psourcefilepartNode1 = new AMacroSourceFilePart(pmacroNode2);
        }
	nodeList.add(psourcefilepartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce ATextBlockSourceFilePart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSourceFilePart psourcefilepartNode1;
        {
            // Block
        PTextBlock ptextblockNode2;
        ptextblockNode2 = (PTextBlock)nodeArrayList1.get(0);

        psourcefilepartNode1 = new ATextBlockSourceFilePart(ptextblockNode2);
        }
	nodeList.add(psourcefilepartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce AAshortcomment1ShortComment */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce AAshortcomment2ShortComment */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce AAlongcomment1LongComment */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce AAlongcomment2LongComment */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce ATextLongCommentPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce ANestedCommentLongCommentPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce AMacro */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMacro pmacroNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        TIdentifier tidentifierNode7;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList1.get(1);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList2.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tidentifierNode7 = (TIdentifier)nodeArrayList3.get(0);

        pmacroNode1 = new AMacro(tidentifierNode2, listNode4, listNode6, tidentifierNode7);
        }
	nodeList.add(pmacroNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce AAmacrohead1MacroHead */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TIdentifier tidentifierNode1;
        LinkedList listNode2 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        }
	nodeList.add(tidentifierNode1);
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce AAmacrohead2MacroHead */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TIdentifier tidentifierNode1;
        LinkedList listNode3 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(tidentifierNode1);
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce AAmacrobody1MacroBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce AAmacrobody2MacroBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList1.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce AShortCommentMacroBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        @SuppressWarnings("unused") Object nullNode1 = null;
	nodeList.add(nullNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce ALongCommentMacroBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        @SuppressWarnings("unused") Object nullNode1 = null;
	nodeList.add(nullNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce ANoEolMacroBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        @SuppressWarnings("unused") Object nullNode1 = null;
	nodeList.add(nullNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce ATextMacroBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMacroBodyPart pmacrobodypartNode1;
        {
            // Block
        TText ttextNode2;
        ttextNode2 = (TText)nodeArrayList1.get(0);

        pmacrobodypartNode1 = new ATextMacroBodyPart(ttextNode2);
        }
	nodeList.add(pmacrobodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AEolMacroBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMacroBodyPart pmacrobodypartNode1;
        {
            // Block
        TEol teolNode2;
        teolNode2 = (TEol)nodeArrayList1.get(0);

        pmacrobodypartNode1 = new AEolMacroBodyPart(teolNode2);
        }
	nodeList.add(pmacrobodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce AEscapeMacroBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMacroBodyPart pmacrobodypartNode1;
        {
            // Block
        TEscape tescapeNode2;
        tescapeNode2 = (TEscape)nodeArrayList1.get(0);

        pmacrobodypartNode1 = new AEscapeMacroBodyPart(tescapeNode2);
        }
	nodeList.add(pmacrobodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce AVarMacroBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMacroBodyPart pmacrobodypartNode1;
        {
            // Block
        TVar tvarNode2;
        tvarNode2 = (TVar)nodeArrayList1.get(0);

        pmacrobodypartNode1 = new AVarMacroBodyPart(tvarNode2);
        }
	nodeList.add(pmacrobodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce AExpandMacroBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMacroBodyPart pmacrobodypartNode1;
        {
            // Block
        PExpand pexpandNode2;
        pexpandNode2 = (PExpand)nodeArrayList1.get(0);

        pmacrobodypartNode1 = new AExpandMacroBodyPart(pexpandNode2);
        }
	nodeList.add(pmacrobodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce AMacroMacroBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMacroBodyPart pmacrobodypartNode1;
        {
            // Block
        PMacro pmacroNode2;
        pmacroNode2 = (PMacro)nodeArrayList1.get(0);

        pmacrobodypartNode1 = new AMacroMacroBodyPart(pmacroNode2);
        }
	nodeList.add(pmacrobodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce ATextInsertMacroBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMacroBodyPart pmacrobodypartNode1;
        {
            // Block
        PTextInsert ptextinsertNode2;
        ptextinsertNode2 = (PTextInsert)nodeArrayList1.get(0);

        pmacrobodypartNode1 = new ATextInsertMacroBodyPart(ptextinsertNode2);
        }
	nodeList.add(pmacrobodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce ATextBlockMacroBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMacroBodyPart pmacrobodypartNode1;
        {
            // Block
        PTextBlock ptextblockNode2;
        ptextblockNode2 = (PTextBlock)nodeArrayList1.get(0);

        pmacrobodypartNode1 = new ATextBlockMacroBodyPart(ptextblockNode2);
        }
	nodeList.add(pmacrobodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce AMacroTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
	nodeList.add(tidentifierNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new31() /* reduce ATextBlock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTextBlock ptextblockNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        TIdentifier tidentifierNode7;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList1.get(1);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList2.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tidentifierNode7 = (TIdentifier)nodeArrayList3.get(0);

        ptextblockNode1 = new ATextBlock(tidentifierNode2, listNode4, listNode6, tidentifierNode7);
        }
	nodeList.add(ptextblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new32() /* reduce AAtextblockhead1TextBlockHead */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TIdentifier tidentifierNode1;
        LinkedList listNode2 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        }
	nodeList.add(tidentifierNode1);
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new33() /* reduce AAtextblockhead2TextBlockHead */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TIdentifier tidentifierNode1;
        LinkedList listNode3 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(tidentifierNode1);
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new34() /* reduce AAtextblockbody1TextBlockBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new35() /* reduce AAtextblockbody2TextBlockBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList1.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new36() /* reduce AShortCommentTextBlockBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        @SuppressWarnings("unused") Object nullNode1 = null;
	nodeList.add(nullNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new37() /* reduce ALongCommentTextBlockBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        @SuppressWarnings("unused") Object nullNode1 = null;
	nodeList.add(nullNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new38() /* reduce ANoEolTextBlockBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        @SuppressWarnings("unused") Object nullNode1 = null;
	nodeList.add(nullNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new39() /* reduce ATextTextBlockBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTextBlockBodyPart ptextblockbodypartNode1;
        {
            // Block
        TText ttextNode2;
        ttextNode2 = (TText)nodeArrayList1.get(0);

        ptextblockbodypartNode1 = new ATextTextBlockBodyPart(ttextNode2);
        }
	nodeList.add(ptextblockbodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new40() /* reduce AEolTextBlockBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTextBlockBodyPart ptextblockbodypartNode1;
        {
            // Block
        TEol teolNode2;
        teolNode2 = (TEol)nodeArrayList1.get(0);

        ptextblockbodypartNode1 = new AEolTextBlockBodyPart(teolNode2);
        }
	nodeList.add(ptextblockbodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new41() /* reduce AEscapeTextBlockBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTextBlockBodyPart ptextblockbodypartNode1;
        {
            // Block
        TEscape tescapeNode2;
        tescapeNode2 = (TEscape)nodeArrayList1.get(0);

        ptextblockbodypartNode1 = new AEscapeTextBlockBodyPart(tescapeNode2);
        }
	nodeList.add(ptextblockbodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new42() /* reduce AVarTextBlockBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTextBlockBodyPart ptextblockbodypartNode1;
        {
            // Block
        TVar tvarNode2;
        tvarNode2 = (TVar)nodeArrayList1.get(0);

        ptextblockbodypartNode1 = new AVarTextBlockBodyPart(tvarNode2);
        }
	nodeList.add(ptextblockbodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new43() /* reduce ATextInsertTextBlockBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTextBlockBodyPart ptextblockbodypartNode1;
        {
            // Block
        PTextInsert ptextinsertNode2;
        ptextinsertNode2 = (PTextInsert)nodeArrayList1.get(0);

        ptextblockbodypartNode1 = new ATextInsertTextBlockBodyPart(ptextinsertNode2);
        }
	nodeList.add(ptextblockbodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new44() /* reduce ATextBlockTextBlockBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTextBlockBodyPart ptextblockbodypartNode1;
        {
            // Block
        PTextBlock ptextblockNode2;
        ptextblockNode2 = (PTextBlock)nodeArrayList1.get(0);

        ptextblockbodypartNode1 = new ATextBlockTextBlockBodyPart(ptextblockNode2);
        }
	nodeList.add(ptextblockbodypartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new45() /* reduce ATextBlockTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
	nodeList.add(tidentifierNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new46() /* reduce AAparamlist1ParamList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParam pparamNode1;
        pparamNode1 = (PParam)nodeArrayList2.get(0);
	if(pparamNode1 != null)
	{
	  listNode2.add(pparamNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new47() /* reduce AAparamlist2ParamList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PParam pparamNode1;
        LinkedList listNode2 = new LinkedList();
        pparamNode1 = (PParam)nodeArrayList2.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(pparamNode1 != null)
	{
	  listNode3.add(pparamNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new48() /* reduce AAdditionalParam */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParam pparamNode1;
        pparamNode1 = (PParam)nodeArrayList2.get(0);
	nodeList.add(pparamNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new49() /* reduce AParam */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParam pparamNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pparamNode1 = new AParam(tidentifierNode2);
        }
	nodeList.add(pparamNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new50() /* reduce AAexpand1$Amacroreferencelist11Expand */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpand pexpandNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        PMacroReference pmacroreferenceNode2;
        pmacroreferenceNode2 = (PMacroReference)nodeArrayList2.get(0);
	if(pmacroreferenceNode2 != null)
	{
	  listNode3.add(pmacroreferenceNode2);
	}
        }
        {
            // Block
        }

        pexpandNode1 = new AExpand(listNode3, listNode4);
        }
	nodeList.add(pexpandNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new51() /* reduce AAexpand1$Amacroreferencelist21Expand */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpand pexpandNode1;
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        PMacroReference pmacroreferenceNode2;
        LinkedList listNode3 = new LinkedList();
        pmacroreferenceNode2 = (PMacroReference)nodeArrayList2.get(0);
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(pmacroreferenceNode2 != null)
	{
	  listNode4.add(pmacroreferenceNode2);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }

        pexpandNode1 = new AExpand(listNode4, listNode5);
        }
	nodeList.add(pexpandNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new52() /* reduce AAexpand2$Amacroreferencelist11Expand */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpand pexpandNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        PMacroReference pmacroreferenceNode2;
        pmacroreferenceNode2 = (PMacroReference)nodeArrayList2.get(0);
	if(pmacroreferenceNode2 != null)
	{
	  listNode3.add(pmacroreferenceNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pexpandNode1 = new AExpand(listNode3, listNode5);
        }
	nodeList.add(pexpandNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new53() /* reduce AAexpand2$Amacroreferencelist21Expand */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpand pexpandNode1;
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        {
            // Block
        PMacroReference pmacroreferenceNode2;
        LinkedList listNode3 = new LinkedList();
        pmacroreferenceNode2 = (PMacroReference)nodeArrayList2.get(0);
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(pmacroreferenceNode2 != null)
	{
	  listNode4.add(pmacroreferenceNode2);
	}
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pexpandNode1 = new AExpand(listNode4, listNode6);
        }
	nodeList.add(pexpandNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new54() /* reduce AAdditionalMacroReference */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMacroReference pmacroreferenceNode1;
        pmacroreferenceNode1 = (PMacroReference)nodeArrayList2.get(0);
	nodeList.add(pmacroreferenceNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new55() /* reduce AOption */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        POption poptionNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        PStaticValue pstaticvalueNode3;
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        pstaticvalueNode3 = (PStaticValue)nodeArrayList4.get(0);

        poptionNode1 = new AOption(tidentifierNode2, pstaticvalueNode3);
        }
	nodeList.add(poptionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new56() /* reduce AMacroReference */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMacroReference pmacroreferenceNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pmacroreferenceNode1 = new AMacroReference(tidentifierNode2);
        }
	nodeList.add(pmacroreferenceNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new57() /* reduce ATextInsert */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTextInsert ptextinsertNode1;
        ptextinsertNode1 = (PTextInsert)nodeArrayList2.get(0);
	nodeList.add(ptextinsertNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new58() /* reduce AAtextblockreference1TextBlockReference */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTextInsert ptextinsertNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode3 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        {
            // Block
        }

        ptextinsertNode1 = new ATextInsert(tidentifierNode2, listNode3);
        }
	nodeList.add(ptextinsertNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new59() /* reduce AAtextblockreference2TextBlockReference */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTextInsert ptextinsertNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode4 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ptextinsertNode1 = new ATextInsert(tidentifierNode2, listNode4);
        }
	nodeList.add(ptextinsertNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new60() /* reduce AAarglist1ArgList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PStaticValue pstaticvalueNode1;
        pstaticvalueNode1 = (PStaticValue)nodeArrayList2.get(0);
	if(pstaticvalueNode1 != null)
	{
	  listNode2.add(pstaticvalueNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new61() /* reduce AAarglist2ArgList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PStaticValue pstaticvalueNode1;
        LinkedList listNode2 = new LinkedList();
        pstaticvalueNode1 = (PStaticValue)nodeArrayList2.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(pstaticvalueNode1 != null)
	{
	  listNode3.add(pstaticvalueNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new62() /* reduce AAdditionalStaticValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStaticValue pstaticvalueNode1;
        pstaticvalueNode1 = (PStaticValue)nodeArrayList2.get(0);
	nodeList.add(pstaticvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new63() /* reduce ATextBlockReferenceStaticValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStaticValue pstaticvalueNode1;
        {
            // Block
        PTextInsert ptextinsertNode2;
        ptextinsertNode2 = (PTextInsert)nodeArrayList1.get(0);

        pstaticvalueNode1 = new ATextInsertStaticValue(ptextinsertNode2);
        }
	nodeList.add(pstaticvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new64() /* reduce AVarStaticValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStaticValue pstaticvalueNode1;
        {
            // Block
        TVar tvarNode2;
        tvarNode2 = (TVar)nodeArrayList1.get(0);

        pstaticvalueNode1 = new AVarStaticValue(tvarNode2);
        }
	nodeList.add(pstaticvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new65() /* reduce AStringStaticValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStaticValue pstaticvalueNode1;
        {
            // Block
        PString pstringNode2;
        pstringNode2 = (PString)nodeArrayList1.get(0);

        pstaticvalueNode1 = new AStringStaticValue(pstringNode2);
        }
	nodeList.add(pstaticvalueNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new66() /* reduce AAstring1String */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PString pstringNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pstringNode1 = new AString(listNode2);
        }
	nodeList.add(pstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new67() /* reduce AAstring2String */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PString pstringNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pstringNode1 = new AString(listNode3);
        }
	nodeList.add(pstringNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new68() /* reduce ATextStringPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStringPart pstringpartNode1;
        {
            // Block
        TStringText tstringtextNode2;
        tstringtextNode2 = (TStringText)nodeArrayList1.get(0);

        pstringpartNode1 = new ATextStringPart(tstringtextNode2);
        }
	nodeList.add(pstringpartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new69() /* reduce AEscapeStringPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStringPart pstringpartNode1;
        {
            // Block
        TStringEscape tstringescapeNode2;
        tstringescapeNode2 = (TStringEscape)nodeArrayList1.get(0);

        pstringpartNode1 = new AEscapeStringPart(tstringescapeNode2);
        }
	nodeList.add(pstringpartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new70() /* reduce ATerminal$SourceFilePart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PSourceFilePart psourcefilepartNode1;
        psourcefilepartNode1 = (PSourceFilePart)nodeArrayList1.get(0);
	if(psourcefilepartNode1 != null)
	{
	  listNode2.add(psourcefilepartNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new71() /* reduce ANonTerminal$SourceFilePart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PSourceFilePart psourcefilepartNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        psourcefilepartNode2 = (PSourceFilePart)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(psourcefilepartNode2 != null)
	{
	  listNode3.add(psourcefilepartNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new72() /* reduce ATerminal$LongCommentPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new73() /* reduce ANonTerminal$LongCommentPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new74() /* reduce ATerminal$MacroBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PMacroBodyPart pmacrobodypartNode1;
        pmacrobodypartNode1 = (PMacroBodyPart)nodeArrayList1.get(0);
	if(pmacrobodypartNode1 != null)
	{
	  listNode2.add(pmacrobodypartNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new75() /* reduce ANonTerminal$MacroBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PMacroBodyPart pmacrobodypartNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pmacrobodypartNode2 = (PMacroBodyPart)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pmacrobodypartNode2 != null)
	{
	  listNode3.add(pmacrobodypartNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new76() /* reduce ATerminal$TextBlockBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTextBlockBodyPart ptextblockbodypartNode1;
        ptextblockbodypartNode1 = (PTextBlockBodyPart)nodeArrayList1.get(0);
	if(ptextblockbodypartNode1 != null)
	{
	  listNode2.add(ptextblockbodypartNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new77() /* reduce ANonTerminal$TextBlockBodyPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PTextBlockBodyPart ptextblockbodypartNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptextblockbodypartNode2 = (PTextBlockBodyPart)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptextblockbodypartNode2 != null)
	{
	  listNode3.add(ptextblockbodypartNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new78() /* reduce ATerminal$AdditionalParam */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParam pparamNode1;
        pparamNode1 = (PParam)nodeArrayList1.get(0);
	if(pparamNode1 != null)
	{
	  listNode2.add(pparamNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new79() /* reduce ANonTerminal$AdditionalParam */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParam pparamNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparamNode2 = (PParam)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparamNode2 != null)
	{
	  listNode3.add(pparamNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new80() /* reduce ATerminal$Option */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        POption poptionNode1;
        poptionNode1 = (POption)nodeArrayList1.get(0);
	if(poptionNode1 != null)
	{
	  listNode2.add(poptionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new81() /* reduce ANonTerminal$Option */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        POption poptionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        poptionNode2 = (POption)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(poptionNode2 != null)
	{
	  listNode3.add(poptionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new82() /* reduce ATerminal$AdditionalMacroReference */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PMacroReference pmacroreferenceNode1;
        pmacroreferenceNode1 = (PMacroReference)nodeArrayList1.get(0);
	if(pmacroreferenceNode1 != null)
	{
	  listNode2.add(pmacroreferenceNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new83() /* reduce ANonTerminal$AdditionalMacroReference */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PMacroReference pmacroreferenceNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pmacroreferenceNode2 = (PMacroReference)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pmacroreferenceNode2 != null)
	{
	  listNode3.add(pmacroreferenceNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new84() /* reduce ATerminal$AdditionalStaticValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PStaticValue pstaticvalueNode1;
        pstaticvalueNode1 = (PStaticValue)nodeArrayList1.get(0);
	if(pstaticvalueNode1 != null)
	{
	  listNode2.add(pstaticvalueNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new85() /* reduce ANonTerminal$AdditionalStaticValue */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PStaticValue pstaticvalueNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pstaticvalueNode2 = (PStaticValue)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pstaticvalueNode2 != null)
	{
	  listNode3.add(pstaticvalueNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new86() /* reduce ATerminal$StringPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PStringPart pstringpartNode1;
        pstringpartNode1 = (PStringPart)nodeArrayList1.get(0);
	if(pstringpartNode1 != null)
	{
	  listNode2.add(pstringpartNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new87() /* reduce ANonTerminal$StringPart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PStringPart pstringpartNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pstringpartNode2 = (PStringPart)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pstringpartNode2 != null)
	{
	  listNode3.add(pstringpartNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, REDUCE, 0}, {0, SHIFT, 1}, {1, SHIFT, 2}, {5, SHIFT, 3}, {7, SHIFT, 4}, {28, SHIFT, 5}, },
			{{-1, ERROR, 1}, {19, SHIFT, 15}, },
			{{-1, ERROR, 2}, {19, SHIFT, 16}, },
			{{-1, ERROR, 3}, {6, SHIFT, 17}, {12, SHIFT, 18}, },
			{{-1, ERROR, 4}, {7, SHIFT, 4}, {8, SHIFT, 19}, {13, SHIFT, 20}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 6}, {30, ACCEPT, -1}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 17}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 24}, {3, SHIFT, 25}, {5, SHIFT, 3}, {7, SHIFT, 4}, {9, SHIFT, 26}, {14, SHIFT, 27}, {15, SHIFT, 28}, {16, SHIFT, 29}, {17, SHIFT, 30}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 34}, {1, SHIFT, 2}, {3, SHIFT, 25}, {5, SHIFT, 3}, {7, SHIFT, 4}, {9, SHIFT, 40}, {14, SHIFT, 41}, {15, SHIFT, 42}, {16, SHIFT, 43}, {17, SHIFT, 44}, },
			{{-1, REDUCE, 1}, {0, SHIFT, 1}, {1, SHIFT, 2}, {5, SHIFT, 3}, {7, SHIFT, 4}, {28, SHIFT, 52}, },
			{{-1, ERROR, 15}, {6, SHIFT, 54}, {21, SHIFT, 55}, },
			{{-1, ERROR, 16}, {6, SHIFT, 57}, {21, SHIFT, 55}, },
			{{-1, REDUCE, 8}, },
			{{-1, ERROR, 18}, {6, SHIFT, 59}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 72}, },
			{{-1, ERROR, 23}, {7, SHIFT, 4}, {8, SHIFT, 60}, {13, SHIFT, 20}, },
			{{-1, ERROR, 24}, {19, SHIFT, 62}, },
			{{-1, ERROR, 25}, {19, SHIFT, 64}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 27}, },
			{{-1, ERROR, 34}, {4, SHIFT, 66}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 18}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 24}, {3, SHIFT, 25}, {5, SHIFT, 3}, {7, SHIFT, 4}, {9, SHIFT, 26}, {14, SHIFT, 27}, {15, SHIFT, 28}, {16, SHIFT, 29}, {17, SHIFT, 30}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 44}, },
			{{-1, ERROR, 48}, {4, SHIFT, 69}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 35}, {1, SHIFT, 2}, {3, SHIFT, 25}, {5, SHIFT, 3}, {7, SHIFT, 4}, {9, SHIFT, 40}, {14, SHIFT, 41}, {15, SHIFT, 42}, {16, SHIFT, 43}, {17, SHIFT, 44}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 55}, {19, SHIFT, 72}, },
			{{-1, ERROR, 56}, {6, SHIFT, 74}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 58}, {6, SHIFT, 75}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 56}, },
			{{-1, ERROR, 63}, {6, SHIFT, 76}, {23, SHIFT, 77}, },
			{{-1, REDUCE, 58}, {21, SHIFT, 82}, },
			{{-1, ERROR, 65}, {6, SHIFT, 84}, },
			{{-1, ERROR, 66}, {19, SHIFT, 85}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 75}, },
			{{-1, ERROR, 69}, {19, SHIFT, 86}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 49}, },
			{{-1, ERROR, 73}, {22, SHIFT, 87}, {23, SHIFT, 88}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 50}, },
			{{-1, ERROR, 77}, {19, SHIFT, 91}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 80}, },
			{{-1, ERROR, 80}, {6, SHIFT, 93}, {23, SHIFT, 94}, },
			{{-1, ERROR, 81}, {6, SHIFT, 96}, {23, SHIFT, 77}, },
			{{-1, ERROR, 82}, {17, SHIFT, 99}, {19, SHIFT, 64}, {25, SHIFT, 100}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 57}, },
			{{-1, ERROR, 85}, {6, SHIFT, 104}, },
			{{-1, ERROR, 86}, {6, SHIFT, 105}, },
			{{-1, REDUCE, 46}, },
			{{-1, ERROR, 88}, {19, SHIFT, 72}, },
			{{-1, REDUCE, 78}, },
			{{-1, ERROR, 90}, {22, SHIFT, 107}, {23, SHIFT, 88}, },
			{{-1, REDUCE, 56}, {24, SHIFT, 109}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 52}, },
			{{-1, ERROR, 94}, {19, SHIFT, 110}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 83}, },
			{{-1, ERROR, 98}, {6, SHIFT, 111}, {23, SHIFT, 94}, },
			{{-1, REDUCE, 64}, },
			{{-1, ERROR, 100}, {25, SHIFT, 112}, {26, SHIFT, 113}, {27, SHIFT, 114}, },
			{{-1, REDUCE, 63}, },
			{{-1, ERROR, 102}, {22, SHIFT, 117}, {23, SHIFT, 118}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 79}, },
			{{-1, ERROR, 109}, {17, SHIFT, 99}, {19, SHIFT, 64}, {25, SHIFT, 100}, },
			{{-1, ERROR, 110}, {24, SHIFT, 109}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 116}, {25, SHIFT, 122}, {26, SHIFT, 113}, {27, SHIFT, 114}, },
			{{-1, REDUCE, 60}, },
			{{-1, ERROR, 118}, {17, SHIFT, 99}, {19, SHIFT, 64}, {25, SHIFT, 100}, },
			{{-1, REDUCE, 84}, },
			{{-1, ERROR, 120}, {22, SHIFT, 125}, {23, SHIFT, 118}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 87}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 85}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 6}, },
			{{-1, 7}, {14, 53}, },
			{{-1, 8}, {11, 31}, {13, 45}, {39, 31}, {51, 45}, },
			{{-1, 9}, {4, 21}, {11, 32}, {13, 46}, {23, 21}, {39, 32}, {51, 46}, },
			{{-1, 22}, {23, 61}, },
			{{-1, 10}, {11, 33}, {39, 33}, },
			{{-1, 11}, },
			{{-1, 34}, },
			{{-1, 35}, {39, 68}, },
			{{-1, 67}, },
			{{-1, 12}, {11, 36}, {13, 47}, {39, 36}, {51, 47}, },
			{{-1, 13}, },
			{{-1, 48}, },
			{{-1, 49}, {51, 71}, },
			{{-1, 70}, },
			{{-1, 56}, {16, 58}, },
			{{-1, 89}, {90, 108}, },
			{{-1, 73}, {88, 106}, },
			{{-1, 37}, },
			{{-1, 78}, {81, 97}, },
			{{-1, 79}, {80, 95}, {98, 95}, },
			{{-1, 63}, {77, 92}, },
			{{-1, 38}, {13, 50}, {51, 50}, },
			{{-1, 101}, {25, 65}, },
			{{-1, 83}, },
			{{-1, 119}, {120, 126}, },
			{{-1, 102}, {109, 121}, {118, 124}, },
			{{-1, 103}, },
			{{-1, 115}, {116, 123}, },
			{{-1, 14}, },
			{{-1, 23}, },
			{{-1, 39}, },
			{{-1, 51}, },
			{{-1, 90}, },
			{{-1, 80}, {81, 98}, },
			{{-1, 81}, },
			{{-1, 120}, },
			{{-1, 116}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: '$macro:', '$text:', '$comment:', '$comment$', ctrl z, EOF",
			"expecting: identifier",
			"expecting: command tail, short comment text",
			"expecting: '$comment$', long comment end, long comment text",
			"expecting: EOF",
			"expecting: '$macro:', '$text:', '$expand:', '$insert:', '$end:', '$comment:', '$comment$', no eol, text, eol, escape, var",
			"expecting: '$text:', '$insert:', '$end:', '$comment:', '$comment$', no eol, text, eol, escape, var",
			"expecting: command tail, '('",
			"expecting: '$macro:', '$text:', '$expand:', '$insert:', '$end:', '$comment:', '$comment$', no eol, text, eol, escape, var, ctrl z, EOF",
			"expecting: command tail",
			"expecting: '$macro:', '$text:', '$expand:', '$insert:', '$end:', '$comment:', '$comment$', long comment end, no eol, long comment text, text, eol, escape, var, ctrl z, EOF",
			"expecting: '$end:'",
			"expecting: command tail, ','",
			"expecting: command tail, '(', ')', ','",
			"expecting: ')', ','",
			"expecting: var, identifier, '"'",
			"expecting: command tail, ')', ','",
			"expecting: command tail, ',', '='",
			"expecting: '"', string text, string escape",
			"expecting: '='",
        };*/
    private static int[] errors;
/*      {
			0, 1, 1, 2, 3, 4, 4, 0, 0, 0, 0, 5, 0, 6, 0, 7, 7, 8, 9, 10, 3, 3, 3, 3, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 11, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 11, 6, 6, 6, 4, 0, 5, 1, 9, 6, 9, 8, 10, 3, 12, 12, 13, 9, 1, 8, 5, 1, 8, 6, 14, 14, 5, 6, 5, 1, 12, 12, 12, 12, 15, 16, 5, 9, 9, 9, 1, 14, 14, 17, 12, 5, 1, 12, 5, 12, 12, 16, 18, 16, 14, 16, 8, 8, 14, 9, 14, 15, 19, 5, 16, 18, 18, 18, 18, 16, 15, 14, 14, 12, 16, 18, 14, 16, 14, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
