/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.objectmacro.launcher.syntax3.analysis;

import java.util.*;
import org.sablecc.objectmacro.launcher.syntax3.node.*;

public class ReversedDepthFirstAdapter extends AnalysisAdapter
{
    public void inStart(Start node)
    {
        defaultIn(node);
    }

    public void outStart(Start node)
    {
        defaultOut(node);
    }

    public void defaultIn(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    public void defaultOut(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    @Override
    public void caseStart(Start node)
    {
        inStart(node);
        node.getEOF().apply(this);
        node.getPArgument().apply(this);
        outStart(node);
    }

    public void inAShortOptionsArgument(AShortOptionsArgument node)
    {
        defaultIn(node);
    }

    public void outAShortOptionsArgument(AShortOptionsArgument node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAShortOptionsArgument(AShortOptionsArgument node)
    {
        inAShortOptionsArgument(node);
        {
            List<PShortOption> copy = new ArrayList<PShortOption>(node.getShortOptions());
            Collections.reverse(copy);
            for(PShortOption e : copy)
            {
                e.apply(this);
            }
        }
        outAShortOptionsArgument(node);
    }

    public void inALongOptionArgument(ALongOptionArgument node)
    {
        defaultIn(node);
    }

    public void outALongOptionArgument(ALongOptionArgument node)
    {
        defaultOut(node);
    }

    @Override
    public void caseALongOptionArgument(ALongOptionArgument node)
    {
        inALongOptionArgument(node);
        if(node.getLongOption() != null)
        {
            node.getLongOption().apply(this);
        }
        outALongOptionArgument(node);
    }

    public void inAPlainArgument(APlainArgument node)
    {
        defaultIn(node);
    }

    public void outAPlainArgument(APlainArgument node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPlainArgument(APlainArgument node)
    {
        inAPlainArgument(node);
        if(node.getText() != null)
        {
            node.getText().apply(this);
        }
        outAPlainArgument(node);
    }

    public void inAShortOption(AShortOption node)
    {
        defaultIn(node);
    }

    public void outAShortOption(AShortOption node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAShortOption(AShortOption node)
    {
        inAShortOption(node);
        if(node.getOperand() != null)
        {
            node.getOperand().apply(this);
        }
        if(node.getShortName() != null)
        {
            node.getShortName().apply(this);
        }
        outAShortOption(node);
    }

    public void inALongOption(ALongOption node)
    {
        defaultIn(node);
    }

    public void outALongOption(ALongOption node)
    {
        defaultOut(node);
    }

    @Override
    public void caseALongOption(ALongOption node)
    {
        inALongOption(node);
        if(node.getOperand() != null)
        {
            node.getOperand().apply(this);
        }
        if(node.getLongName() != null)
        {
            node.getLongName().apply(this);
        }
        outALongOption(node);
    }

    public void inAOperand(AOperand node)
    {
        defaultIn(node);
    }

    public void outAOperand(AOperand node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAOperand(AOperand node)
    {
        inAOperand(node);
        if(node.getOperandText() != null)
        {
            node.getOperandText().apply(this);
        }
        outAOperand(node);
    }
}
