/* This file was generated by SableCC ( http://sablecc.org ). */

package language_minilang;

public class NC_And
    extends NC {

  private final int line;
  private final int pos;
  private final NE eLeft;
  private final N$15 e$15;
  private final NC eRight;

  @Override
  public int getLine() {
    return this.line;
  }

  @Override
  public int getPos() {
    return this.pos;
  }

  @Override
  public String getText() {
    return null;
  }

  @Override
  public void apply(Walker walker) {
    walker.inC_And(this);
    walker.caseC_And(this);
    walker.outC_And(this);
  }

  @Override
  public void applyOnChildren(Walker walker) {
    this.eLeft.apply(walker);
    this.e$15.apply(walker);
    this.eRight.apply(walker);
  }

  NC_And(int line, int pos, NE pLeft, N$15 p$15, NC pRight) {
    this.line = line;
    this.pos = pos;
    this.eLeft = pLeft;
    this.e$15 = p$15;
    this.eRight = pRight;
  }

  @Override
  public Type getType() {
    return Type.T_C_And;
  }

  @Override
  public ProductionType getProductionType() {
    return ProductionType.T_C;
  }

  @Override
  InternalType getInternalType() {
    return InternalType.T_C_And;
  }

  public NE get_Left() {
    return this.eLeft;
  }

  public NC get_Right() {
    return this.eRight;
  }

  NE internalGetLeft() {
    return this.eLeft;
  }

  N$15 internalGet$15() {
    return this.e$15;
  }

  NC internalGetRight() {
    return this.eRight;
  }
}
