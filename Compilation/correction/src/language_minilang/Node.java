/* This file was generated by SableCC ( http://sablecc.org ). */

package language_minilang;

public abstract class Node {

  public abstract Type getType();

  public static enum Type {
    T_Int,
    T_Str,
    T_Stmt_Print,
    T_Stmt_Stmts,
    T_Expr_Int,
    T_Expr_Str,
    TEnd,
    TAnonymous;
  }

  public abstract ProductionType getProductionType();

  public static enum ProductionType {
    T_$Start,
    T_Prog,
    T_Stmt,
    T_Expr,
    TNotAProduction;
  }

  public abstract String getText();
  public abstract int getLine();
  public abstract int getPos();
  public abstract void apply(Walker walker);
  public abstract void applyOnChildren(Walker walker);

  private Node parent;

  public Node getParent() {
    return this.parent;
  }

  void setParent(Node parent) {
    this.parent = parent;
  }

  @Override
  public String toString() {
    return "\"" + getText() + "\"@(" + getLine() + "," + getPos() + ")";
  }

  abstract InternalType getInternalType();

  static enum InternalType {
    T_$0,
    T_$1,
    T_$2,
    T_Int,
    T_Str,
    T_$Start,
    T_Prog_$1,
    T_Prog_$2,
    T_Stmt_Print,
    T_Stmt_Stmts,
    T_Expr_Int,
    T_Expr_Str,
    TEnd;
  }
}
